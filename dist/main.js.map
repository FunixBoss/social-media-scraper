{"version":3,"file":"main.js","mappings":"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":["./src/app/@core/core.module.ts","./src/app/@core/guard/authentication.guard.ts","./src/app/@core/interceptors/auth-interceptor.service.ts","./src/app/@core/models/account/account.model.ts","./src/app/@core/models/address/address.model.ts","./src/app/@core/models/address/districts.model.ts","./src/app/@core/models/address/provinces.model.ts","./src/app/@core/models/address/wards.model.ts","./src/app/@core/models/coupon/coupon.model.ts","./src/app/@core/models/order/order.model.ts","./src/app/@core/models/order/payment-method.model.ts","./src/app/@core/models/product/catalog.model.ts","./src/app/@core/models/product/planting-difficulty-level.model.ts","./src/app/@core/models/product/product.model.ts","./src/app/@core/models/sale/product-sale.model.ts","./src/app/@core/module-import-guard.ts","./src/app/@core/services/account/account.service.ts","./src/app/@core/services/account/address.service.ts","./src/app/@core/services/account/authentication.service.ts","./src/app/@core/services/account/contact.service.ts","./src/app/@core/services/base-url.service.ts","./src/app/@core/services/order/order-status.service.ts","./src/app/@core/services/order/order.service.ts","./src/app/@core/services/order/payment-method.service.ts","./src/app/@core/services/orders-profit-chart/orders-chart.service.ts","./src/app/@core/services/orders-profit-chart/orders-profit-chart.service.ts","./src/app/@core/services/orders-profit-chart/profit-chart.service.ts","./src/app/@core/services/periods.service.ts","./src/app/@core/services/product/planting-difficulty-level.service.ts","./src/app/@core/services/product/product-catalog.service.ts","./src/app/@core/services/product/product-coupon.service.ts","./src/app/@core/services/product/product-review.service.ts","./src/app/@core/services/product/product-sale.service.ts","./src/app/@core/services/product/product-size.service.ts","./src/app/@core/services/product/product.service.ts","./src/app/@core/services/progress-bar-chart/progress-info.service.ts","./src/app/@core/services/service-data.module.ts","./src/app/@core/services/users.service.ts","./src/app/@core/services/utils.service.ts","./src/app/@core/utils/analytics.service.ts","./src/app/@core/utils/image-storing-directory.ts","./src/app/@core/utils/index.ts","./src/app/@core/utils/layout.service.ts","./src/app/@core/utils/seo.service.ts","./src/app/@core/utils/state.service.ts","./src/app/@core/validators/custom-validator.ts","./src/app/@theme/components/footer/footer.component.ts","./src/app/@theme/components/header/header.component.ts","./src/app/@theme/components/header/header.component.html","./src/app/@theme/components/index.ts","./src/app/@theme/layouts/index.ts","./src/app/@theme/layouts/one-column/one-column.layout.ts","./src/app/@theme/pipes/capitalize.pipe.ts","./src/app/@theme/pipes/index.ts","./src/app/@theme/pipes/number-with-commas.pipe.ts","./src/app/@theme/pipes/plural.pipe.ts","./src/app/@theme/pipes/pretty-print-json.pipe.ts","./src/app/@theme/pipes/round.pipe.ts","./src/app/@theme/pipes/timing.pipe.ts","./src/app/@theme/styles/theme.dark.ts","./src/app/@theme/styles/theme.default.ts","./src/app/@theme/theme.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/pages/customers/customer-contact/custom-customer-contact-action.component.ts","./src/app/pages/customers/customer-contact/customer-contact.component.ts","./src/app/pages/customers/customer-contact/customer-contact.component.html","./src/app/pages/customers/customer-detail/customer-detail-basic/customer-detail-basic.component.ts","./src/app/pages/customers/customer-detail/customer-detail-basic/customer-detail-basic.component.html","./src/app/pages/customers/customer-detail/customer-detail-comments/customer-detail-comments.component.ts","./src/app/pages/customers/customer-detail/customer-detail-comments/customer-detail-comments.component.html","./src/app/pages/customers/customer-detail/customer-detail-orders/customer-detail-orders.component.ts","./src/app/pages/customers/customer-detail/customer-detail-orders/customer-detail-orders.component.html","./src/app/pages/customers/customer-detail/customer-detail.component.ts","./src/app/pages/customers/customer-detail/customer-detail.component.html","./src/app/pages/customers/customer-list/custom/custom-customer-action/custom-customer-action.component.ts","./src/app/pages/customers/customer-list/custom/custom-customer-action/custom-customer-action.component.html","./src/app/pages/customers/customer-list/custom/custom-customer-active-action.component.ts","./src/app/pages/customers/customer-list/custom/custom-customer-filter-actions/custom-customer-filter-actions.component.ts","./src/app/pages/customers/customer-list/custom/custom-customer-filter-actions/custom-customer-filter-actions.component.html","./src/app/pages/customers/customer-list/custom/custom-customer-image.component.ts","./src/app/pages/customers/customer-list/customer-list-multi/customer-list-multi.component.ts","./src/app/pages/customers/customer-list/customer-list-multi/customer-list-multi.component.html","./src/app/pages/customers/customer-list/customer-list.component.ts","./src/app/pages/customers/customer-list/customer-list.component.html","./src/app/pages/customers/customers-routing.module.ts","./src/app/pages/customers/customers.component.ts","./src/app/pages/customers/customers.module.ts","./src/app/pages/dashboard/change-profile/change-profile.component.ts","./src/app/pages/dashboard/change-profile/change-profile.component.html","./src/app/pages/dashboard/charts-panel/chart-panel-header/chart-panel-header.component.ts","./src/app/pages/dashboard/charts-panel/chart-panel-header/chart-panel-header.component.html","./src/app/pages/dashboard/charts-panel/chart-panel-summary/chart-panel-summary.component.ts","./src/app/pages/dashboard/charts-panel/charts-panel.component.ts","./src/app/pages/dashboard/charts-panel/charts-panel.component.html","./src/app/pages/dashboard/charts-panel/charts/orders-chart.component.ts","./src/app/pages/dashboard/charts-panel/legend-chart/legend-chart.component.ts","./src/app/pages/dashboard/charts-panel/legend-chart/legend-chart.component.html","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.component.html","./src/app/pages/dashboard/dashboard.module.ts","./src/app/pages/dashboard/slide-out/slide-out.component.ts","./src/app/pages/dashboard/slide-out/slide-out.component.html","./src/app/pages/dashboard/status-card/status-card.component.ts","./src/app/pages/orders/order-add/order-add.component.ts","./src/app/pages/orders/order-add/order-add.component.html","./src/app/pages/orders/order-detail/order-detail.component.ts","./src/app/pages/orders/order-detail/order-detail.component.html","./src/app/pages/orders/order-list/custom/custom-order-action.component.ts","./src/app/pages/orders/order-list/custom/custom-order-filter-actions.component.ts","./src/app/pages/orders/order-list/custom/custom-order-status-action.component.ts","./src/app/pages/orders/order-list/order-list.component.ts","./src/app/pages/orders/order-list/order-list.component.html","./src/app/pages/orders/orders-routing.module.ts","./src/app/pages/orders/orders.component.ts","./src/app/pages/orders/orders.module.ts","./src/app/pages/pages-menu.ts","./src/app/pages/pages-routing.module.ts","./src/app/pages/pages.component.ts","./src/app/pages/pages.module.ts","./src/app/pages/products/images-carousel.component.ts","./src/app/pages/products/product-add/product-add.component.ts","./src/app/pages/products/product-add/product-add.component.html","./src/app/pages/products/product-catalog/custom/custom-catalog-action.component.ts","./src/app/pages/products/product-catalog/custom/custom-catalog-filter-actions.component.ts","./src/app/pages/products/product-catalog/custom/custom-catalog-image.component.ts","./src/app/pages/products/product-catalog/product-catalog-add/product-catalog-add.component.ts","./src/app/pages/products/product-catalog/product-catalog-add/product-catalog-add.component.html","./src/app/pages/products/product-catalog/product-catalog-edit/product-catalog-edit.component.ts","./src/app/pages/products/product-catalog/product-catalog-edit/product-catalog-edit.component.html","./src/app/pages/products/product-catalog/product-catalog.component.ts","./src/app/pages/products/product-catalog/product-catalog.component.html","./src/app/pages/products/product-coupon/custom/custom-coupon-action.component.ts","./src/app/pages/products/product-coupon/custom/custom-coupon-filter-actions.component.ts","./src/app/pages/products/product-coupon/product-coupon-add/product-coupon-add.component.ts","./src/app/pages/products/product-coupon/product-coupon-add/product-coupon-add.component.html","./src/app/pages/products/product-coupon/product-coupon-edit/product-coupon-edit.component.ts","./src/app/pages/products/product-coupon/product-coupon-edit/product-coupon-edit.component.html","./src/app/pages/products/product-coupon/product-coupon.component.ts","./src/app/pages/products/product-coupon/product-coupon.component.html","./src/app/pages/products/product-detail/product-detail-basic/product-detail-basic.component.ts","./src/app/pages/products/product-detail/product-detail-basic/product-detail-basic.component.html","./src/app/pages/products/product-detail/product-detail-care-guide/product-detail-care-guide.component.ts","./src/app/pages/products/product-detail/product-detail-care-guide/product-detail-care-guide.component.html","./src/app/pages/products/product-detail/product-detail-comments/product-detail-comments.component.ts","./src/app/pages/products/product-detail/product-detail-comments/product-detail-comments.component.html","./src/app/pages/products/product-detail/product-detail.component.ts","./src/app/pages/products/product-detail/product-detail.component.html","./src/app/pages/products/product-edit/product-edit.component.ts","./src/app/pages/products/product-edit/product-edit.component.html","./src/app/pages/products/product-list/custom/custom-product-action.component.ts","./src/app/pages/products/product-list/custom/custom-product-action.component.html","./src/app/pages/products/product-list/custom/custom-product-filter-actions.component.ts","./src/app/pages/products/product-list/custom/custom-product-status-filter.component.ts","./src/app/pages/products/product-list/custom/custom-product-status.component.ts","./src/app/pages/products/product-list/product-list-multi/product-list-multi.component.ts","./src/app/pages/products/product-list/product-list-multi/product-list-multi.component.html","./src/app/pages/products/product-list/product-list.component.ts","./src/app/pages/products/product-list/product-list.component.html","./src/app/pages/products/product-sale/custom/custom-sale-action.component.ts","./src/app/pages/products/product-sale/custom/custom-sale-active-action.component.ts","./src/app/pages/products/product-sale/custom/custom-sale-filter-actions.component.ts","./src/app/pages/products/product-sale/product-sale-add/product-sale-add.component.ts","./src/app/pages/products/product-sale/product-sale-add/product-sale-add.component.html","./src/app/pages/products/product-sale/product-sale-edit/product-sale-edit.component.ts","./src/app/pages/products/product-sale/product-sale-edit/product-sale-edit.component.html","./src/app/pages/products/product-sale/product-sale-multi/product-sale-multi.component.ts","./src/app/pages/products/product-sale/product-sale-multi/product-sale-multi.component.html","./src/app/pages/products/product-sale/product-sale.component.ts","./src/app/pages/products/product-sale/product-sale.component.html","./src/app/pages/products/products-routing.module.ts","./src/app/pages/products/products.component.ts","./src/app/pages/products/products.module.ts","./src/app/pages/products/shared/form-basic-information/form-basic-information.component.ts","./src/app/pages/products/shared/form-basic-information/form-basic-information.component.html","./src/app/pages/products/shared/form-care-guide/form-care-guide.component.ts","./src/app/pages/products/shared/form-care-guide/form-care-guide.component.html","./src/app/pages/products/shared/form-variants/form-variants.component.ts","./src/app/pages/products/shared/form-variants/form-variants.component.html","./src/app/pages/shared/item-of-list/item-of-list.component.ts","./src/app/pages/shared/item-of-list/item-of-list.component.html","./src/app/pages/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts","./node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["import { PRODUCT_IMAGE_DIRECTORY } from './utils/image-storing-directory';\r\nimport { ModuleWithProviders, NgModule, Optional, Provider, SkipSelf } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NbAuthModule, NbDummyAuthStrategy } from '@nebular/auth';\r\nimport { NbSecurityModule, NbRoleProvider } from '@nebular/security';\r\nimport { of as observableOf } from 'rxjs';\r\n\r\nimport { throwIfAlreadyLoaded } from './module-import-guard';\r\nimport {\r\n  AnalyticsService,\r\n  LayoutService,\r\n  SeoService,\r\n  StateService,\r\n} from './utils';\r\n\r\nimport { UserService } from './services/users.service';\r\nimport { OrdersChartService } from './services/orders-profit-chart/orders-chart.service';\r\nimport { ProfitChartService } from './services/orders-profit-chart/profit-chart.service';\r\nimport { OrdersProfitChartService } from './services/orders-profit-chart/orders-profit-chart.service';\r\nimport { ProgressInfoService } from './services/progress-bar-chart/progress-info.service';\r\nimport { ServiceDataModule } from './services/service-data.module';\r\nimport { AccountService } from './services/account/account.service';\r\n\r\n\r\n\r\nconst SERVICES: Provider[] = [\r\n  UserService,\r\n  OrdersChartService,\r\n  ProfitChartService,\r\n  OrdersProfitChartService,\r\n  ProgressInfoService,\r\n  AccountService\r\n];\r\n\r\nexport class NbSimpleRoleProvider extends NbRoleProvider {\r\n  getRole() {\r\n    // here you could provide any role based on any auth flow\r\n    return observableOf('guest');\r\n  }\r\n}\r\n\r\nexport const NB_CORE_PROVIDERS = [\r\n  ...SERVICES,\r\n  ...ServiceDataModule.forRoot().providers,\r\n  ...NbAuthModule.forRoot({\r\n\r\n    strategies: [\r\n      NbDummyAuthStrategy.setup({\r\n        name: 'email',\r\n        delay: 3000,\r\n      }),\r\n    ],\r\n    forms: {\r\n      login: {\r\n      },\r\n      register: {\r\n      },\r\n    },\r\n  }).providers,\r\n\r\n  NbSecurityModule.forRoot({\r\n    accessControl: {\r\n      guest: {\r\n        view: '*',\r\n      },\r\n      user: {\r\n        parent: 'guest',\r\n        create: '*',\r\n        edit: '*',\r\n        remove: '*',\r\n      },\r\n    },\r\n  }).providers,\r\n\r\n  {\r\n    provide: NbRoleProvider, useClass: NbSimpleRoleProvider,\r\n  },\r\n  AnalyticsService,\r\n  LayoutService,\r\n  SeoService,\r\n  StateService,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  exports: [\r\n    NbAuthModule,\r\n  ],\r\n  declarations: [],\r\n})\r\nexport class CoreModule {\r\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\r\n    throwIfAlreadyLoaded(parentModule, 'CoreModule');\r\n  }\r\n\r\n  static forRoot(): ModuleWithProviders<CoreModule> {\r\n    return {\r\n      ngModule: CoreModule,\r\n      providers: [\r\n\r\n        ...NB_CORE_PROVIDERS,\r\n      ],\r\n    };\r\n  }\r\n  PRODUCT_IMAGE_DIRECTORY\r\n}\r\n","import { AuthenticationService } from './../services/account/authentication.service';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastState, UtilsService } from '../services/utils.service';\nimport { BaseURLService } from '../services/base-url.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationGuard implements CanActivate {\n\n  constructor(\n    private authenticationService: AuthenticationService,\n    private router: Router,\n    private utilsService: UtilsService,\n    private baseUrlService: BaseURLService\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n      console.log(this.baseUrlService.baseURL);\n      \n    return state.url.includes(\"/admin/auth/login\") || this.isAccountLoggedIn(state) ;\n  }\n\n  private isAccountLoggedIn(state: RouterStateSnapshot): boolean {\n    if(this.authenticationService.isLoggedIn()) return true;\n    \n    this.router.navigateByUrl('/admin/auth/login')\n\n    if(!(state.url == '/admin/dashboard')) {\n      setTimeout(() => {\n        this.utilsService.updateToastState(new ToastState('You need to log in to access this page!', \"danger\"))\n      }, 500);\n    }\n    return false;\n  }\n}\n","import { BaseURLService } from './../services/base-url.service';\r\nimport { AuthenticationService } from './../services/account/authentication.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpHeaders, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n        private authenticationService: AuthenticationService,\r\n        private baseUrlService: BaseURLService,\r\n    ) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if(request.url.includes(`${this.baseUrlService.baseURL}/admin/auth/login`)) {\r\n            return next.handle(request);\r\n        } \r\n        this.authenticationService.loadToken()\r\n        const token = this.authenticationService.getToken();\r\n\r\n        if(token != null) {\r\n            const requestClone = request.clone({setHeaders: { Authorization: `Bearer ${token}`}})\r\n            return next.handle(requestClone);\r\n        }\r\n        \r\n        return next.handle(request);\r\n    }\r\n}","import { Cart } from \"../cart/cart.model\";\r\nimport { Role } from \"./role.model\"\r\nimport { Wishlist } from \"./wishlist.model\";\r\nimport { Address } from \"../address/address.model\";\r\nimport { Order } from \"../order/order.model\";\r\nimport { Image } from \"../Image\";\r\nimport { ProductReview } from \"../product/product-review.model\";\r\n\r\nexport class Account {\r\n    id: number\r\n    username: string;\r\n    password?: string;   \r\n    fullName: string;\r\n    email: string;\r\n    phoneNumber: string;\r\n    role?: Role;\r\n    image?: Image;\r\n    active: boolean;\r\n    createdAt: Date\r\n    updatedAt: Date\r\n    address?: Address[]\r\n    cart?: Cart;\r\n    wishlist?: Wishlist[];\r\n    orders?: Order[]\r\n    totalOrders?: number;\r\n    productReviews?: ProductReview[]\r\n}","import { District } from \"./districts.model\";\r\nimport { Province } from \"./provinces.model\";\r\nimport { Ward } from \"./wards.model\";\r\n\r\nexport class Address {\r\n    addressId: number;\r\n    roadName: string;\r\n    ward?: Ward\r\n    district?: District\r\n    province?: Province\r\n}\r\n\r\nexport class GetAddressResponse { \r\n    _embedded: {\r\n        addresses: Address[]\r\n    }\r\n}","import { AdministrativeUnits } from \"./administrative-units.model\";\r\nimport { Province } from \"./provinces.model\";\r\n\r\nexport class District {\r\n    code: string;\r\n    name: string;\r\n    nameEn: string;\r\n    fullName: string;\r\n    fullNameEn: string;\r\n    codeName: string;\r\n    province?: Province;\r\n    administrativeUnit?: AdministrativeUnits\r\n}\r\n\r\nexport interface GetDistrictResponse {\r\n    _embedded: {\r\n        districts: District[]\r\n    }\r\n}","import { AdministrativeUnits } from \"./administrative-units.model\";\r\n\r\nexport class Province {\r\n    code: string;\r\n    name: string;\r\n    nameEn: string;\r\n    fullName: string;\r\n    fullNameEn: string;\r\n    codeName: string;\r\n    administrativeUnit: AdministrativeUnits\r\n}\r\n\r\nexport interface GetProvinceResponse {\r\n    _embedded: {\r\n        provinces: Province[]\r\n    }\r\n}","import { AdministrativeUnits } from \"./administrative-units.model\";\r\nimport { District } from \"./districts.model\";\r\n\r\nexport class Ward {\r\n    code: string;\r\n    name: string;\r\n    nameEn: string;\r\n    fullName: string;\r\n    fullNameEn: string;\r\n    codeName: string;\r\n    district?: District\r\n    administrativeUnit: AdministrativeUnits\r\n}\r\n\r\nexport interface GetWardResponse {\r\n    _embedded: {\r\n        wards: Ward[]\r\n    }\r\n}","import { Paging } from '../response-page';\r\nimport { CouponType } from \"./coupon-type.model\";\r\n\r\nexport class Coupon {\r\n    couponId: number;\r\n    code: string;\r\n    discount: number;\r\n    couponType: CouponType\r\n    description: string;\r\n    startedAt: Date;\r\n    expiredAt: Date;\r\n}\r\n\r\nexport class GetCouponResponse {\r\n    _embedded: {\r\n        coupons: Coupon[]\r\n    }\r\n    page: Paging\r\n}","import { Account } from \"../account/account.model\";\r\nimport { Address } from \"../address/address.model\";\r\nimport { Coupon } from \"../coupon/coupon.model\";\r\nimport { Product } from \"../product/product.model\";\r\nimport { OrderDetail } from \"./order-detail.model\";\r\nimport { OrderStatus } from \"./order-status.model\";\r\nimport { PaymentMethod } from \"./payment-method.model\";\r\n\r\nexport class Order {\r\n    orderId: number;\r\n    orderTrackingNumber: string;\r\n    accountEmail: string\r\n    address: string;\r\n    couponCode: string;\r\n    orderStatus?: OrderStatus\r\n    paymentMethod: PaymentMethod\r\n    totalPrice: number;\r\n    totalQuantity: number;\r\n    orderDetails?: OrderDetail[];\r\n    createdAt: Date\r\n    updatedAt: Date\r\n}","export class PaymentMethod {\r\n    paymentMethodId: number;\r\n    methodName: string;\r\n}\r\n\r\nexport class GetPaymentMethodResponse {\r\n    _embedded: {\r\n        paymentMethods: PaymentMethod[]\r\n    }\r\n}","import { Image } from \"../Image\";\r\nimport { Paging } from \"../response-page\";\r\n\r\nexport class Catalog {\r\n    catalogId: number;\r\n    catalogName: string;\r\n    image: Image;\r\n    priceRange?: string;\r\n    description?: string;\r\n    childCatalogs?: Catalog[]\r\n    parentCatalog?: Catalog\r\n    hasParent?: boolean\r\n    \r\n}\r\n\r\nexport class GetCatalogResponse {\r\n    _embedded: {\r\n        catalogs: Catalog[]\r\n    }\r\n    page: Paging\r\n}","import { Image } from \"../Image\";\r\nimport { Paging } from \"../response-page\";\r\n\r\nexport class PlantingDifficultyLevel {\r\n    plantingDifficultyLevelId: number\r\n    level: string    \r\n}\r\n\r\nexport class GetPlantDifficultyLevelResponse {\r\n    _embedded: {\r\n        plantingDifficultyLevels: PlantingDifficultyLevel[]\r\n    }\r\n    page: Paging\r\n}","import { Image } from \"../Image\";\r\nimport { ProductSale } from \"../sale/product-sale.model\";\r\nimport { Catalog } from \"./catalog.model\";\r\nimport { PlantingDifficultyLevel } from \"./planting-difficulty-level.model\";\r\nimport { ProductCareGuide } from \"./product-care-guide.model\";\r\nimport { ProductReview } from \"./product-review.model\";\r\nimport { ProductVariant } from \"./product-variant.model\";\r\n\r\nexport class Product {\r\n    productId: number;\r\n    productName: string;\r\n    description: string;\r\n    catalog?: Catalog;\r\n    productSale?: ProductSale;\r\n    plantingDifficultyLevel?: PlantingDifficultyLevel\r\n    productCareGuide?: ProductCareGuide\r\n    active: boolean;\r\n    sale: boolean;\r\n    top: boolean;\r\n    new_: boolean;\r\n    createdAt: Date;\r\n    updatedAt: Date;\r\n    productVariants?: ProductVariant[]\r\n    productReviews?: ProductReview[]\r\n    images?: Image[]\r\n    imageSizeGuide?: Image\r\n    imageSizeGuideUrl?: string;\r\n    imageUrl?: string;\r\n    imageUrls?: string[];\r\n    totalSold?: number;\r\n    totalLikes?: number;\r\n    totalRating?: number;\r\n    avgRating: number;\r\n}","import { Paging } from '../response-page';\r\nimport { ProductSaleType } from './product-sale-type.model';\r\n\r\nexport class ProductSale {\r\n    productSaleId: number;\r\n    saleName: string;\r\n    discount: number;\r\n    productSaleType: ProductSaleType\r\n    description: string;\r\n    active: boolean;\r\n    startedAt: Date;\r\n    expiredAt: Date;\r\n}\r\n\r\nexport class GetProductSaleResponse {\r\n    _embedded: {\r\n        productSales: ProductSale[]\r\n    }\r\n    page: Paging\r\n}","export function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\r\n  if (parentModule) {\r\n    throw new Error(`${moduleName} has already been loaded. Import Core modules in the AppModule only.`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { BaseURLService } from '../base-url.service';\r\nimport { HttpClient, HttpEvent } from '@angular/common/http';\r\nimport { Account } from '../../models/account/account.model';\r\nimport { Address } from '../../models/address/address.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n\r\n  // for changing when create, edit, delete => reload\r\n  private accountChangeSubject = new Subject<void>();\r\n\r\n  get accountChange$(): Observable<void> {\r\n    return this.accountChangeSubject.asObservable();\r\n  }\r\n\r\n  notifyAccountChange(): void {\r\n    this.accountChangeSubject.next();\r\n  }\r\n\r\n  constructor(\r\n    private baseUrlService: BaseURLService,\r\n    private httpClient: HttpClient,\r\n  ) { }\r\n\r\n  findAll(): Observable<Account[]> {\r\n    const url: string = `${this.baseUrlService.baseURL}/accounts/findAll`\r\n    return this.httpClient.get<Account[]>(url)\r\n  }\r\n\r\n  findById(id: number): Observable<Account> {\r\n    const url: string = `${this.baseUrlService.baseURL}/accounts/findById/${id}`\r\n    return this.httpClient.get<Account>(url);\r\n  }\r\n\r\n  countTotalComments(id: number): Observable<number> {\r\n    const url: string = `${this.baseUrlService.baseURL}/accounts/${id}/countComments`\r\n    return this.httpClient.get<number>(url);\r\n  }\r\n\r\n  insert(account: Account): Observable<Account> {\r\n    const url: string = `${this.baseUrlService.baseURL}/accounts/create`\r\n    return this.httpClient.post<Account>(url, account);\r\n  }\r\n\r\n  update(account: Account): Observable<boolean> {\r\n    const url: string = `${this.baseUrlService.baseURL}/accounts/update`\r\n    return this.httpClient.post<boolean>(url, account);\r\n  }\r\n\r\n  \r\n\r\n  updateStatus(accounts: Account[], active: boolean) {\r\n    const mappedAccounts = accounts.map(acc => {\r\n      return { \r\n        id: acc.id\r\n      }\r\n    })\r\n    let formData = new FormData()\r\n    formData.append(\"accounts\", JSON.stringify(mappedAccounts));\r\n    formData.append(\"active\", active.toString());\r\n\r\n    const url: string = `${this.baseUrlService.baseURL}/accounts/update-status`\r\n    return this.httpClient.post<boolean>(url, formData);\r\n  }\r\n\r\n  delete(id: number): Observable<boolean> {\r\n    const url: string = `${this.baseUrlService.baseURL}/accounts/delete/${id}`\r\n    return this.httpClient.get<boolean>(url);\r\n  }\r\n\r\n  \r\n  findByEmailKeyword(emailKeyword: string): Observable<Account[]> {\r\n    const url: string = `${this.baseUrlService.baseURL}/accounts/findByEmailKeyword?keyword=${emailKeyword}`\r\n    return this.httpClient.get<Account[]>(url);\r\n  }\r\n\r\n  isUsernameExists(username: string): Observable<boolean> {\r\n    const url: string = `${this.baseUrlService.baseURL}/accounts/isUsernameExist?username=${username}`\r\n    return this.httpClient.get<boolean>(url);\r\n  }\r\n\r\n  isEmailExists(email: string): Observable<boolean> {\r\n    const url: string = `${this.baseUrlService.baseURL}/accounts/isEmailExist?email=${email}`\r\n    return this.httpClient.get<boolean>(url);\r\n  }\r\n\r\n  findAllAddress(): Observable<Address[]> {\r\n    const url: string = `${this.baseUrlService.baseURL}/address`\r\n    return this.httpClient.get<Address[]>(url)\r\n  }\r\n\r\n  count(): Observable<number> {\r\n    const url: string = `${this.baseUrlService.baseURL}/accounts/count`\r\n    return this.httpClient.get<number>(url)\r\n  }\r\n\r\n  updateFullname(username: string, fullName: string): Observable<boolean> {\r\n    const url: string = `${this.baseUrlService.baseURL}/updateFullName`\r\n    let formData = new FormData()\r\n    formData.append(\"username\", username)\r\n    formData.append(\"fullName\", fullName)\r\n    return this.httpClient.post<boolean>(url, formData) \r\n  }\r\n\r\n  updateProfileImage(formData: FormData): Observable<HttpEvent<Account>> {\r\n    return this.httpClient.post<Account>(`${this.baseUrlService.baseURL}/updateProfileImage`, formData,\r\n    {reportProgress: true,\r\n      observe: 'events'\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { BaseURLService } from '../base-url.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Address, GetAddressResponse } from '../../models/address/address.model';\r\nimport { GetProvinceResponse, Province } from '../../models/address/provinces.model';\r\nimport { District, GetDistrictResponse } from '../../models/address/districts.model';\r\nimport { GetWardResponse, Ward } from '../../models/address/wards.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddressService {\r\n\r\n  constructor(\r\n    private baseUrlService: BaseURLService,\r\n    private httpClient: HttpClient,\r\n  ) {\r\n  }\r\n\r\n  findAllAddress(): Observable<Address[]> {\r\n    const url: string = `${this.baseUrlService.baseURL}/address`\r\n    return this.httpClient.get<Address[]>(url)\r\n  }\r\n\r\n  findAllProvinces(): Observable<GetProvinceResponse> {\r\n    const url: string = `${this.baseUrlService.baseURL}/provinces?size=63`\r\n    return this.httpClient.get<GetProvinceResponse>(url);\r\n  }\r\n\r\n  findAllDistrictByProvince(provinceCode: string ): Observable<GetDistrictResponse> {\r\n    const url: string = `${this.baseUrlService.baseURL}/provinces/${provinceCode}/districts`\r\n    return this.httpClient.get<GetDistrictResponse>(url);\r\n  }\r\n\r\n\r\n  findAllWardByDistrict(districtCode: string): Observable<GetWardResponse> {\r\n    const url: string = `${this.baseUrlService.baseURL}/districts/${districtCode}/wards`\r\n    return this.httpClient.get<GetWardResponse>(url);\r\n  }\r\n\r\n  insertAddress(address: Address): Observable<Address> {\r\n    const url: string = `${this.baseUrlService.baseURL}/account/insertAddress`\r\n    return this.httpClient.post<Address>(url, address);\r\n  }\r\n\r\n  findByAccountId(accountId: number): Observable<Address[]> {\r\n    const url: string = `${this.baseUrlService.baseURL}/accounts/${accountId}/addresses`\r\n    return this.httpClient.get<Address[]>(url);\r\n  }\r\n\r\n  getAddressStringFormAddress(address: Address) {\r\n    const wardName = address.ward != null ? address.ward.fullName : null\r\n    const districtName = address.district != null ? address.district.fullName : null\r\n    const provinceName = address.province != null ? address.province.fullName : null\r\n\r\n    return `${address.roadName}, ${wardName}, ${districtName}, ${provinceName}`\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { BaseURLService } from '../base-url.service';\r\nimport { HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Account } from '../../models/account/account.model';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  private token: string;\r\n  private loggedInUsername: string;\r\n  private jwtHelper = new JwtHelperService();\r\n\r\n  private authChangeSubject = new Subject<void>();\r\n  get authChange$(): Observable<void> {\r\n    return this.authChangeSubject.asObservable();\r\n  }\r\n\r\n  authChange(): void {\r\n    this.authChangeSubject.next();\r\n  }\r\n\r\n  constructor(\r\n    private baseUrlService: BaseURLService,\r\n    private httpClient: HttpClient,\r\n  ) { }\r\n\r\n  login(account: Account): Observable<HttpResponse<Account> | HttpErrorResponse> {\r\n    const url = `${this.baseUrlService.baseURL}/login`;\r\n    return this.httpClient.post<Account>(url, account, {observe: 'response'}) \r\n  }\r\n\r\n  register(account: Account): Observable<HttpResponse<any> | HttpErrorResponse> {\r\n    const url = `${this.baseUrlService.baseURL}/register`;\r\n    return this.httpClient.post<HttpResponse<any> | HttpErrorResponse>(url, account) \r\n  }\r\n\r\n  logout(): void {\r\n    this.token = null;\r\n    this.loggedInUsername = null;\r\n    localStorage.removeItem('account')\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('accounts')\r\n  }\r\n\r\n  saveToken(token: string) {\r\n    this.token = token;\r\n    localStorage.setItem('token', token)\r\n  }\r\n\r\n  loadToken(): void {\r\n    this.token = localStorage.getItem('token')\r\n  }\r\n\r\n  getToken(): string {\r\n    return this.token;\r\n  }\r\n\r\n  addAccountToLocalCache(account: Account): void {\r\n    localStorage.setItem('account', JSON.stringify(account));\r\n  }\r\n\r\n  getAccountFromLocalCache(): Account {\r\n    return JSON.parse(localStorage.getItem('account'))\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    this.loadToken()\r\n    if(this.token != null && this.token !== '') {\r\n      if(this.jwtHelper.decodeToken(this.token).sub != null || '') {\r\n        if(!this.jwtHelper.isTokenExpired(this.token)) {\r\n          this.loggedInUsername = this.jwtHelper.decodeToken(this.token).sub;\r\n          return true;\r\n        }\r\n      }\r\n    } else {\r\n      this.logout()\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { BaseURLService } from '../base-url.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Address, GetAddressResponse } from '../../models/address/address.model';\r\nimport { GetProvinceResponse, Province } from '../../models/address/provinces.model';\r\nimport { District, GetDistrictResponse } from '../../models/address/districts.model';\r\nimport { GetWardResponse, Ward } from '../../models/address/wards.model';\r\nimport { Contact, GetContactResponse } from '../../models/account/contact.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContactService {\r\n\r\n  private contactChangeSubject = new Subject<void>();\r\n\r\n  get contactChange$(): Observable<void> {\r\n    return this.contactChangeSubject.asObservable();\r\n  }\r\n\r\n  notifyContactChange(): void {\r\n    this.contactChangeSubject.next();\r\n  }\r\n\r\n  constructor(\r\n    private baseUrlService: BaseURLService,\r\n    private httpClient: HttpClient,\r\n  ) {\r\n  }\r\n\r\n  findAll(): Observable<GetContactResponse> {\r\n    const url: string = `${this.baseUrlService.baseURL}/contacts`\r\n    return this.httpClient.get<GetContactResponse>(url)\r\n  }\r\n\r\n  findById(contactId: string): Observable<Contact> {\r\n    const url: string = `${this.baseUrlService.baseURL}/contacts/${contactId}`\r\n    return this.httpClient.get<Contact>(url)\r\n  }\r\n\r\n  insert(contact: Contact): Observable<Contact> {\r\n    const url: string = `${this.baseUrlService.baseURL}/contacts`\r\n    return this.httpClient.post<Contact>(url, contact);\r\n  }\r\n\r\n  delete(contactId: number): Observable<void> {\r\n    const url: string = `${this.baseUrlService.baseURL}/contacts/${contactId}`\r\n    return this.httpClient.delete<void>(url);\r\n  }\r\n\r\n  deleteContacts(contacts: Contact[]): Observable<void> {\r\n    const mappedContacts = contacts.map(contact => {\r\n      return {contactId: contact.contactId}\r\n    })\r\n    const url: string = `${this.baseUrlService.baseURL}/accounts/delete-contacts`\r\n    return this.httpClient.post<void>(url, mappedContacts);\r\n  }\r\n}\r\n","import { environment } from '../../../environments/environment';\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class BaseURLService {\r\n    private _baseURL: string = `${environment.apiUrl}/api/admin`\r\n\r\n    get baseURL(): string{\r\n        return this._baseURL ;\r\n    }\r\n}","import { of, Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { BaseURLService } from \"../base-url.service\";\r\nimport { GetOrderStatusResponse } from '../../models/order/order-status.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class OrderStatusService {\r\n    constructor(\r\n        private baseUrlService: BaseURLService,\r\n        private httpClient: HttpClient\r\n    ) { }\r\n\r\n    findAll(): Observable<GetOrderStatusResponse> {\r\n        const url: string = `${this.baseUrlService.baseURL}/order-statuses`\r\n        return this.httpClient.get<GetOrderStatusResponse>(url)\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Order } from '../../models/order/order.model';\r\nimport { BaseURLService } from '../base-url.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { OrderStatus } from '../../models/order/order-status.model';\r\nimport { OrderStatusService } from './order-status.service';\r\nimport { PaymentMethodService } from './payment-method.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n\r\n  private orderChangeSubject = new Subject<void>();\r\n\r\n  get orderChange$(): Observable<void> {\r\n    return this.orderChangeSubject.asObservable();\r\n  }\r\n\r\n  notifyOrderChange(): void {\r\n    this.orderChangeSubject.next();\r\n  }\r\n\r\n  constructor(\r\n    private baseUrlService: BaseURLService,\r\n    private httpClient: HttpClient,\r\n  ) { }\r\n\r\n\r\n  findById(id: number): Observable<Order> {\r\n    const url: string = `${this.baseUrlService.baseURL}/orders/findById/${id}`\r\n    return this.httpClient.get<Order>(url)\r\n  }\r\n  \r\n\r\n  findAll(): Observable<Order[]> {\r\n    const url: string = `${this.baseUrlService.baseURL}/orders/findAll`\r\n    return this.httpClient.get<Order[]>(url)\r\n  }\r\n\r\n  insert(order: any): Observable<Order> {\r\n    const url: string = `${this.baseUrlService.baseURL}/orders/create`\r\n    return this.httpClient.post<Order>(url, order);\r\n  }\r\n\r\n  updateOrderStatus(orderId: number, orderStatus: OrderStatus): Observable<boolean> {\r\n    const order = {\r\n      orderId: orderId\r\n    }\r\n    let formData = new FormData()\r\n    formData.append(\"order\", JSON.stringify(order));\r\n    formData.append(\"orderStatus\", JSON.stringify(orderStatus));\r\n    const url: string = `${this.baseUrlService.baseURL}/orders/update-status`\r\n    return this.httpClient.post<boolean>(url, formData);\r\n  }\r\n\r\n  updateOrdersStatus(orders: Order[], status: OrderStatus): Observable<boolean>{\r\n    const mappedOrders = orders.map(o => {\r\n      return { \r\n        orderId: o.orderId\r\n      }\r\n    })\r\n    const mappedStatus = {\r\n      orderStatusId: status.orderStatusId,\r\n      statusName: status.statusName,\r\n      description: status.description\r\n    }\r\n    let formData = new FormData()\r\n    formData.append(\"orders\", JSON.stringify(mappedOrders));\r\n    formData.append(\"orderStatus\", JSON.stringify(mappedStatus));\r\n\r\n    const url: string = `${this.baseUrlService.baseURL}/orders/update-orders-status`\r\n    return this.httpClient.post<boolean>(url, formData);\r\n  }\r\n\r\n  delete(orderId: number): Observable<boolean> {    \r\n    const url: string = `${this.baseUrlService.baseURL}/order/delete/${orderId}`\r\n    return this.httpClient.delete<boolean>(url); \r\n  }\r\n\r\n  findOrderStatusById(orderId: number): Observable<OrderStatus> {\r\n    const url: string = `${this.baseUrlService.baseURL}/orders/${orderId}/orderStatus`\r\n    return this.httpClient.get<OrderStatus>(url).pipe( \r\n      map(data => {\r\n        return {\r\n          orderStatusId: data.orderStatusId,\r\n          statusName: data.statusName,\r\n          description: data.description\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  count(): Observable<number> {\r\n    const url: string = `${this.baseUrlService.baseURL}/orders/count`\r\n    return this.httpClient.get<number>(url)\r\n  }\r\n\r\n  countOrdersLastMonth(): Observable<number> {\r\n    const url: string = `${this.baseUrlService.baseURL}/orders/countOrdersLastMonth`\r\n    return this.httpClient.get<number>(url)\r\n  }\r\n\r\n  countOrdersThisWeek(): Observable<number> {\r\n    const url: string = `${this.baseUrlService.baseURL}/orders/countOrdersThisWeek`\r\n    return this.httpClient.get<number>(url)\r\n  }\r\n\r\n  countOrdersToday(): Observable<number> {\r\n    const url: string = `${this.baseUrlService.baseURL}/orders/countOrdersToday`\r\n    return this.httpClient.get<number>(url)\r\n  }\r\n\r\n  countSold(): Observable<number> {\r\n    const url: string = `${this.baseUrlService.baseURL}/orders/countProductSold`\r\n    return this.httpClient.get<number>(url)\r\n  }\r\n}\r\n","import { of, Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { BaseURLService } from \"../base-url.service\";\r\nimport { GetPaymentMethodResponse, PaymentMethod } from '../../models/order/payment-method.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PaymentMethodService {\r\n    constructor(\r\n        private baseUrlService: BaseURLService,\r\n        private httpClient: HttpClient\r\n    ) { }\r\n\r\n    findAll(): Observable<GetPaymentMethodResponse> {\r\n        const url: string = `${this.baseUrlService.baseURL}/payment-methods`\r\n        return this.httpClient.get<GetPaymentMethodResponse>(url)\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { PeriodsService } from '../periods.service';\r\nimport { OrdersChart } from '../../models/chart/orders-chart';\r\n\r\n@Injectable()\r\nexport class OrdersChartService {\r\n\r\n  private data = { };\r\n\r\n  constructor(private period: PeriodsService) {\r\n    this.data = {\r\n      week: this.getDataForWeekPeriod(),\r\n      month: this.getDataForMonthPeriod(),\r\n    };\r\n  }\r\n\r\n  private getDataForWeekPeriod(): OrdersChart {\r\n    return {\r\n      chartLabel: this.getDataLabels(42, this.period.getWeeks()),\r\n      linesData: [\r\n        [\r\n          18, 26, 32, 36, 38, 39,\r\n          39, 37, 34, 30, 26, 22,\r\n          19, 15, 13, 10, 33, 33, 33,\r\n          10, 12, 14, 16, 18, 21,\r\n          23, 25, 28, 30, 31, 32,\r\n          33, 34, 33, 32, 31, 28,\r\n          25, 22, 17, 12, 71,\r\n        ],\r\n        [\r\n          15, 17, 19, 20, 21, 21,\r\n          20, 19, 18, 17, 16, 16,\r\n          16, 16, 15, 15, 15, 16,\r\n          17, 19, 21, 23, 25, 27,\r\n          29, 30, 30, 30, 30, 29,\r\n          28, 27, 26, 25, 24, 23,\r\n          23, 23, 23, 23, 23, 23,\r\n        ],\r\n        [\r\n          30, 33, 36, 39, 42, 45,\r\n          42, 39, 36, 38, 40, 42,\r\n          45, 50, 47, 46, 45, 44, 40,\r\n          50, 60, 70, 50, 47, 40, 30,\r\n          33, 36, 37, 39, 40, 42,\r\n          40, 42, 33, 40, 40, 40,\r\n          29, 29, 29, 29, 29,\r\n        ],\r\n      ],\r\n    };\r\n  }\r\n\r\n  private getDataForMonthPeriod(): OrdersChart {\r\n    return {\r\n      chartLabel: this.getDataLabels(47, this.period.getMonths()),\r\n      linesData: [\r\n        [\r\n          5, 63, 113, 156, 194, 225,\r\n          250, 270, 283, 289, 290,\r\n          286, 277, 264, 244, 220,\r\n          194, 171, 157, 151, 150,\r\n          152, 155, 160, 166, 170,\r\n          167, 153, 135, 115, 97,\r\n          82, 71, 64, 63, 62, 61,\r\n          62, 65, 73, 84, 102,\r\n          127, 159, 203, 259, 333,\r\n        ],\r\n        [\r\n          6, 83, 148, 200, 240,\r\n          265, 273, 259, 211,\r\n          122, 55, 30, 28, 36,\r\n          50, 68, 88, 109, 129,\r\n          146, 158, 163, 165,\r\n          173, 187, 208, 236,\r\n          271, 310, 346, 375,\r\n          393, 400, 398, 387,\r\n          368, 341, 309, 275,\r\n          243, 220, 206, 202,\r\n          207, 222, 247, 286, 348,\r\n        ],\r\n        [\r\n          398, 348, 315, 292, 274,\r\n          261, 251, 243, 237, 231,\r\n          222, 209, 192, 172, 152,\r\n          132, 116, 102, 90, 80, 71,\r\n          64, 58, 53, 49, 48, 54, 66,\r\n          84, 104, 125, 142, 156, 166,\r\n          172, 174, 172, 167, 159, 149,\r\n          136, 121, 105, 86, 67, 45, 22,\r\n        ],\r\n      ],\r\n    };\r\n  }\r\n\r\n  getDataLabels(nPoints: number, labelsArray: string[]): string[] {\r\n    const labelsArrayLength = labelsArray.length;\r\n    const step = Math.round(nPoints / labelsArrayLength);\r\n\r\n    return Array.from(Array(nPoints)).map((item, index) => {\r\n      const dataIndex = Math.round(index / step);\r\n\r\n      return index % step === 0 ? labelsArray[dataIndex] : '';\r\n    });\r\n  }\r\n\r\n  getOrdersChartData(period: string): OrdersChart {\r\n    return this.data[period];\r\n  }\r\n}\r\n","import { of as observableOf,  Observable, forkJoin } from 'rxjs';\r\nimport { map } from 'rxjs/operators'\r\nimport { Injectable } from '@angular/core';\r\nimport { OrdersChart } from '../../models/chart/orders-chart';\r\nimport { OrderProfitChart } from '../../models/chart/orders-profit-chart';\r\nimport { OrdersChartService } from './orders-chart.service';\r\nimport { ProfitChartService } from './profit-chart.service';\r\nimport { OrderService } from '../order/order.service';\r\n\r\n@Injectable()\r\nexport class OrdersProfitChartService {\r\n\r\n  constructor(\r\n    private ordersChartService: OrdersChartService,         \r\n    private orderService: OrderService\r\n  ) {}\r\n\r\n  getOrderProfitChart(): Observable<OrderProfitChart[]> {\r\n    const all$ = this.orderService.count();\r\n    const month$ = this.orderService.countOrdersLastMonth();\r\n    const week$ = this.orderService.countOrdersThisWeek();\r\n    const today$ = this.orderService.countOrdersToday();\r\n\r\n    return forkJoin([all$, month$, week$, today$]).pipe(\r\n      map(([all, month, week, today]) => {\r\n        return [\r\n          {\r\n            title: 'Marketplace',\r\n            value: all,\r\n          },\r\n          {\r\n            title: 'Last Month',\r\n            value: month,\r\n          },\r\n          {\r\n            title: 'This Week',\r\n            value: week,\r\n          },\r\n          {\r\n            title: 'Today',\r\n            value: today,\r\n          },\r\n        ];\r\n      })\r\n    );\r\n  }\r\n\r\n  getOrdersChartData(period: string): Observable<OrdersChart> {\r\n    return observableOf(this.ordersChartService.getOrdersChartData(period));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PeriodsService } from '../periods.service';\r\nimport { ProfitChart } from '../../models/chart/profit-chart';\r\n\r\n@Injectable()\r\nexport class ProfitChartService {\r\n\r\n  private year = [\r\n    '2012',\r\n    '2013',\r\n    '2014',\r\n    '2015',\r\n    '2016',\r\n    '2017',\r\n    '2018',\r\n  ];\r\n\r\n  private data = { };\r\n\r\n  constructor(private period: PeriodsService) {\r\n    this.data = {\r\n      week: this.getDataForWeekPeriod(),\r\n      month: this.getDataForMonthPeriod(),\r\n      year: this.getDataForYearPeriod(),\r\n    };\r\n  }\r\n\r\n  private getDataForWeekPeriod(): ProfitChart {\r\n    const nPoint = this.period.getWeeks().length;\r\n\r\n    return {\r\n      chartLabel: this.period.getWeeks(),\r\n      data: [\r\n        this.getRandomData(nPoint),\r\n        this.getRandomData(nPoint),\r\n        this.getRandomData(nPoint),\r\n      ],\r\n    };\r\n  }\r\n\r\n  private getDataForMonthPeriod(): ProfitChart {\r\n    const nPoint = this.period.getMonths().length;\r\n\r\n    return {\r\n      chartLabel: this.period.getMonths(),\r\n      data: [\r\n        this.getRandomData(nPoint),\r\n        this.getRandomData(nPoint),\r\n        this.getRandomData(nPoint),\r\n      ],\r\n    };\r\n  }\r\n\r\n  private getDataForYearPeriod(): ProfitChart {\r\n    const nPoint = this.year.length;\r\n\r\n    return {\r\n      chartLabel: this.year,\r\n      data: [\r\n        this.getRandomData(nPoint),\r\n        this.getRandomData(nPoint),\r\n        this.getRandomData(nPoint),\r\n      ],\r\n    };\r\n  }\r\n\r\n  private getRandomData(nPoints: number): number[] {\r\n    return Array.from(Array(nPoints)).map(() => {\r\n      return Math.round(Math.random() * 500);\r\n    });\r\n  }\r\n\r\n  getProfitChartData(period: string): ProfitChart {\r\n    return this.data[period];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class PeriodsService {\r\n  getMonths() {\r\n    return [\r\n      'Jan', 'Feb', 'Mar',\r\n      'Apr', 'May', 'Jun',\r\n      'Jul', 'Aug', 'Sep',\r\n      'Oct', 'Nov', 'Dec',\r\n    ];\r\n  }\r\n\r\n  getWeeks() {\r\n    return [\r\n      'Mon',\r\n      'Tue',\r\n      'Wed',\r\n      'Thu',\r\n      'Fri',\r\n      'Sat',\r\n      'Sun',\r\n    ];\r\n  }\r\n}\r\n","import { GetPlantDifficultyLevelResponse, PlantingDifficultyLevel } from './../../models/product/planting-difficulty-level.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { BaseURLService } from '../base-url.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs-compat';\r\nimport { of, BehaviorSubject, Subject } from 'rxjs';\r\nimport { Catalog, GetCatalogResponse } from '../../models/product/catalog.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlantingDifficultyLevelService {\r\n  constructor(\r\n    private baseUrlService: BaseURLService,\r\n    private httpClient: HttpClient\r\n  ) { }\r\n\r\n  findAll(): Observable<GetPlantDifficultyLevelResponse> {\r\n    const url: string = `${this.baseUrlService.baseURL}/planting-difficulty-levels`\r\n    return this.httpClient.get<GetPlantDifficultyLevelResponse>(url)\r\n  }\r\n\r\n  findById(catalogId: number): Observable<Catalog> {\r\n    const url: string = `${this.baseUrlService.baseURL}/planting-difficulty-levels/findById/${catalogId}`\r\n    return this.httpClient.get<Catalog>(url)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BaseURLService } from '../base-url.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs-compat';\r\nimport { of, BehaviorSubject, Subject } from 'rxjs';\r\nimport { Catalog, GetCatalogResponse } from '../../models/product/catalog.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CatalogService {\r\n  // change between add & edit form\r\n  private stateSubject: BehaviorSubject<string> = new BehaviorSubject<string>('add');\r\n  private rowDataSubject: BehaviorSubject<Catalog> = new BehaviorSubject<Catalog>(null);\r\n\r\n  public state$: Observable<string> = this.stateSubject.asObservable();\r\n  public rowData$: Observable<any> = this.rowDataSubject.asObservable();\r\n\r\n  updateHandleAndRowData(state: string, rowData?: any) {\r\n    this.stateSubject.next(state);\r\n    if (rowData != undefined) {\r\n      this.rowDataSubject.next(rowData as Catalog);\r\n    }\r\n  }\r\n\r\n  // for changing when create, edit, delete => reload\r\n  private catalogChangeSubject = new Subject<void>();\r\n  get catalogChange$(): Observable<void> {\r\n    return this.catalogChangeSubject.asObservable();\r\n  }\r\n  notifyCatalogChange(): void {\r\n    this.catalogChangeSubject.next();\r\n  }\r\n\r\n  constructor(\r\n    private baseUrlService: BaseURLService,\r\n    private httpClient: HttpClient\r\n  ) { }\r\n\r\n  findAll(): Observable<Catalog[]> {\r\n    const url: string = `${this.baseUrlService.baseURL}/catalogs/findAll`\r\n    return this.httpClient.get<Catalog[]>(url)\r\n  }\r\n\r\n  findById(catalogId: number): Observable<Catalog> {\r\n    const url: string = `${this.baseUrlService.baseURL}/catalogs/findById/${catalogId}`\r\n    return this.httpClient.get<Catalog>(url)\r\n  }\r\n\r\n  insert(catalog: Catalog, uploadFile: File): Observable<boolean> {\r\n    let formData: FormData = new FormData();\r\n    formData.append('catalog', JSON.stringify(catalog));\r\n    formData.append('imageFile', uploadFile);\r\n\r\n\r\n    const url: string = `${this.baseUrlService.baseURL}/catalogs/create`\r\n    return this.httpClient.post<boolean>(url, formData);\r\n  }\r\n\r\n  update(catalog: Catalog, uploadFile?: File): Observable<boolean> {\r\n    catalog.parentCatalog = {\r\n      catalogId: catalog.parentCatalog.catalogId,\r\n      catalogName: catalog.parentCatalog.catalogName,\r\n      image: catalog.parentCatalog.image\r\n    }\r\n    let formData: FormData = new FormData();\r\n    formData.append('catalog', JSON.stringify(catalog));\r\n    if (uploadFile != null) {\r\n      formData.append('imageFile', uploadFile);\r\n    }\r\n\r\n    const url: string = `${this.baseUrlService.baseURL}/catalogs/update`\r\n    return this.httpClient.put<boolean>(url, formData);\r\n  }\r\n\r\n  delete(catalogId: number): Observable<boolean> {\r\n    const url: string = `${this.baseUrlService.baseURL}/catalogs/delete/${catalogId}`\r\n    return this.httpClient.delete<boolean>(url);\r\n  }\r\n\r\n  deleteCatalogs(catalogs: Catalog[]): Observable<boolean> {\r\n    const url: string = `${this.baseUrlService.baseURL}/catalogs/delete-catalogs`\r\n    return this.httpClient.post<boolean>(url, catalogs);\r\n  }\r\n\r\n  flattenCatalogs(catalogs, parent = null) {\r\n    const flattened = [];\r\n\r\n    catalogs.forEach(catalog => {\r\n      const flatCatalog = {\r\n        catalogId: catalog.catalogId,\r\n        catalogName: catalog.catalogName,\r\n        description: catalog.description,\r\n        image: {\r\n          imageId: catalog.image.imageId,\r\n          imageUrl: catalog.image.imageUrl\r\n        },\r\n        hasParent: catalog.hasParent,\r\n        parentCatalog: parent\r\n      };\r\n\r\n      flattened.push(flatCatalog);\r\n\r\n      if (catalog.childCatalogs.length > 0) {\r\n        const childFlattened = this.flattenCatalogs(catalog.childCatalogs, catalog.catalogId);\r\n        flattened.push(...childFlattened);\r\n      }\r\n    });\r\n\r\n    return flattened;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BaseURLService } from '../base-url.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs-compat';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\nimport { CouponType } from '../../models/coupon/coupon-type.model';\r\nimport { Coupon, GetCouponResponse } from '../../models/coupon/coupon.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductCouponService {\r\n\r\n  // for update state & rowDate and change between add & edit form\r\n  private stateSubject: BehaviorSubject<string> = new BehaviorSubject<string>('add');\r\n  private rowDataSubject: BehaviorSubject<Coupon> = new BehaviorSubject<Coupon>(null);\r\n\r\n  public state$: Observable<string> = this.stateSubject.asObservable();\r\n  public rowData$: Observable<Coupon> = this.rowDataSubject.asObservable();\r\n\r\n  updateHandleAndRowData(state: string, rowData?: any) {\r\n    this.stateSubject.next(state);\r\n    if(rowData != undefined) {\r\n      this.rowDataSubject.next(rowData as Coupon); \r\n    }\r\n  }\r\n\r\n  // for changing when create, edit, delete => reload\r\n  private couponChangeSubject = new Subject<void>();\r\n\r\n  get couponChange$(): Observable<void> {\r\n    return this.couponChangeSubject.asObservable();\r\n  }\r\n\r\n  notifyCouponChange(): void {\r\n    this.couponChangeSubject.next();\r\n  }\r\n\r\n  constructor(\r\n    private baseUrlService: BaseURLService,\r\n    private httpClient: HttpClient\r\n  ) { \r\n  }\r\n\r\n  findAll(): Observable<GetCouponResponse> {\r\n    const url: string = `${this.baseUrlService.baseURL}/coupons`\r\n    return this.httpClient.get<GetCouponResponse>(url)\r\n  }\r\n\r\n  insert(coupon: Coupon): Observable<Coupon> {\r\n    let coupon2: any = coupon\r\n    coupon2.couponType = `/coupon-types/${coupon.couponType.couponTypeId}`\r\n\r\n    const url: string = `${this.baseUrlService.baseURL}/coupons`\r\n    return this.httpClient.post<Coupon>(url, coupon2);\r\n  }\r\n\r\n  update(coupon: Coupon): Observable<boolean> {\r\n    let coupon2: any = coupon\r\n    coupon2.couponType = `/coupon-types/${coupon.couponType.couponTypeId}`\r\n\r\n    const url: string = `${this.baseUrlService.baseURL}/coupons`\r\n    return this.httpClient.post<boolean>(url, coupon);\r\n  }\r\n\r\n  delete(couponId: number): Observable<void> {    \r\n    const url: string = `${this.baseUrlService.baseURL}/coupons/${couponId}`\r\n    return this.httpClient.delete<void>(url); \r\n  }\r\n\r\n  findCouponTypeById(id: number): CouponType {\r\n    if(id == 1) {\r\n      return { couponTypeId: 1, typeName: 'Fixed' }\r\n    } else {\r\n      return { couponTypeId: 2, typeName: 'Percent' }\r\n    }\r\n  }\r\n\r\n  isCouponExists(couponCode: string): Observable<boolean> {\r\n    const url: string = `${this.baseUrlService.baseURL}/coupons/isCouponExist?code=${couponCode}`\r\n    return this.httpClient.get<boolean>(url);\r\n  }\r\n\r\n  isCouponCanBeUsed(couponCode: string): Observable<boolean> {\r\n    const url: string = `${this.baseUrlService.baseURL}/coupons/isCouponCanBeUsed?code=${couponCode}`\r\n    return this.httpClient.get<boolean>(url);\r\n  }\r\n\r\n  findByCode(couponCode: string): Observable<Coupon> {\r\n    const url: string = `${this.baseUrlService.baseURL}/coupons/findByCode?code=${couponCode}`\r\n    return this.httpClient.get<Coupon>(url);\r\n  }\r\n\r\n  deleteCoupons(coupons: Coupon[]): Observable<void> {\r\n    let mappedCoupon = coupons.map(c => {\r\n      return {\r\n        couponId: c.couponId\r\n      }\r\n    })\r\n    const url: string = `${this.baseUrlService.baseURL}/coupons/delete-coupons`\r\n    return this.httpClient.post<void>(url, mappedCoupon);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ProductReview } from '../../models/product/product-review.model';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BaseURLService } from '../base-url.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductReviewService {\r\n\r\n  constructor(\r\n    private baseUrlService: BaseURLService,\r\n    private httpClient: HttpClient\r\n  ) { }\r\n\r\n  findAll(): Observable<ProductReview[]> {\r\n    const url: string = `${this.baseUrlService.baseURL}/product-review`\r\n    return this.httpClient.get<ProductReview[]>(url)\r\n  }\r\n\r\n  findByProductId(productId: number): Observable<ProductReview[]> {\r\n    const url: string = `${this.baseUrlService.baseURL}/products/${productId}/productReviews`\r\n    return this.httpClient.get<ProductReview[]>(url)\r\n  }\r\n\r\n  findByAccountId(productId: number): Observable<ProductReview[]> {\r\n    const url: string = `${this.baseUrlService.baseURL}/accounts/${productId}/productReviews`\r\n    return this.httpClient.get<ProductReview[]>(url)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BaseURLService } from '../base-url.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs-compat';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\nimport { GetProductSaleResponse, ProductSale } from '../../models/sale/product-sale.model';\r\nimport { ProductSaleType } from '../../models/sale/product-sale-type.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductSaleService {\r\n\r\n  // for update state & rowDate and change between add & edit form\r\n  private stateSubject: BehaviorSubject<string> = new BehaviorSubject<string>('add');\r\n  private rowDataSubject: BehaviorSubject<ProductSale> = new BehaviorSubject<ProductSale>(null);\r\n\r\n  public state$: Observable<string> = this.stateSubject.asObservable();\r\n  public rowData$: Observable<ProductSale> = this.rowDataSubject.asObservable();\r\n\r\n  updateHandleAndRowData(state: string, rowData?: any) {\r\n    this.stateSubject.next(state);\r\n    if(rowData != undefined) {\r\n      this.rowDataSubject.next(rowData as ProductSale); \r\n    }\r\n  }\r\n\r\n  // for changing when create, edit, delete => reload\r\n  private saleChangeSubject = new Subject<void>();\r\n  get saleChange$(): Observable<void> {\r\n    return this.saleChangeSubject.asObservable();\r\n  }\r\n  notifyProductSaleChange(): void {\r\n    this.saleChangeSubject.next();\r\n  }\r\n\r\n  constructor(\r\n    private baseUrlService: BaseURLService,\r\n    private httpClient: HttpClient\r\n  ) { \r\n  }\r\n\r\n  findAll(): Observable<GetProductSaleResponse> {\r\n    const url: string = `${this.baseUrlService.baseURL}/product-sales`\r\n    return this.httpClient.get<GetProductSaleResponse>(url)\r\n  }\r\n\r\n  insert(sale: ProductSale): Observable<boolean> {\r\n    let sale2: any = sale\r\n    sale2.productSaleType = `/product-sale-types/${sale.productSaleType.productSaleTypeId}`\r\n\r\n    const url: string = `${this.baseUrlService.baseURL}/product-sales`\r\n    return this.httpClient.post<boolean>(url, sale2);\r\n  }\r\n\r\n  update(sale: ProductSale): Observable<boolean> {\r\n    let sale2: any = sale\r\n    sale2.productSaleType = `/product-sale-types/${sale.productSaleType.productSaleTypeId}`\r\n\r\n    const url: string = `${this.baseUrlService.baseURL}/product-sales`\r\n    return this.httpClient.post<boolean>(url, sale2);\r\n  }\r\n\r\n  delete(productSaleId: number): Observable<void> {    \r\n    const url: string = `${this.baseUrlService.baseURL}/product-sales/${productSaleId}`\r\n    return this.httpClient.delete<void>(url); \r\n  }\r\n\r\n  findProductSaleTypeById(id: number): ProductSaleType {\r\n    if(id == 1) {\r\n      return { productSaleTypeId: 1, typeName: 'Fixed' }\r\n    } else {\r\n      return { productSaleTypeId: 2, typeName: 'Percent' }\r\n    }\r\n  }\r\n\r\n  deleteProductSales(sales: ProductSale[]): Observable<void> {\r\n    let mappedSales = sales.map(s => {\r\n      return {\r\n        productSaleId: s.productSaleId\r\n      }\r\n    })\r\n    const url: string = `${this.baseUrlService.baseURL}/product-sales/delete-sales`\r\n    return this.httpClient.post<void>(url, mappedSales);\r\n  }\r\n\r\n  updateStatus(sales: ProductSale[], status: boolean): Observable<boolean>{\r\n    const mappedSales = sales.map(s => {\r\n      return { \r\n        productSaleId: s.productSaleId\r\n      }\r\n    })\r\n    let formData = new FormData()\r\n    formData.append(\"sales\", JSON.stringify(mappedSales));\r\n    formData.append(\"active\", status.toString());\r\n\r\n    const url: string = `${this.baseUrlService.baseURL}/product-sales/update-status-sales`\r\n    return this.httpClient.post<boolean>(url, formData);\r\n  }\r\n\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { BaseURLService } from '../base-url.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GetProductSizeResponse } from '../../models/product/product-size.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductSizeService {\r\n\r\n  constructor(\r\n    private baseUrlService: BaseURLService,\r\n    private httpClient: HttpClient\r\n  ) {\r\n  }\r\n\r\n  findAll(): Observable<GetProductSizeResponse> {\r\n    const url: string = `${this.baseUrlService.baseURL}/product-sizes`\r\n    return this.httpClient.get<GetProductSizeResponse>(url)\r\n  }\r\n}\r\n","import { map } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of, BehaviorSubject } from 'rxjs';\r\n\r\nimport { Product } from '../../models/product/product.model';\r\nimport { BaseURLService } from '../base-url.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { ProductSale } from '../../models/sale/product-sale.model';\r\nimport { ProductSize } from '../../models/product/product-size.model';\r\nimport { ProductVariant } from '../../models/product/product-variant.model';\r\n\r\nexport class ToastState {\r\n  bahavior: String;\r\n  model: string;\r\n  status: string;\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  private productChangeSubject = new Subject<void>();\r\n\r\n  // Getter for the subject as an observable\r\n  get productChange$(): Observable<void> {\r\n    return this.productChangeSubject.asObservable();\r\n  }\r\n\r\n  // Call this method whenever a change occurs in the product list\r\n  notifyProductChange(): void {\r\n    this.productChangeSubject.next();\r\n  }\r\n\r\n  constructor(\r\n    private baseUrlService: BaseURLService,\r\n    private httpClient: HttpClient\r\n  ) { }\r\n\r\n  findByNameKeyword(nameKeyword: string): Observable<Product[]> {\r\n    const url: string = `${this.baseUrlService.baseURL}/products/findByNameKeyword?keyword=${nameKeyword}`\r\n    return this.httpClient.get<Product[]>(url);\r\n  }\r\n\r\n  findAll(): Observable<Product[]> {\r\n    const url = `${this.baseUrlService.baseURL}/products/findAll`\r\n    return this.httpClient.get<Product[]>(url);\r\n  }\r\n\r\n  findById(id: number): Observable<Product> {\r\n    const url: string = `${this.baseUrlService.baseURL}/products/${id}`\r\n    return this.httpClient.get<Product>(url);\r\n  }\r\n\r\n  countTotalComments(id: number): Observable<number> {\r\n    const url: string = `${this.baseUrlService.baseURL}/products/${id}/countComments`\r\n    return this.httpClient.get<number>(url);\r\n  }\r\n\r\n  insert(product: Product): Observable<boolean> {\r\n    const url: string = `${this.baseUrlService.baseURL}/products`\r\n    return this.httpClient.post<boolean>(url, product);\r\n  }\r\n\r\n  update(product: Product): Observable<boolean> {\r\n    const url: string = `${this.baseUrlService.baseURL}/products/update`\r\n    return this.httpClient.post<boolean>(url, product);\r\n  }\r\n\r\n  updateStatusNew(products: Product[], new_: boolean): Observable<boolean> {\r\n    const mappedProducts = products.map(pro => {\r\n      return {\r\n        productId: pro.productId\r\n      }\r\n    })\r\n    let formData = new FormData()\r\n    formData.append(\"products\", JSON.stringify(mappedProducts));\r\n    formData.append(\"new_\", new_.toString());\r\n\r\n    const url: string = `${this.baseUrlService.baseURL}/products/update-new-status`\r\n    return this.httpClient.post<boolean>(url, formData);\r\n  }\r\n\r\n  updateStatusTop(products: Product[], top: boolean): Observable<boolean> {\r\n    const mappedProducts = products.map(pro => {\r\n      return {\r\n        productId: pro.productId\r\n      }\r\n    })\r\n    let formData = new FormData()\r\n    formData.append(\"products\", JSON.stringify(mappedProducts));\r\n    formData.append(\"top\", top.toString());\r\n\r\n    const url: string = `${this.baseUrlService.baseURL}/products/update-top-status`\r\n    return this.httpClient.post<boolean>(url, formData);\r\n  }\r\n\r\n  updateStatusActive(products: Product[], active: boolean): Observable<boolean> {\r\n    const mappedProducts = products.map(pro => {\r\n      return {\r\n        productId: pro.productId\r\n      }\r\n    })\r\n    let formData = new FormData()\r\n    formData.append(\"products\", JSON.stringify(mappedProducts));\r\n    formData.append(\"active\", active.toString());\r\n\r\n    const url: string = `${this.baseUrlService.baseURL}/products/update-active-status`\r\n    return this.httpClient.post<boolean>(url, formData);\r\n  }\r\n\r\n\r\n\r\n  appliedProductSale(products: Product[], sale: ProductSale): Observable<boolean> {\r\n    const mappedProducts = products.map(pro => {\r\n      return {\r\n        productId: pro.productId\r\n      }\r\n    })\r\n    const mappedSale = sale != null\r\n      ? { productSaleId: sale.productSaleId }\r\n      : null\r\n    let formData = new FormData()\r\n    formData.append(\"products\", JSON.stringify(mappedProducts));\r\n    formData.append(\"productSale\", JSON.stringify(mappedSale));\r\n\r\n    const url: string = `${this.baseUrlService.baseURL}/products/update-sale`\r\n    return this.httpClient.post<boolean>(url, formData);\r\n  }\r\n\r\n  updateStatuses(products: Product[], new_: boolean, top: boolean,\r\n    active: boolean, sale: ProductSale): Observable<boolean> {\r\n    const mappedProducts = products.map(pro => {\r\n      return {\r\n        productId: pro.productId\r\n      }\r\n    })\r\n    const mappedSale = sale != null\r\n      ? { productSaleId: sale.productSaleId }\r\n      : null\r\n    let formData = new FormData()\r\n    formData.append(\"products\", JSON.stringify(mappedProducts));\r\n    formData.append(\"new_\", new_.toString());\r\n    formData.append(\"top\", top.toString());\r\n    formData.append(\"active\", active.toString());\r\n    formData.append(\"productSale\", JSON.stringify(mappedSale));\r\n\r\n    const url: string = `${this.baseUrlService.baseURL}/products/update-statuses`\r\n    return this.httpClient.post<boolean>(url, formData);\r\n  }\r\n\r\n  deleteProducts(products: Product[]): Observable<boolean> {\r\n    let mappedProducts = products.map(pro => {\r\n      return {\r\n        productId: pro.productId\r\n      }\r\n    })\r\n    const url: string = `${this.baseUrlService.baseURL}/products/delete-products`\r\n    return this.httpClient.post<boolean>(url, mappedProducts);\r\n  }\r\n\r\n  delete(productId: number): Observable<boolean> {\r\n    const url: string = `${this.baseUrlService.baseURL}/products/${productId}`\r\n    return this.httpClient.delete<boolean>(url);\r\n  } \r\n\r\n  isExist(productId: number): Observable<boolean> {\r\n    const url: string = `${this.baseUrlService.baseURL}/products/isExist?productId=${productId}`;\r\n    return this.httpClient.get<boolean>(url)\r\n  }\r\n\r\n  findVariantsFromProductId(id: number): Observable<ProductVariant[]> {\r\n    const url: string = `${this.baseUrlService.baseURL}/products/${id}/variants/`\r\n    return this.httpClient.get<ProductVariant[]>(url)\r\n  }\r\n\r\n\r\n  findPrice(productId: number, productSize: ProductSize): Observable<number |  null> {\r\n    let formData: FormData = new FormData()\r\n    formData.append(\"productId\", productId.toString())\r\n    formData.append(\"sizeJson\", JSON.stringify(productSize))\r\n\r\n    const url: string = `${this.baseUrlService.baseURL}/products/findPrice`\r\n    return this.httpClient.post<number>(url, formData); \r\n  }\r\n\r\n  count(): Observable<number> {\r\n    const url: string = `${this.baseUrlService.baseURL}/products/count`\r\n    return this.httpClient.get<number>(url)\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { of as observableOf, Observable } from 'rxjs';\r\nimport { ProgressInfo } from '../../models/chart/progress-info';\r\n\r\n@Injectable()\r\nexport class ProgressInfoService  {\r\n  private progressInfoData: ProgressInfo[] = [\r\n    {\r\n      title: 'Today’s Profit',\r\n      value: 572900,\r\n      activeProgress: 70,\r\n      description: 'Better than last week (70%)',\r\n    },\r\n    {\r\n      title: 'New Orders',\r\n      value: 6378,\r\n      activeProgress: 30,\r\n      description: 'Better than last week (30%)',\r\n    },\r\n    {\r\n      title: 'New Customer',\r\n      value: 200,\r\n      activeProgress: 55,\r\n      description: 'Better than last week (55%)',\r\n    },\r\n    {\r\n      title: 'New Comments',\r\n      value: 200,\r\n      activeProgress: 55,\r\n      description: 'Better than last week (55%)',\r\n    },\r\n  ];\r\n\r\n  getProgressInfoData(): Observable<ProgressInfo[]> {\r\n    return observableOf(this.progressInfoData);\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UserService } from './users.service';\r\nimport { OrdersChartService } from './orders-profit-chart/orders-chart.service';\r\nimport { ProfitChartService } from './orders-profit-chart/profit-chart.service';\r\nimport { PeriodsService } from './periods.service';\r\nimport { OrdersProfitChartService } from './orders-profit-chart/orders-profit-chart.service';\r\nimport { ProgressInfoService } from './progress-bar-chart/progress-info.service';\r\n\r\nconst SERVICES = [\r\n  UserService,\r\n  OrdersChartService,\r\n  ProfitChartService,\r\n  PeriodsService,\r\n  OrdersProfitChartService,\r\n  ProgressInfoService,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  providers: [\r\n    ...SERVICES,\r\n  ],\r\n})\r\nexport class ServiceDataModule {\r\n  static forRoot(): ModuleWithProviders<ServiceDataModule> {\r\n    return {\r\n      ngModule: ServiceDataModule,\r\n      providers: [\r\n        ...SERVICES,\r\n      ],\r\n    };\r\n  }\r\n}\r\n","import { of as observableOf,  Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { Contacts, RecentUsers } from '../models/chart/users';\r\n\r\n@Injectable()\r\nexport class UserService  {\r\n\r\n  private time: Date = new Date;\r\n\r\n  private users = {\r\n    nick: { name: 'Nick Jones', picture: 'assets/images/nick.png' },\r\n    eva: { name: 'Eva Moor', picture: 'assets/images/eva.png' },\r\n    jack: { name: 'Jack Williams', picture: 'assets/images/jack.png' },\r\n    lee: { name: 'Lee Wong', picture: 'assets/images/lee.png' },\r\n    alan: { name: 'Alan Thompson', picture: 'assets/images/alan.png' },\r\n    kate: { name: 'Kate Martinez', picture: 'assets/images/kate.png' },\r\n  };\r\n  private types = {\r\n    mobile: 'mobile',\r\n    home: 'home',\r\n    work: 'work',\r\n  };\r\n  private contacts: Contacts[] = [\r\n    { user: this.users.nick, type: this.types.mobile },\r\n    { user: this.users.eva, type: this.types.home },\r\n    { user: this.users.jack, type: this.types.mobile },\r\n    { user: this.users.lee, type: this.types.mobile },\r\n    { user: this.users.alan, type: this.types.home },\r\n    { user: this.users.kate, type: this.types.work },\r\n  ];\r\n  private recentUsers: RecentUsers[]  = [\r\n    { user: this.users.alan, type: this.types.home, time: this.time.setHours(21, 12)},\r\n    { user: this.users.eva, type: this.types.home, time: this.time.setHours(17, 45)},\r\n    { user: this.users.nick, type: this.types.mobile, time: this.time.setHours(5, 29)},\r\n    { user: this.users.lee, type: this.types.mobile, time: this.time.setHours(11, 24)},\r\n    { user: this.users.jack, type: this.types.mobile, time: this.time.setHours(10, 45)},\r\n    { user: this.users.kate, type: this.types.work, time: this.time.setHours(9, 42)},\r\n    { user: this.users.kate, type: this.types.work, time: this.time.setHours(9, 31)},\r\n    { user: this.users.jack, type: this.types.mobile, time: this.time.setHours(8, 0)},\r\n  ];\r\n\r\n  getUsers(): Observable<any> {\r\n    return observableOf(this.users);\r\n  }\r\n\r\n  getContacts(): Observable<Contacts[]> {\r\n    return observableOf(this.contacts);\r\n  }\r\n\r\n  getRecentUsers(): Observable<RecentUsers[]> {\r\n    return observableOf(this.recentUsers);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, BehaviorSubject } from 'rxjs';\r\n\r\nexport class ToastState {\r\n    constructor(\r\n        public message: string,\r\n        public status: string,\r\n    ) {}\r\n    \r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UtilsService {\r\n    private toastStateSubject: BehaviorSubject<ToastState> = new BehaviorSubject<ToastState>(null);\r\n    toastState$: Observable<ToastState> = this.toastStateSubject.asObservable();\r\n\r\n    updateToastState(toastState: ToastState): void {\r\n        this.toastStateSubject.next(toastState);\r\n    }\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    capitalizeString(str: string): string {\r\n        if (str == null || str.length === 0) {\r\n          return str; // Return empty or null strings as is\r\n        }\r\n        \r\n        return str.charAt(0).toUpperCase() + str.slice(1)\r\n    }\r\n\r\n    parseStringToDate(dateString: string): Date {\r\n        const dateParts = dateString.split('/');\r\n        const day = parseInt(dateParts[0], 10);\r\n        const month = parseInt(dateParts[1], 10) - 1; // Months are zero-based (0 - January, 1 - February, etc.)\r\n        const year = parseInt(dateParts[2], 10);\r\n      \r\n        return new Date(year, month, day);\r\n      }\r\n\r\n    getImageFromBase64(image: string) {\r\n        return \"data:image/png;base64,\" + image;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { filter } from 'rxjs/operators';\r\n\r\ndeclare const ga: any;\r\n\r\n@Injectable()\r\nexport class AnalyticsService {\r\n  private enabled: boolean;\r\n\r\n  constructor(private location: Location, private router: Router) {\r\n    this.enabled = false;\r\n  }\r\n\r\n  trackPageViews() {\r\n    if (this.enabled) {\r\n      this.router.events.pipe(\r\n        filter((event) => event instanceof NavigationEnd),\r\n      )\r\n        .subscribe(() => {\r\n          ga('send', {hitType: 'pageview', page: this.location.path()});\r\n        });\r\n    }\r\n  }\r\n\r\n  trackEvent(eventName: string) {\r\n    if (this.enabled) {\r\n      ga('send', 'event', eventName);\r\n    }\r\n  }\r\n}\r\n","import { environment } from \"../../../environments/environment\"\r\n\r\nexport const CATALOG_IMAGE_DIRECTORY: string =  environment.apiUrl + '/assets/upload/catalog/' \r\nexport const PRODUCT_IMAGE_DIRECTORY: string =  environment.apiUrl + '/assets/upload/product/' \r\nexport const VARIANT_IMAGE_DIRECTORY: string =  environment.apiUrl + '/assets/upload/variant/' \r\nexport const ACCOUNT_IMAGE_DIRECTORY: string =  environment.apiUrl + '/assets/upload/account/' \r\nexport const SIDE_GUIDE_IMAGE_DIRECTORY: string =  environment.apiUrl + '/assets/upload/size_guide/'","import { LayoutService } from './layout.service';\r\nimport { AnalyticsService } from './analytics.service';\r\nimport { StateService } from './state.service';\r\nimport { SeoService } from './seo.service';\r\n\r\nexport {\r\n  LayoutService,\r\n  AnalyticsService,\r\n  SeoService,\r\n  StateService,\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { delay, shareReplay, debounceTime } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class LayoutService {\r\n\r\n  protected layoutSize$ = new Subject();\r\n  protected layoutSizeChange$ = this.layoutSize$.pipe(\r\n    shareReplay({ refCount: true }),\r\n  );\r\n\r\n  changeLayoutSize() {\r\n    this.layoutSize$.next();\r\n  }\r\n\r\n  onChangeLayoutSize(): Observable<any> {\r\n    return this.layoutSizeChange$.pipe(delay(1));\r\n  }\r\n\r\n  onSafeChangeLayoutSize(): Observable<any> {\r\n    return this.layoutSizeChange$.pipe(\r\n      debounceTime(350),\r\n    );\r\n  }\r\n}\r\n","import { Injectable, Inject, PLATFORM_ID, OnDestroy } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { NB_DOCUMENT } from '@nebular/theme';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class SeoService implements OnDestroy {\r\n\r\n  private readonly destroy$ = new Subject<void>();\r\n  private readonly dom: Document;\r\n  private readonly isBrowser: boolean;\r\n  private linkCanonical: HTMLLinkElement;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    @Inject(NB_DOCUMENT) document,\r\n    @Inject(PLATFORM_ID) platformId,\r\n  ) {\r\n    this.isBrowser = isPlatformBrowser(platformId);\r\n    this.dom = document;\r\n\r\n    if (this.isBrowser) {\r\n      this.createCanonicalTag();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  createCanonicalTag() {\r\n    this.linkCanonical = this.dom.createElement('link');\r\n    this.linkCanonical.setAttribute('rel', 'canonical');\r\n    this.dom.head.appendChild(this.linkCanonical);\r\n    this.linkCanonical.setAttribute('href', this.getCanonicalUrl());\r\n  }\r\n\r\n  trackCanonicalChanges() {\r\n    if (!this.isBrowser) {\r\n      return;\r\n    }\r\n\r\n    this.router.events.pipe(\r\n      filter((event) => event instanceof NavigationEnd),\r\n      takeUntil(this.destroy$),\r\n    )\r\n      .subscribe(() => {\r\n        this.linkCanonical.setAttribute('href', this.getCanonicalUrl());\r\n      });\r\n  }\r\n\r\n  private getCanonicalUrl(): string {\r\n    return this.dom.location.origin + this.dom.location.pathname;\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { of as observableOf,  Observable,  BehaviorSubject } from 'rxjs';\r\nimport { takeWhile } from 'rxjs/operators';\r\n\r\nimport { NbLayoutDirectionService, NbLayoutDirection } from '@nebular/theme';\r\n\r\n@Injectable()\r\nexport class StateService implements OnDestroy {\r\n\r\n  protected layouts: any = [\r\n    {\r\n      name: 'One Column',\r\n      icon: 'nb-layout-default',\r\n      id: 'one-column',\r\n      selected: true,\r\n    },\r\n    {\r\n      name: 'Two Column',\r\n      icon: 'nb-layout-two-column',\r\n      id: 'two-column',\r\n    },\r\n    {\r\n      name: 'Center Column',\r\n      icon: 'nb-layout-centre',\r\n      id: 'center-column',\r\n    },\r\n  ];\r\n\r\n  protected sidebars: any = [\r\n    {\r\n      name: 'Sidebar at layout start',\r\n      icon: 'nb-layout-sidebar-left',\r\n      id: 'start',\r\n      selected: true,\r\n    },\r\n    {\r\n      name: 'Sidebar at layout end',\r\n      icon: 'nb-layout-sidebar-right',\r\n      id: 'end',\r\n    },\r\n  ];\r\n\r\n  protected layoutState$ = new BehaviorSubject(this.layouts[0]);\r\n  protected sidebarState$ = new BehaviorSubject(this.sidebars[0]);\r\n\r\n  alive = true;\r\n\r\n  constructor(directionService: NbLayoutDirectionService) {\r\n    directionService.onDirectionChange()\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe(direction => this.updateSidebarIcons(direction));\r\n\r\n    this.updateSidebarIcons(directionService.getDirection());\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.alive = false;\r\n  }\r\n\r\n  private updateSidebarIcons(direction: NbLayoutDirection) {\r\n    const [ startSidebar, endSidebar ] = this.sidebars;\r\n    const isLtr = direction === NbLayoutDirection.LTR;\r\n    const startIconClass = isLtr ? 'nb-layout-sidebar-left' : 'nb-layout-sidebar-right';\r\n    const endIconClass = isLtr ? 'nb-layout-sidebar-right' : 'nb-layout-sidebar-left';\r\n    startSidebar.icon = startIconClass;\r\n    endSidebar.icon = endIconClass;\r\n  }\r\n\r\n  setLayoutState(state: any): any {\r\n    this.layoutState$.next(state);\r\n  }\r\n\r\n  getLayoutStates(): Observable<any[]> {\r\n    return observableOf(this.layouts);\r\n  }\r\n\r\n  onLayoutState(): Observable<any> {\r\n    return this.layoutState$.asObservable();\r\n  }\r\n\r\n  setSidebarState(state: any): any {\r\n    this.sidebarState$.next(state);\r\n  }\r\n\r\n  getSidebarStates(): Observable<any[]> {\r\n    return observableOf(this.sidebars);\r\n  }\r\n\r\n  onSidebarState(): Observable<any> {\r\n    return this.sidebarState$.asObservable();\r\n  }\r\n}\r\n","import { AccountService } from './../services/account/account.service';\r\nimport { AbstractControl, FormControl, ValidationErrors } from \"@angular/forms\";\r\nimport { catchError, map } from 'rxjs/operators'\r\nimport { Observable, of } from 'rxjs';\r\nimport { ProductService } from '../services/product/product.service';\r\nimport { ProductCouponService } from '../services/product/product-coupon.service';\r\nexport class CustomValidator {\r\n\r\n    static notBlank(control: FormControl): ValidationErrors | null {\r\n        if (control.value == null) {\r\n            return { 'notblank': true };\r\n        }\r\n        if (typeof control.value === 'string') {\r\n            if (control.value != null && control.value.trim().length === 0) {\r\n                return { 'notblank': true };\r\n            }\r\n        } else if (typeof control.value === 'number') {\r\n            if (control.value === null || Number.isNaN(control.value)) {\r\n                return { 'notblank': true };\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static maxCouponValue(control: AbstractControl): ValidationErrors | null {\r\n        const discountTypeControl = control.parent?.get('discountType');\r\n        const discountValue = control.value;\r\n\r\n        if (discountTypeControl?.value === 'Percent' && discountValue > 100) {\r\n            return { max: true };\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function isUsernameExisting(accountService: AccountService) {\r\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\r\n        return accountService.isUsernameExists(control.value).pipe(\r\n            map((exists: boolean) => (exists ? { usernameExists: true } : null)),\r\n            catchError(() => of(null))\r\n        );\r\n    };\r\n}\r\n\r\n\r\nexport function isEmailExisting(accountService: AccountService) {\r\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\r\n        return accountService.isEmailExists(control.value).pipe(\r\n            map((exists: boolean) => (exists ? { emailExists: true } : null)),\r\n            catchError(() => of(null))\r\n        );\r\n    };\r\n}\r\n\r\nexport function isEmailNotExisting(accountService: AccountService) {\r\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\r\n        // Use the AccountService to check if the email exists\r\n        return accountService.isEmailExists(control.value).pipe(\r\n            map((exists: boolean) => (!exists ? { emailNotExists: true } : null)),\r\n            catchError(() => of(null))\r\n        );\r\n    };\r\n}\r\n\r\nexport function isCouponNotExisting(couponService: ProductCouponService) {\r\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\r\n        if(control.value.trim().length > 0) {\r\n            return couponService.isCouponExists(control.value).pipe(\r\n                map((exists: boolean) => !exists ? { couponNotExist: true } : null),\r\n                catchError(() => of(null))\r\n            );\r\n        }\r\n    };\r\n}\r\n\r\nexport function isCouponCantBeUsed(couponService: ProductCouponService) {\r\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\r\n        return couponService.isCouponCanBeUsed(control.value).pipe(\r\n            map((canUse: boolean) => !canUse ? { couponCantUse: true } : null),\r\n            catchError(() => of(null))\r\n        );\r\n    };\r\n}\r\n\r\n\r\nexport function isProductNotExisting(productService: ProductService) {\r\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\r\n        let productName = control.value\r\n        return productService.findByNameKeyword(productName).pipe(\r\n            map((products: any[]) => products.length == 0 ? { productNotExist: true } : null),\r\n            catchError(() => of(null))\r\n        )\r\n    };\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-footer',\r\n  styleUrls: ['./footer.component.scss'],\r\n  template: `\r\n    <span class=\"created-by\">\r\n      Created by <b>AVENGER</b>\r\n    </span>\r\n  `,\r\n})\r\nexport class FooterComponent {\r\n}\r\n","import { ACCOUNT_IMAGE_DIRECTORY } from './../../../@core/utils/image-storing-directory';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { NbMediaBreakpointsService, NbMenuService, NbSidebarService, NbThemeService } from '@nebular/theme';\r\n\r\nimport { UserService } from '../../../@core/services/users.service';\r\nimport { LayoutService } from '../../../@core/utils';\r\nimport { map, takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { AuthenticationService } from '../../../@core/services/account/authentication.service';\r\nimport { Account } from '../../../@core/models/account/account.model';\r\nimport { Router } from '@angular/router';\r\nimport { AccountService } from '../../../@core/services/account/account.service';\r\n\r\n@Component({\r\n  selector: 'ngx-header',\r\n  styleUrls: ['./header.component.scss'],\r\n  templateUrl: './header.component.html',\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n\r\n  private destroy$: Subject<void> = new Subject<void>();\r\n  userPictureOnly: boolean = false;\r\n  user: any;\r\n\r\n  currentTheme = localStorage.getItem(\"theme\") != null ? localStorage.getItem(\"theme\") : 'default';\r\n  themes = [\r\n    { value: 'default', name: 'Light'},\r\n    { value: 'dark', name: 'Dark'}\r\n  ];\r\n\r\n  constructor(\r\n    private sidebarService: NbSidebarService,\r\n    private menuService: NbMenuService,\r\n    private themeService: NbThemeService,\r\n    private layoutService: LayoutService,\r\n    private breakpointService: NbMediaBreakpointsService,\r\n    public authService: AuthenticationService,\r\n    private router: Router,\r\n    private accountService: AccountService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.currentTheme = this.themeService.currentTheme;\r\n\r\n    this.authService.authChange$\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(() => {\r\n        this.loadUserProfile();\r\n      });\r\n    this.loadUserProfile();\r\n\r\n    this.accountService.accountChange$\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(() => {\r\n        this.loadUserProfile();\r\n      })\r\n    this.loadUserProfile();\r\n\r\n    const { xl } = this.breakpointService.getBreakpointsMap();\r\n    this.themeService.onMediaQueryChange()\r\n      .pipe(\r\n        map(([, currentBreakpoint]) => currentBreakpoint.width < xl),\r\n        takeUntil(this.destroy$),\r\n      )\r\n      .subscribe((isLessThanXl: boolean) => this.userPictureOnly = isLessThanXl);\r\n\r\n    this.themeService.onThemeChange()\r\n      .pipe(\r\n        map(({ name }) => name),\r\n        takeUntil(this.destroy$),\r\n      )\r\n      .subscribe(themeName => this.currentTheme = themeName);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  changeTheme(themeName: string) {\r\n    this.themeService.changeTheme(themeName);\r\n    localStorage.setItem(\"theme\", themeName)\r\n  }\r\n\r\n  toggleSidebar(): boolean {\r\n    this.sidebarService.toggle(true, 'menu-sidebar');\r\n    this.layoutService.changeLayoutSize();\r\n\r\n    return false;\r\n  }\r\n\r\n  changeProfile() {\r\n    this.router.navigateByUrl(\"/admin/change-profile\")\r\n  }\r\n\r\n  navigateHome() {\r\n    this.menuService.navigateHome();\r\n    return false;\r\n  }\r\n\r\n  loadUserProfile() {\r\n    if(this.authService.isLoggedIn()) {\r\n      const loggedInAccount: any = this.authService.getAccountFromLocalCache()\r\n      loggedInAccount.image = loggedInAccount.image != null ? ACCOUNT_IMAGE_DIRECTORY + loggedInAccount.image.imageUrl : null\r\n      this.user =loggedInAccount\r\n    }\r\n  }\r\n}\r\n","<div class=\"header-container\">\r\n  <div class=\"logo-container\">\r\n    <a (click)=\"toggleSidebar()\" href=\"#\" class=\"sidebar-toggle\">\r\n      <nb-icon icon=\"menu-2-outline\"></nb-icon>\r\n    </a>\r\n    <a class=\"logo\" href=\"#\" (click)=\"navigateHome()\">Plant<span>Nest</span></a>\r\n  </div>\r\n  <nb-select [selected]=\"currentTheme\" (selectedChange)=\"changeTheme($event)\" status=\"primary\">\r\n    <nb-option *ngFor=\"let theme of themes\" [value]=\"theme.value\"> {{ theme.name }}</nb-option>\r\n  </nb-select>\r\n</div>\r\n\r\n<div class=\"header-container\" *ngIf=\"authService.isLoggedIn()\" (click)=\"changeProfile()\">\r\n  <nb-actions size=\"small\">\r\n    <nb-action class=\"user-action\" *nbIsGranted=\"['view', 'user']\">\r\n      <nb-user [onlyPicture]=\"userPictureOnly\" [name]=\"user?.fullName\" [picture]=\"user?.image\">\r\n      </nb-user>\r\n    </nb-action>\r\n  </nb-actions>\r\n</div>","export * from './header/header.component';\r\nexport * from './footer/footer.component';\r\n","export * from './one-column/one-column.layout';\r\n","import { UtilsService } from './../../../@core/services/utils.service';\r\nimport { Component } from '@angular/core';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { NbGlobalLogicalPosition } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'ngx-one-column-layout',\r\n  styleUrls: ['./one-column.layout.scss'],\r\n  template: `\r\n    <nb-layout windowMode>\r\n      <nb-layout-header fixed>\r\n        <ngx-header></ngx-header>\r\n      </nb-layout-header>\r\n\r\n      <nb-sidebar class=\"menu-sidebar\" tag=\"menu-sidebar\" responsive>\r\n        <ng-content select=\"nb-menu\"></ng-content>\r\n      </nb-sidebar>\r\n\r\n      <nb-layout-column>\r\n        <ng-content select=\"router-outlet\"></ng-content>\r\n      </nb-layout-column>\r\n\r\n      <nb-layout-footer fixed>\r\n        <ngx-footer></ngx-footer>\r\n      </nb-layout-footer>\r\n    </nb-layout>\r\n  `,\r\n})\r\nexport class OneColumnLayoutComponent {\r\n  constructor(\r\n    private toastService: NbToastrService,\r\n    private utilsService: UtilsService\r\n  ) {\r\n    this.utilsService.toastState$.subscribe(state => {\r\n      if(state != null) {\r\n        this.toastService.show(state.message, 'Notification',\r\n           {status: state.status, duration: 3000, position: NbGlobalLogicalPosition.BOTTOM_END});\r\n      }\r\n    })\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'ngxCapitalize' })\r\nexport class CapitalizePipe implements PipeTransform {\r\n\r\n  transform(input: string): string {\r\n    return input && input.length\r\n      ? (input.charAt(0).toUpperCase() + input.slice(1).toLowerCase())\r\n      : input;\r\n  }\r\n\r\n  static transform(input: string): string {\r\n    return input && input.length\r\n      ? (input.charAt(0).toUpperCase() + input.slice(1).toLowerCase())\r\n      : input;\r\n  }\r\n}\r\n","export * from './capitalize.pipe';\r\nexport * from './plural.pipe';\r\nexport * from './round.pipe';\r\nexport * from './timing.pipe';\r\nexport * from './number-with-commas.pipe';\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'ngxNumberWithCommas' })\r\nexport class NumberWithCommasPipe implements PipeTransform {\r\n\r\n  transform(input: number): string {\r\n    return new Intl.NumberFormat().format(input);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'ngxPlural' })\r\nexport class PluralPipe implements PipeTransform {\r\n\r\n  transform(input: number, label: string, pluralLabel: string = ''): string {\r\n    input = input || 0;\r\n    return input === 1\r\n      ? `${input} ${label}`\r\n      : pluralLabel\r\n        ? `${input} ${pluralLabel}`\r\n        : `${input} ${label}s`;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'prettyPrintJSONPipe'\r\n})\r\nexport class PrettyPrintJSONPipe implements PipeTransform {\r\n\r\n  transform(val) {\r\n    return JSON.stringify(val, null, 2)\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'ngxRound' })\r\nexport class RoundPipe implements PipeTransform {\r\n\r\n  transform(input: number): number {\r\n    return Math.round(input);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'timing' })\r\nexport class TimingPipe implements PipeTransform {\r\n  transform(time: number): string {\r\n    if (time) {\r\n      const minutes = Math.floor(time / 60);\r\n      const seconds = Math.floor(time % 60);\r\n      return `${this.initZero(minutes)}${minutes}:${this.initZero(seconds)}${seconds}`;\r\n    }\r\n\r\n    return '00:00';\r\n  }\r\n\r\n  private initZero(time: number): string {\r\n    return time < 10 ? '0' : '';\r\n  }\r\n}\r\n","import { NbJSThemeOptions, DARK_THEME as baseTheme } from '@nebular/theme';\r\n\r\nconst baseThemeVariables = baseTheme.variables;\r\n\r\nexport const DARK_THEME = {\r\n  name: 'dark',\r\n  base: 'dark',\r\n  variables: {\r\n    temperature: {\r\n      arcFill: [\r\n        baseThemeVariables.primary,\r\n        baseThemeVariables.primary,\r\n        baseThemeVariables.primary,\r\n        baseThemeVariables.primary,\r\n        baseThemeVariables.primary,\r\n      ],\r\n      arcEmpty: baseThemeVariables.bg2,\r\n      thumbBg: baseThemeVariables.bg2,\r\n      thumbBorder: baseThemeVariables.primary,\r\n    },\r\n\r\n    solar: {\r\n      gradientLeft: baseThemeVariables.primary,\r\n      gradientRight: baseThemeVariables.primary,\r\n      shadowColor: 'rgba(0, 0, 0, 0)',\r\n      secondSeriesFill: baseThemeVariables.bg2,\r\n      radius: ['80%', '90%'],\r\n    },\r\n\r\n    traffic: {\r\n      tooltipBg: baseThemeVariables.bg,\r\n      tooltipBorderColor: baseThemeVariables.border2,\r\n      tooltipExtraCss: 'border-radius: 10px; padding: 4px 16px;',\r\n      tooltipTextColor: baseThemeVariables.fgText,\r\n      tooltipFontWeight: 'normal',\r\n\r\n      yAxisSplitLine: baseThemeVariables.separator,\r\n\r\n      lineBg: baseThemeVariables.border4,\r\n      lineShadowBlur: '1',\r\n      itemColor: baseThemeVariables.border4,\r\n      itemBorderColor: baseThemeVariables.border4,\r\n      itemEmphasisBorderColor: baseThemeVariables.primary,\r\n      shadowLineDarkBg: 'rgba(0, 0, 0, 0)',\r\n      shadowLineShadow: 'rgba(0, 0, 0, 0)',\r\n      gradFrom: baseThemeVariables.bg2,\r\n      gradTo: baseThemeVariables.bg2,\r\n    },\r\n\r\n    electricity: {\r\n      tooltipBg: baseThemeVariables.bg,\r\n      tooltipLineColor: baseThemeVariables.fgText,\r\n      tooltipLineWidth: '0',\r\n      tooltipBorderColor: baseThemeVariables.border2,\r\n      tooltipExtraCss: 'border-radius: 10px; padding: 8px 24px;',\r\n      tooltipTextColor: baseThemeVariables.fgText,\r\n      tooltipFontWeight: 'normal',\r\n\r\n      axisLineColor: baseThemeVariables.border3,\r\n      xAxisTextColor: baseThemeVariables.fg,\r\n      yAxisSplitLine: baseThemeVariables.separator,\r\n\r\n      itemBorderColor: baseThemeVariables.primary,\r\n      lineStyle: 'solid',\r\n      lineWidth: '4',\r\n      lineGradFrom: baseThemeVariables.primary,\r\n      lineGradTo: baseThemeVariables.primary,\r\n      lineShadow: 'rgba(0, 0, 0, 0)',\r\n\r\n      areaGradFrom: baseThemeVariables.bg2,\r\n      areaGradTo: baseThemeVariables.bg2,\r\n      shadowLineDarkBg: 'rgba(0, 0, 0, 0)',\r\n    },\r\n\r\n    bubbleMap: {\r\n      titleColor: baseThemeVariables.fgText,\r\n      areaColor: baseThemeVariables.bg4,\r\n      areaHoverColor: baseThemeVariables.fgHighlight,\r\n      areaBorderColor: baseThemeVariables.border5,\r\n    },\r\n\r\n    profitBarAnimationEchart: {\r\n      textColor: baseThemeVariables.fgText,\r\n\r\n      firstAnimationBarColor: baseThemeVariables.primary,\r\n      secondAnimationBarColor: baseThemeVariables.success,\r\n\r\n      splitLineStyleOpacity: '1',\r\n      splitLineStyleWidth: '1',\r\n      splitLineStyleColor: baseThemeVariables.separator,\r\n\r\n      tooltipTextColor: baseThemeVariables.fgText,\r\n      tooltipFontWeight: 'normal',\r\n      tooltipFontSize: '16',\r\n      tooltipBg: baseThemeVariables.bg,\r\n      tooltipBorderColor: baseThemeVariables.border2,\r\n      tooltipBorderWidth: '1',\r\n      tooltipExtraCss: 'border-radius: 10px; padding: 4px 16px;',\r\n    },\r\n\r\n    trafficBarEchart: {\r\n      gradientFrom: baseThemeVariables.warningLight,\r\n      gradientTo: baseThemeVariables.warning,\r\n      shadow: baseThemeVariables.warningLight,\r\n      shadowBlur: '0',\r\n\r\n      axisTextColor: baseThemeVariables.fgText,\r\n      axisFontSize: '12',\r\n\r\n      tooltipBg: baseThemeVariables.bg,\r\n      tooltipBorderColor: baseThemeVariables.border2,\r\n      tooltipExtraCss: 'border-radius: 10px; padding: 4px 16px;',\r\n      tooltipTextColor: baseThemeVariables.fgText,\r\n      tooltipFontWeight: 'normal',\r\n    },\r\n\r\n    countryOrders: {\r\n      countryBorderColor: baseThemeVariables.border4,\r\n      countryFillColor: baseThemeVariables.bg3,\r\n      countryBorderWidth: '1',\r\n      hoveredCountryBorderColor: baseThemeVariables.primary,\r\n      hoveredCountryFillColor: baseThemeVariables.primaryLight,\r\n      hoveredCountryBorderWidth: '1',\r\n\r\n      chartAxisLineColor: baseThemeVariables.border4,\r\n      chartAxisTextColor: baseThemeVariables.fg,\r\n      chartAxisFontSize: '16',\r\n      chartGradientTo: baseThemeVariables.primary,\r\n      chartGradientFrom: baseThemeVariables.primaryLight,\r\n      chartAxisSplitLine: baseThemeVariables.separator,\r\n      chartShadowLineColor: baseThemeVariables.primaryLight,\r\n\r\n      chartLineBottomShadowColor: baseThemeVariables.primary,\r\n\r\n      chartInnerLineColor: baseThemeVariables.bg2,\r\n    },\r\n\r\n    echarts: {\r\n      bg: baseThemeVariables.bg,\r\n      textColor: baseThemeVariables.fgText,\r\n      axisLineColor: baseThemeVariables.fgText,\r\n      splitLineColor: baseThemeVariables.separator,\r\n      itemHoverShadowColor: 'rgba(0, 0, 0, 0.5)',\r\n      tooltipBackgroundColor: baseThemeVariables.primary,\r\n      areaOpacity: '0.7',\r\n    },\r\n\r\n    chartjs: {\r\n      axisLineColor: baseThemeVariables.separator,\r\n      textColor: baseThemeVariables.fgText,\r\n    },\r\n\r\n    orders: {\r\n      tooltipBg: baseThemeVariables.bg,\r\n      tooltipLineColor: 'rgba(0, 0, 0, 0)',\r\n      tooltipLineWidth: '0',\r\n      tooltipBorderColor: baseThemeVariables.border2,\r\n      tooltipExtraCss: 'border-radius: 10px; padding: 8px 24px;',\r\n      tooltipTextColor: baseThemeVariables.fgText,\r\n      tooltipFontWeight: 'normal',\r\n      tooltipFontSize: '20',\r\n\r\n      axisLineColor: baseThemeVariables.border4,\r\n      axisFontSize: '16',\r\n      axisTextColor: baseThemeVariables.fg,\r\n      yAxisSplitLine: baseThemeVariables.separator,\r\n\r\n      itemBorderColor: baseThemeVariables.primary,\r\n      lineStyle: 'solid',\r\n      lineWidth: '4',\r\n\r\n      // first line\r\n      firstAreaGradFrom: baseThemeVariables.bg3,\r\n      firstAreaGradTo: baseThemeVariables.bg3,\r\n      firstShadowLineDarkBg: 'rgba(0, 0, 0, 0)',\r\n\r\n      // second line\r\n      secondLineGradFrom: baseThemeVariables.primary,\r\n      secondLineGradTo: baseThemeVariables.primary,\r\n\r\n      secondAreaGradFrom: 'rgba(51, 102, 255, 0.2)',\r\n      secondAreaGradTo: 'rgba(51, 102, 255, 0)',\r\n      secondShadowLineDarkBg: 'rgba(0, 0, 0, 0)',\r\n\r\n      // third line\r\n      thirdLineGradFrom: baseThemeVariables.success,\r\n      thirdLineGradTo: baseThemeVariables.successLight,\r\n\r\n      thirdAreaGradFrom: 'rgba(0, 214, 143, 0.2)',\r\n      thirdAreaGradTo: 'rgba(0, 214, 143, 0)',\r\n      thirdShadowLineDarkBg: 'rgba(0, 0, 0, 0)',\r\n    },\r\n\r\n    profit: {\r\n      bg: baseThemeVariables.bg,\r\n      textColor: baseThemeVariables.fgText,\r\n      axisLineColor: baseThemeVariables.border4,\r\n      splitLineColor: baseThemeVariables.separator,\r\n      areaOpacity: '1',\r\n\r\n      axisFontSize: '16',\r\n      axisTextColor: baseThemeVariables.fg,\r\n\r\n      // first bar\r\n      firstLineGradFrom: baseThemeVariables.bg3,\r\n      firstLineGradTo: baseThemeVariables.bg3,\r\n      firstLineShadow: 'rgba(0, 0, 0, 0)',\r\n\r\n      // second bar\r\n      secondLineGradFrom: baseThemeVariables.primary,\r\n      secondLineGradTo: baseThemeVariables.primary,\r\n      secondLineShadow: 'rgba(0, 0, 0, 0)',\r\n\r\n      // third bar\r\n      thirdLineGradFrom: baseThemeVariables.success,\r\n      thirdLineGradTo: baseThemeVariables.successLight,\r\n      thirdLineShadow: 'rgba(0, 0, 0, 0)',\r\n    },\r\n\r\n    orderProfitLegend: {\r\n      firstItem: baseThemeVariables.success,\r\n      secondItem: baseThemeVariables.primary,\r\n      thirdItem: baseThemeVariables.bg3,\r\n    },\r\n\r\n    visitors: {\r\n      tooltipBg: baseThemeVariables.bg,\r\n      tooltipLineColor: 'rgba(0, 0, 0, 0)',\r\n      tooltipLineWidth: '0',\r\n      tooltipBorderColor: baseThemeVariables.border2,\r\n      tooltipExtraCss: 'border-radius: 10px; padding: 8px 24px;',\r\n      tooltipTextColor: baseThemeVariables.fgText,\r\n      tooltipFontWeight: 'normal',\r\n      tooltipFontSize: '20',\r\n\r\n      axisLineColor: baseThemeVariables.border4,\r\n      axisFontSize: '16',\r\n      axisTextColor: baseThemeVariables.fg,\r\n      yAxisSplitLine: baseThemeVariables.separator,\r\n\r\n      itemBorderColor: baseThemeVariables.primary,\r\n      lineStyle: 'dotted',\r\n      lineWidth: '6',\r\n      lineGradFrom: '#ffffff',\r\n      lineGradTo: '#ffffff',\r\n      lineShadow: 'rgba(0, 0, 0, 0)',\r\n\r\n      areaGradFrom: baseThemeVariables.primary,\r\n      areaGradTo: baseThemeVariables.primaryLight,\r\n\r\n      innerLineStyle: 'solid',\r\n      innerLineWidth: '1',\r\n\r\n      innerAreaGradFrom: baseThemeVariables.success,\r\n      innerAreaGradTo: baseThemeVariables.success,\r\n    },\r\n\r\n    visitorsLegend: {\r\n      firstIcon: baseThemeVariables.success,\r\n      secondIcon: baseThemeVariables.primary,\r\n    },\r\n\r\n    visitorsPie: {\r\n      firstPieGradientLeft: baseThemeVariables.success,\r\n      firstPieGradientRight: baseThemeVariables.success,\r\n      firstPieShadowColor: 'rgba(0, 0, 0, 0)',\r\n      firstPieRadius: ['70%', '90%'],\r\n\r\n      secondPieGradientLeft: baseThemeVariables.warning,\r\n      secondPieGradientRight: baseThemeVariables.warningLight,\r\n      secondPieShadowColor: 'rgba(0, 0, 0, 0)',\r\n      secondPieRadius: ['60%', '97%'],\r\n      shadowOffsetX: '0',\r\n      shadowOffsetY: '0',\r\n    },\r\n\r\n    visitorsPieLegend: {\r\n      firstSection: baseThemeVariables.warning,\r\n      secondSection: baseThemeVariables.success,\r\n    },\r\n\r\n    earningPie: {\r\n      radius: ['65%', '100%'],\r\n      center: ['50%', '50%'],\r\n\r\n      fontSize: '22',\r\n\r\n      firstPieGradientLeft: baseThemeVariables.success,\r\n      firstPieGradientRight: baseThemeVariables.success,\r\n      firstPieShadowColor: 'rgba(0, 0, 0, 0)',\r\n\r\n      secondPieGradientLeft: baseThemeVariables.primary,\r\n      secondPieGradientRight: baseThemeVariables.primary,\r\n      secondPieShadowColor: 'rgba(0, 0, 0, 0)',\r\n\r\n      thirdPieGradientLeft: baseThemeVariables.warning,\r\n      thirdPieGradientRight: baseThemeVariables.warning,\r\n      thirdPieShadowColor: 'rgba(0, 0, 0, 0)',\r\n    },\r\n\r\n    earningLine: {\r\n      gradFrom: baseThemeVariables.primary,\r\n      gradTo: baseThemeVariables.primary,\r\n\r\n      tooltipTextColor: baseThemeVariables.fgText,\r\n      tooltipFontWeight: 'normal',\r\n      tooltipFontSize: '16',\r\n      tooltipBg: baseThemeVariables.bg,\r\n      tooltipBorderColor: baseThemeVariables.border2,\r\n      tooltipBorderWidth: '1',\r\n      tooltipExtraCss: 'border-radius: 10px; padding: 4px 16px;',\r\n    },\r\n  },\r\n} as NbJSThemeOptions;\r\n","import { NbJSThemeOptions, DEFAULT_THEME as baseTheme } from '@nebular/theme';\r\n\r\nconst baseThemeVariables = baseTheme.variables;\r\n\r\nexport const DEFAULT_THEME = {\r\n  name: 'default',\r\n  base: 'default',\r\n  variables: {\r\n    temperature: {\r\n      arcFill: [\r\n        baseThemeVariables.primary,\r\n        baseThemeVariables.primary,\r\n        baseThemeVariables.primary,\r\n        baseThemeVariables.primary,\r\n        baseThemeVariables.primary,\r\n      ],\r\n      arcEmpty: baseThemeVariables.bg2,\r\n      thumbBg: baseThemeVariables.bg2,\r\n      thumbBorder: baseThemeVariables.primary,\r\n    },\r\n\r\n    solar: {\r\n      gradientLeft: baseThemeVariables.primary,\r\n      gradientRight: baseThemeVariables.primary,\r\n      shadowColor: 'rgba(0, 0, 0, 0)',\r\n      secondSeriesFill: baseThemeVariables.bg2,\r\n      radius: ['80%', '90%'],\r\n    },\r\n\r\n    traffic: {\r\n      tooltipBg: baseThemeVariables.bg,\r\n      tooltipBorderColor: baseThemeVariables.border2,\r\n      tooltipExtraCss: 'border-radius: 10px; padding: 4px 16px;',\r\n      tooltipTextColor: baseThemeVariables.fgText,\r\n      tooltipFontWeight: 'normal',\r\n\r\n      yAxisSplitLine: baseThemeVariables.separator,\r\n\r\n      lineBg: baseThemeVariables.border4,\r\n      lineShadowBlur: '1',\r\n      itemColor: baseThemeVariables.border4,\r\n      itemBorderColor: baseThemeVariables.border4,\r\n      itemEmphasisBorderColor: baseThemeVariables.primary,\r\n      shadowLineDarkBg: 'rgba(0, 0, 0, 0)',\r\n      shadowLineShadow: 'rgba(0, 0, 0, 0)',\r\n      gradFrom: baseThemeVariables.bg2,\r\n      gradTo: baseThemeVariables.bg2,\r\n    },\r\n\r\n    electricity: {\r\n      tooltipBg: baseThemeVariables.bg,\r\n      tooltipLineColor: baseThemeVariables.fgText,\r\n      tooltipLineWidth: '0',\r\n      tooltipBorderColor: baseThemeVariables.border2,\r\n      tooltipExtraCss: 'border-radius: 10px; padding: 8px 24px;',\r\n      tooltipTextColor: baseThemeVariables.fgText,\r\n      tooltipFontWeight: 'normal',\r\n\r\n      axisLineColor: baseThemeVariables.border3,\r\n      xAxisTextColor: baseThemeVariables.fg,\r\n      yAxisSplitLine: baseThemeVariables.separator,\r\n\r\n      itemBorderColor: baseThemeVariables.primary,\r\n      lineStyle: 'solid',\r\n      lineWidth: '4',\r\n      lineGradFrom: baseThemeVariables.primary,\r\n      lineGradTo: baseThemeVariables.primary,\r\n      lineShadow: 'rgba(0, 0, 0, 0)',\r\n\r\n      areaGradFrom: baseThemeVariables.bg2,\r\n      areaGradTo: baseThemeVariables.bg2,\r\n      shadowLineDarkBg: 'rgba(0, 0, 0, 0)',\r\n    },\r\n\r\n    bubbleMap: {\r\n      titleColor: baseThemeVariables.fgText,\r\n      areaColor: baseThemeVariables.bg4,\r\n      areaHoverColor: baseThemeVariables.fgHighlight,\r\n      areaBorderColor: baseThemeVariables.border5,\r\n    },\r\n\r\n    profitBarAnimationEchart: {\r\n      textColor: baseThemeVariables.fgText,\r\n\r\n      firstAnimationBarColor: baseThemeVariables.primary,\r\n      secondAnimationBarColor: baseThemeVariables.success,\r\n\r\n      splitLineStyleOpacity: '1',\r\n      splitLineStyleWidth: '1',\r\n      splitLineStyleColor: baseThemeVariables.separator,\r\n\r\n      tooltipTextColor: baseThemeVariables.fgText,\r\n      tooltipFontWeight: 'normal',\r\n      tooltipFontSize: '16',\r\n      tooltipBg: baseThemeVariables.bg,\r\n      tooltipBorderColor: baseThemeVariables.border2,\r\n      tooltipBorderWidth: '1',\r\n      tooltipExtraCss: 'border-radius: 10px; padding: 4px 16px;',\r\n    },\r\n\r\n    trafficBarEchart: {\r\n      gradientFrom: baseThemeVariables.warningLight,\r\n      gradientTo: baseThemeVariables.warning,\r\n      shadow: baseThemeVariables.warningLight,\r\n      shadowBlur: '0',\r\n\r\n      axisTextColor: baseThemeVariables.fgText,\r\n      axisFontSize: '12',\r\n\r\n      tooltipBg: baseThemeVariables.bg,\r\n      tooltipBorderColor: baseThemeVariables.border2,\r\n      tooltipExtraCss: 'border-radius: 10px; padding: 4px 16px;',\r\n      tooltipTextColor: baseThemeVariables.fgText,\r\n      tooltipFontWeight: 'normal',\r\n    },\r\n\r\n    countryOrders: {\r\n      countryBorderColor: baseThemeVariables.border4,\r\n      countryFillColor: baseThemeVariables.bg3,\r\n      countryBorderWidth: '1',\r\n      hoveredCountryBorderColor: baseThemeVariables.primary,\r\n      hoveredCountryFillColor: baseThemeVariables.primaryLight,\r\n      hoveredCountryBorderWidth: '1',\r\n\r\n      chartAxisLineColor: baseThemeVariables.border4,\r\n      chartAxisTextColor: baseThemeVariables.fg,\r\n      chartAxisFontSize: '16',\r\n      chartGradientTo: baseThemeVariables.primary,\r\n      chartGradientFrom: baseThemeVariables.primaryLight,\r\n      chartAxisSplitLine: baseThemeVariables.separator,\r\n      chartShadowLineColor: baseThemeVariables.primaryLight,\r\n\r\n      chartLineBottomShadowColor: baseThemeVariables.primary,\r\n\r\n      chartInnerLineColor: baseThemeVariables.bg2,\r\n    },\r\n\r\n    echarts: {\r\n      bg: baseThemeVariables.bg,\r\n      textColor: baseThemeVariables.fgText,\r\n      axisLineColor: baseThemeVariables.fgText,\r\n      splitLineColor: baseThemeVariables.separator,\r\n      itemHoverShadowColor: 'rgba(0, 0, 0, 0.5)',\r\n      tooltipBackgroundColor: baseThemeVariables.primary,\r\n      areaOpacity: '0.7',\r\n    },\r\n\r\n    chartjs: {\r\n      axisLineColor: baseThemeVariables.separator,\r\n      textColor: baseThemeVariables.fgText,\r\n    },\r\n\r\n    orders: {\r\n      tooltipBg: baseThemeVariables.bg,\r\n      tooltipLineColor: 'rgba(0, 0, 0, 0)',\r\n      tooltipLineWidth: '0',\r\n      tooltipBorderColor: baseThemeVariables.border2,\r\n      tooltipExtraCss: 'border-radius: 10px; padding: 8px 24px;',\r\n      tooltipTextColor: baseThemeVariables.fgText,\r\n      tooltipFontWeight: 'normal',\r\n      tooltipFontSize: '20',\r\n\r\n      axisLineColor: baseThemeVariables.border4,\r\n      axisFontSize: '16',\r\n      axisTextColor: baseThemeVariables.fg,\r\n      yAxisSplitLine: baseThemeVariables.separator,\r\n\r\n      itemBorderColor: baseThemeVariables.primary,\r\n      lineStyle: 'solid',\r\n      lineWidth: '4',\r\n\r\n      // first line\r\n      firstAreaGradFrom: baseThemeVariables.bg3,\r\n      firstAreaGradTo: baseThemeVariables.bg3,\r\n      firstShadowLineDarkBg: 'rgba(0, 0, 0, 0)',\r\n\r\n      // second line\r\n      secondLineGradFrom: baseThemeVariables.primary,\r\n      secondLineGradTo: baseThemeVariables.primary,\r\n\r\n      secondAreaGradFrom: 'rgba(51, 102, 255, 0.2)',\r\n      secondAreaGradTo: 'rgba(51, 102, 255, 0)',\r\n      secondShadowLineDarkBg: 'rgba(0, 0, 0, 0)',\r\n\r\n      // third line\r\n      thirdLineGradFrom: baseThemeVariables.success,\r\n      thirdLineGradTo: baseThemeVariables.successLight,\r\n\r\n      thirdAreaGradFrom: 'rgba(0, 214, 143, 0.2)',\r\n      thirdAreaGradTo: 'rgba(0, 214, 143, 0)',\r\n      thirdShadowLineDarkBg: 'rgba(0, 0, 0, 0)',\r\n    },\r\n\r\n    profit: {\r\n      bg: baseThemeVariables.bg,\r\n      textColor: baseThemeVariables.fgText,\r\n      axisLineColor: baseThemeVariables.border4,\r\n      splitLineColor: baseThemeVariables.separator,\r\n      areaOpacity: '1',\r\n\r\n      axisFontSize: '16',\r\n      axisTextColor: baseThemeVariables.fg,\r\n\r\n      // first bar\r\n      firstLineGradFrom: baseThemeVariables.bg3,\r\n      firstLineGradTo: baseThemeVariables.bg3,\r\n      firstLineShadow: 'rgba(0, 0, 0, 0)',\r\n\r\n      // second bar\r\n      secondLineGradFrom: baseThemeVariables.primary,\r\n      secondLineGradTo: baseThemeVariables.primary,\r\n      secondLineShadow: 'rgba(0, 0, 0, 0)',\r\n\r\n      // third bar\r\n      thirdLineGradFrom: baseThemeVariables.success,\r\n      thirdLineGradTo: baseThemeVariables.successLight,\r\n      thirdLineShadow: 'rgba(0, 0, 0, 0)',\r\n    },\r\n\r\n    orderProfitLegend: {\r\n      firstItem: baseThemeVariables.success,\r\n      secondItem: baseThemeVariables.primary,\r\n      thirdItem: baseThemeVariables.bg3,\r\n    },\r\n\r\n    visitors: {\r\n      tooltipBg: baseThemeVariables.bg,\r\n      tooltipLineColor: 'rgba(0, 0, 0, 0)',\r\n      tooltipLineWidth: '1',\r\n      tooltipBorderColor: baseThemeVariables.border2,\r\n      tooltipExtraCss: 'border-radius: 10px; padding: 8px 24px;',\r\n      tooltipTextColor: baseThemeVariables.fgText,\r\n      tooltipFontWeight: 'normal',\r\n      tooltipFontSize: '20',\r\n\r\n      axisLineColor: baseThemeVariables.border4,\r\n      axisFontSize: '16',\r\n      axisTextColor: baseThemeVariables.fg,\r\n      yAxisSplitLine: baseThemeVariables.separator,\r\n\r\n      itemBorderColor: baseThemeVariables.primary,\r\n      lineStyle: 'dotted',\r\n      lineWidth: '6',\r\n      lineGradFrom: '#ffffff',\r\n      lineGradTo: '#ffffff',\r\n      lineShadow: 'rgba(0, 0, 0, 0)',\r\n\r\n      areaGradFrom: baseThemeVariables.primary,\r\n      areaGradTo: baseThemeVariables.primaryLight,\r\n\r\n      innerLineStyle: 'solid',\r\n      innerLineWidth: '1',\r\n\r\n      innerAreaGradFrom: baseThemeVariables.success,\r\n      innerAreaGradTo: baseThemeVariables.success,\r\n    },\r\n\r\n    visitorsLegend: {\r\n      firstIcon: baseThemeVariables.success,\r\n      secondIcon: baseThemeVariables.primary,\r\n    },\r\n\r\n    visitorsPie: {\r\n      firstPieGradientLeft: baseThemeVariables.success,\r\n      firstPieGradientRight: baseThemeVariables.success,\r\n      firstPieShadowColor: 'rgba(0, 0, 0, 0)',\r\n      firstPieRadius: ['70%', '90%'],\r\n\r\n      secondPieGradientLeft: baseThemeVariables.warning,\r\n      secondPieGradientRight: baseThemeVariables.warningLight,\r\n      secondPieShadowColor: 'rgba(0, 0, 0, 0)',\r\n      secondPieRadius: ['60%', '97%'],\r\n      shadowOffsetX: '0',\r\n      shadowOffsetY: '0',\r\n    },\r\n\r\n    visitorsPieLegend: {\r\n      firstSection: baseThemeVariables.warning,\r\n      secondSection: baseThemeVariables.success,\r\n    },\r\n\r\n    earningPie: {\r\n      radius: ['65%', '100%'],\r\n      center: ['50%', '50%'],\r\n\r\n      fontSize: '22',\r\n\r\n      firstPieGradientLeft: baseThemeVariables.success,\r\n      firstPieGradientRight: baseThemeVariables.success,\r\n      firstPieShadowColor: 'rgba(0, 0, 0, 0)',\r\n\r\n      secondPieGradientLeft: baseThemeVariables.primary,\r\n      secondPieGradientRight: baseThemeVariables.primary,\r\n      secondPieShadowColor: 'rgba(0, 0, 0, 0)',\r\n\r\n      thirdPieGradientLeft: baseThemeVariables.warning,\r\n      thirdPieGradientRight: baseThemeVariables.warning,\r\n      thirdPieShadowColor: 'rgba(0, 0, 0, 0)',\r\n    },\r\n\r\n    earningLine: {\r\n      gradFrom: baseThemeVariables.primary,\r\n      gradTo: baseThemeVariables.primary,\r\n\r\n      tooltipTextColor: baseThemeVariables.fgText,\r\n      tooltipFontWeight: 'normal',\r\n      tooltipFontSize: '16',\r\n      tooltipBg: baseThemeVariables.bg,\r\n      tooltipBorderColor: baseThemeVariables.border2,\r\n      tooltipBorderWidth: '1',\r\n      tooltipExtraCss: 'border-radius: 10px; padding: 4px 16px;',\r\n    },\r\n  },\r\n} as NbJSThemeOptions;\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  NbActionsModule,\r\n  NbLayoutModule,\r\n  NbMenuModule,\r\n  NbSearchModule,\r\n  NbSidebarModule,\r\n  NbUserModule,\r\n  NbContextMenuModule,\r\n  NbButtonModule,\r\n  NbSelectModule,\r\n  NbIconModule,\r\n  NbThemeModule,\r\n} from '@nebular/theme';\r\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\r\nimport { NbSecurityModule } from '@nebular/security';\r\n\r\nimport {\r\n  FooterComponent,\r\n  HeaderComponent,\r\n} from './components';\r\nimport {\r\n  CapitalizePipe,\r\n  PluralPipe,\r\n  RoundPipe,\r\n  TimingPipe,\r\n  NumberWithCommasPipe,\r\n} from './pipes';\r\nimport {\r\n  OneColumnLayoutComponent,\r\n} from './layouts';\r\nimport { DEFAULT_THEME } from './styles/theme.default';\r\nimport { DARK_THEME } from './styles/theme.dark';\r\nimport { PrettyPrintJSONPipe } from './pipes/pretty-print-json.pipe';\r\n\r\nconst NB_MODULES = [\r\n  NbLayoutModule,\r\n  NbMenuModule,\r\n  NbUserModule,\r\n  NbActionsModule,\r\n  NbSearchModule,\r\n  NbSidebarModule,\r\n  NbContextMenuModule,\r\n  NbSecurityModule,\r\n  NbButtonModule,\r\n  NbSelectModule,\r\n  NbIconModule,\r\n  NbEvaIconsModule,\r\n];\r\nconst COMPONENTS = [\r\n  HeaderComponent,\r\n  FooterComponent,\r\n  OneColumnLayoutComponent,\r\n];\r\nconst PIPES = [\r\n  CapitalizePipe,\r\n  PluralPipe,\r\n  RoundPipe,\r\n  TimingPipe,\r\n  NumberWithCommasPipe,\r\n  PrettyPrintJSONPipe\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ...NB_MODULES],\r\n  exports: [CommonModule, ...PIPES, ...COMPONENTS],\r\n  declarations: [...COMPONENTS, ...PIPES],\r\n})\r\nexport class ThemeModule {\r\n  static forRoot(): ModuleWithProviders<ThemeModule> {\r\n    return {\r\n      ngModule: ThemeModule,\r\n      providers: [\r\n        ...NbThemeModule.forRoot(\r\n          {\r\n            name: localStorage.getItem(\"theme\") != null ? localStorage.getItem(\"theme\") : \"default\",\r\n          },\r\n          [ DEFAULT_THEME, DARK_THEME ],\r\n        ).providers,\r\n      ],\r\n    };\r\n  }\r\n}\r\n","import { ExtraOptions, RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\nexport const routes: Routes = [\r\n  { path: 'admin', loadChildren: () => import('./pages/pages.module').then(m => m.PagesModule)},\r\n  { path: '', redirectTo: 'admin', pathMatch: 'full' },\r\n  { path: '**', redirectTo: 'admin' },\r\n];\r\n\r\nconst config: ExtraOptions = {\r\n  useHash: false,\r\n};\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, config)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AnalyticsService } from './@core/utils/analytics.service';\r\nimport { SeoService } from './@core/utils/seo.service';\r\n\r\n@Component({\r\n  selector: 'ngx-app',\r\n  template: '<router-outlet></router-outlet>',\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  constructor(\r\n    private analytics: AnalyticsService,\r\n    private seoService: SeoService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.analytics.trackPageViews();\r\n    this.seoService.trackCanonicalChanges();\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS, HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { CoreModule } from './@core/core.module';\r\nimport { ThemeModule } from './@theme/theme.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport {\r\n  NbCardModule,\r\n  NbChatModule,\r\n  NbDatepickerModule,\r\n  NbDialogModule,\r\n  NbMenuModule,\r\n  NbSidebarModule,\r\n  NbToastrModule,\r\n  NbWindowModule,\r\n} from '@nebular/theme';\r\nimport { PagesModule } from './pages/pages.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AuthInterceptor } from './@core/interceptors/auth-interceptor.service';\r\nimport { AuthenticationGuard } from './@core/guard/authentication.guard';\r\nimport { AuthenticationService } from './@core/services/account/authentication.service';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    NbSidebarModule.forRoot(),\r\n    NbMenuModule.forRoot(),\r\n    NbDatepickerModule.forRoot(),\r\n    NbDialogModule.forRoot(),\r\n    NbWindowModule.forRoot(),\r\n    NbToastrModule.forRoot(),\r\n    NbChatModule.forRoot({\r\n      messageGoogleMapKey: 'AIzaSyA_wNuCzia92MAmdLRzmqitRGvCF7wCZPY',\r\n    }),\r\n    CoreModule.forRoot(), // @core\r\n    ThemeModule.forRoot(), // @theme\r\n    NbToastrModule.forRoot(),\r\n    PagesModule,\r\n    NbWindowModule.forRoot(),\r\n    NbCardModule,\r\n    NgbModule\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  providers: [\r\n    AuthenticationGuard,\r\n    AuthenticationService,  \r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class AppModule {\r\n}\r\n\r\n","import { NbWindowRef, NbWindowService } from '@nebular/theme';\r\nimport { Component, ViewChild, OnInit, Input, TemplateRef } from \"@angular/core\";\r\nimport { ViewCell } from \"ng2-smart-table\";\r\nimport { ToastState, UtilsService } from '../../../@core/services/utils.service';\r\nimport { ContactService } from '../../../@core/services/account/contact.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'ngx-custom-action',\r\n    template: `\r\n        <div class=\"row no-gutters\">\r\n            <div class=\"col-6 d-flex justify-content-center\">\r\n                <button nbButton status=\"danger\" (click)=\"onDelete($event)\">\r\n                    <nb-icon icon=\"trash-outline\"></nb-icon>\r\n                </button>\r\n            </div>\r\n            <div class=\"col-6 d-flex justify-content-center\">\r\n                <button nbButton status=\"primary\" (click)=\"onGetDetail($event)\">\r\n                    <nb-icon icon=\"folder-outline\"></nb-icon>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <ng-template #detailTemplate let-data>\r\n            <nb-card>\r\n                <nb-card-header>\r\n                    Contact Detail\r\n                </nb-card-header>\r\n                <nb-card-body>\r\n                    <div class=\"row px-2 py-2\" [formGroup]=\"contactForm\">\r\n                        <div class=\"col-lg-6 col-sm-12 mt-2\">\r\n                            <input type=\"text\" nbInput fullWidth placeholder=\"Full Name\" formControlName=\"fullName\">\r\n                        </div>\r\n                        <div class=\"col-lg-6 col-sm-12 mt-2\">\r\n                            <input type=\"text\" nbInput fullWidth placeholder=\"Email\" formControlName=\"email\">\r\n                        </div>\r\n                        <div class=\"col-lg-6 col-sm-12 mt-2\">\r\n                            <input type=\"text\" nbInput fullWidth placeholder=\"Phone Number\" formControlName=\"phoneNumber\">\r\n                        </div>\r\n                        <div class=\"col-lg-6 col-sm-12 mt-2\">\r\n                            <input type=\"text\" nbInput fullWidth placeholder=\"Subject\" formControlName=\"subject\">\r\n                        </div>\r\n                        <div class=\"col-12 mt-2\">\r\n                        <textarea rows=\"3\" nbInput fullWidth placeholder=\"Message\" formControlName=\"message\"\r\n                            style=\"resize: none\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                </nb-card-body>\r\n            </nb-card>\r\n        </ng-template>\r\n\r\n        <ng-template #onDeleteTemplate let-data>\r\n            <nb-card>\r\n                <nb-card-header>\r\n                        Are you sure you want to delete this contact?\r\n                </nb-card-header>\r\n                <nb-card-body>\r\n                    <button nbButton status=\"success\" class=\"mt-3\" (click)=\"deleteCoupon()\">\r\n                        CONFIRM\r\n                    </button>\r\n                </nb-card-body>\r\n            </nb-card>\r\n        </ng-template>\r\n    `,\r\n})\r\n\r\nexport class CustomCustomerContactActionComponent implements ViewCell {\r\n    renderValue: string;\r\n    contactForm: FormGroup\r\n    @Input() value: string | number;\r\n    @Input() rowData: any;\r\n\r\n    @ViewChild('onDeleteTemplate') deleteWindow: TemplateRef<any>;\r\n    deleteWindowRef: NbWindowRef;\r\n\r\n    @ViewChild('detailTemplate') detailWindow: TemplateRef<any>;\r\n    detailWindowRef: NbWindowRef;\r\n\r\n    constructor(\r\n        private contactService: ContactService,\r\n        private windowService: NbWindowService,\r\n        private utilsService: UtilsService,\r\n        private formBuilder: FormBuilder\r\n    ) {\r\n\r\n    }\r\n\r\n    onGetDetail(event: any) {\r\n        this.contactService.findById(this.rowData.contactId).subscribe(result => {\r\n            this.contactForm = this.formBuilder.group({\r\n                fullName: [result.fullName],\r\n                email: [result.email],\r\n                phoneNumber: [result.phoneNumber],\r\n                subject: [result.subject],\r\n                message: [result.message],\r\n            })\r\n            this.detailWindowRef = this.windowService\r\n                .open(this.detailWindow, { title: `Contact Id: ${result.contactId}` });\r\n        })\r\n    }\r\n\r\n    onDelete(event: any) {\r\n        this.deleteWindowRef = this.windowService\r\n            .open(this.deleteWindow, { title: `Delete Contact` });\r\n    }\r\n\r\n    deleteCoupon() {\r\n        this.contactService.delete(this.rowData.contactId).subscribe(\r\n            () => {\r\n                this.deleteWindowRef.close()\r\n                this.contactService.notifyContactChange();\r\n                this.utilsService.updateToastState(new ToastState('Delete Contact Successfully!', \"success\"))\r\n            },\r\n            error => {\r\n                this.utilsService.updateToastState(new ToastState('Delete Contact Failed!', \"danger\"))\r\n                console.log(error);\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n}","import { takeUntil } from 'rxjs/operators';\r\nimport { Component, OnInit, AfterViewInit, ViewChild, ElementRef, TemplateRef } from '@angular/core';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ToastState, UtilsService } from '../../../@core/services/utils.service';\r\nimport { Subject } from 'rxjs';\r\nimport { CustomCustomerContactActionComponent } from './custom-customer-contact-action.component';\r\nimport { ContactService } from '../../../@core/services/account/contact.service';\r\nimport { Contact } from '../../../@core/models/account/contact.model';\r\nimport { NbWindowRef, NbWindowService } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: \"ngx-customer-contact\",\r\n  templateUrl: \"./customer-contact.component.html\",\r\n  styleUrls: [\"./customer-contact.component.scss\"],\r\n})\r\nexport class CustomerContactComponent implements OnInit, AfterViewInit {\r\n  numberOfItem: number = localStorage.getItem('itemPerPage') != null ? +localStorage.getItem('itemPerPage') : 10; // default\r\n  source: LocalDataSource = new LocalDataSource();\r\n  private unsubscribe = new Subject<void>();\r\n\r\n  @ViewChild('onDeleteTemplate') deleteWindow: TemplateRef<any>;\r\n  deleteWindowRef: NbWindowRef;\r\n  selectedContacts: Contact[] = []\r\n  loadedContacts: boolean = false\r\n\r\n  settings = {\r\n    selectMode: 'multi',\r\n    actions: {\r\n      position: 'right',\r\n      edit: false,\r\n      delete: false,\r\n      add: false,\r\n      columnTitle: ''\r\n    },\r\n    columns: {\r\n      contactId: {\r\n        title: 'Id',\r\n        type: 'number',\r\n        width: '5%'\r\n      },\r\n      email: {\r\n        title: 'Email',\r\n        type: 'string',\r\n        width: \"12%\"\r\n      },\r\n      fullName: {\r\n        title: 'Full Name',\r\n        type: 'string',\r\n        width: \"12%\"\r\n      },\r\n      phoneNumber: {\r\n        title: 'Phone Number',\r\n        type: 'string',\r\n        width: \"12%\"\r\n      },\r\n      subject: {\r\n        title: 'Subject',\r\n        type: 'string',\r\n        width: \"12%\"\r\n      },\r\n      message: {\r\n        title: 'Message',\r\n        type: 'string',\r\n        width: \"30%\"\r\n      },\r\n      actions: {\r\n        title: 'Actions',\r\n        type: 'custom',\r\n        sort: false,\r\n        filter: false,\r\n        renderComponent: CustomCustomerContactActionComponent\r\n      }\r\n    },\r\n    pager: {\r\n      display: true,\r\n      perPage: this.numberOfItem\r\n    },\r\n  }\r\n\r\n  constructor(\r\n    private contactService: ContactService,\r\n    private utilsService: UtilsService,\r\n    private windowService: NbWindowService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.contactService.contactChange$\r\n      .pipe(takeUntil(this.unsubscribe))\r\n      .subscribe(() => {\r\n        this.loadContacts();\r\n      });\r\n    this.loadContacts();\r\n  }\r\n\r\n  loadContacts() {\r\n    this.contactService.findAll().subscribe(\r\n      data => {\r\n        const mappedContacts: any[] = data._embedded.contacts.map(contact => {\r\n          return {\r\n            contactId: contact.contactId,\r\n            fullName: contact.fullName,\r\n            email: contact.email,\r\n            phoneNumber: contact.phoneNumber,\r\n            subject: contact.subject,\r\n            message: contact.message.length > 50 ? contact.message.substring(0, 50) + \"...\" : contact.message,\r\n            createdAt: new DatePipe('en-US').transform(contact.createdAt, 'dd-MM-yyyy hh:mm'),\r\n          }\r\n        })\r\n        this.source.load(mappedContacts)\r\n        this.loadedContacts = true\r\n      }\r\n    )\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const pager = document.querySelector('ng2-smart-table-pager');\r\n    pager.classList.add('d-block')\r\n  }\r\n\r\n  onRowSelect(event: any): void {\r\n    this.selectedContacts = (event.selected) as Contact[]\r\n  }\r\n\r\n  onUpdateStatus(isUpdated: boolean) {\r\n    if(isUpdated) {\r\n      this.loadContacts();\r\n      this.selectedContacts = []\r\n      this.utilsService.updateToastState(new ToastState(\"Updated The Customers's Status Successfully!\", \"success\"))\r\n    } else {\r\n      this.utilsService.updateToastState(new ToastState(\"Updated The Customers's Status Failed!\", \"danger\"))\r\n    }\r\n  }\r\n\r\n  openDeleteWindow() {\r\n    this.deleteWindowRef = this.windowService\r\n      .open(this.deleteWindow, { title: `Delete Contacts` });\r\n  }\r\n\r\n  onDeleteContacts() {\r\n    this.contactService.deleteContacts(this.selectedContacts).subscribe(\r\n      (result) => {\r\n        this.selectedContacts = []\r\n        this.deleteWindowRef.close()\r\n        this.contactService.notifyContactChange();\r\n        this.utilsService.updateToastState(new ToastState('Delete The Contacts Successfully!', \"success\"))\r\n      },\r\n      error => {\r\n        this.utilsService.updateToastState(new ToastState('Delete The Contacts Failed!', \"danger\"))\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadedContacts; else loadingBlock\">\n    <nb-card>\n        <nb-card-header class=\"d-flex justify-content-between align-items-center\">\n            <h6>\n                Contact List\n            </h6>\n            <ngx-item-of-list (selectNumberOfItem)=\"source.setPaging(1, $event)\"></ngx-item-of-list>\n        </nb-card-header>\n        <nb-card-body>\n            <ng2-smart-table \n                id=\"product-table\" \n                [settings]=\"settings\" \n                [source]=\"source\"\n                [ngClass]=\"'smart-table'\"\n                (userRowSelect)=\"onRowSelect($event)\">\n            </ng2-smart-table>\n        </nb-card-body>\n        <nb-card-footer>\n            <ng-container *ngIf=\"selectedContacts.length > 0\">\n                <button nbButton status=\"danger\" (click)=\"openDeleteWindow()\">\n                    <nb-icon icon=\"trash-outline\"></nb-icon>\n                </button>\n            </ng-container>\n        </nb-card-footer>\n    </nb-card>\n</ng-container>\n\n<ng-template #loadingBlock>\n    <nb-card [size]=\"'small'\" [nbSpinner]=\"!loadedContacts\" nbSpinnerSize=\"large\" nbSpinnerStatus=\"primary\">\n    </nb-card>\n</ng-template>\n\n\n<ng-template #onDeleteTemplate let-data>\n    <nb-card>\n        <nb-card-header>\n                Are you sure you want to delete this contacts?\n        </nb-card-header>\n        <nb-card-body>\n            <button nbButton status=\"success\" class=\"mt-3\" (click)=\"onDeleteContacts()\">\n                CONFIRM\n            </button>\n        </nb-card-body>\n    </nb-card>\n</ng-template>","import { Component, Input, OnChanges, SimpleChanges, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { Product } from '../../../../@core/models/product/product.model';\nimport { Account } from '../../../../@core/models/account/account.model';\nimport { AddressService } from '../../../../@core/services/account/address.service';\n\n@Component({\n  selector: 'ngx-customer-detail-basic',\n  templateUrl: './customer-detail-basic.component.html',\n  styleUrls: ['./customer-detail-basic.component.scss']\n})\nexport class CustomerDetailBasicComponent implements OnChanges{\n  @Input() account: Account\n  isAccountAvailable = false;\n  constructor(\n    public addressService: AddressService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.account && this.account) {\n      this.isAccountAvailable = true;\n    } else {\n      this.isAccountAvailable = false;\n    }\n  }\n\n}\n","<ng-container *ngIf=\"isAccountAvailable\">\n    <div class=\"row\">\n        <div class=\"col-lg-6 col-md-12\">\n            <div class=\"row\">\n                <div class=\"col-lg-5 d-flex align-items-center justify-content-center\">\n                    <img [src]=\"account.imageUrl !== null ? \n                        'http://localhost:9090/assets/upload/account/' + account.image.imageUrl :\n                        'assets/images/no-image.jpg'\" alt=\"\" class=\"d-block w-100\">\n                </div>\n                <div class=\"col-lg-7 mt-4\">\n                    <h6>Email: {{account.email}}</h6>\n                    <h6>Username: {{account.username}}</h6>\n                    <p><span class=\"font-weight-bold\">Full Name: </span>{{account.fullName}}</p>\n                    <p><span class=\"font-weight-bold\">Phone Number: </span>{{account.phoneNumber}}</p>\n                    <div class=\"row d-flex pl-3\">\n                        <div class=\"font-weight-bold\">Status:</div>\n                        <div class=\"d-flex align-items-center\">\n                            <div *ngIf=\"account.active\" class=\"pl-3\">\n                                <h6><span class=\"badge badge-pill badge-success\">ACTIVE</span></h6>\n                            </div>\n                            <div *ngIf=\"!account.active\" class=\"pl-3\">\n                                <h6><span class=\"badge badge-pill badge-danger\">INACTIVE</span></h6>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-lg-12 mt-3\">\n                    <p>Shipping Address</p>\n                    <ol>\n                        <li *ngFor=\"let address of account.addresses\">\n                            {{addressService.getAddressStringFormAddress(address)}}\n                        </li>\n                    </ol>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-container>\n\n\n<div *ngIf=\"!isAccountAvailable\">\n    <p>Loading...</p>\n</div>","import { Component, Input, OnChanges, SimpleChanges, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { ProductReview } from '../../../../@core/models/product/product-review.model';\nimport { ACCOUNT_IMAGE_DIRECTORY } from '../../../../@core/utils/image-storing-directory';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'ngx-customer-detail-comments',\n  templateUrl: './customer-detail-comments.component.html',\n  styles: [\n    `\n\t\t\ti {\n\t\t\t\tfont-size: 2rem;\n\t\t\t\tpadding-right: 0.1rem;\n\t\t\t\tcolor: #b0c4de;\n\t\t\t}\n\t\t\t.filled {\n\t\t\t\tcolor: #FFD700;\n\t\t\t}\n\t\t\t.low {\n\t\t\t\tcolor: #deb0b0;\n\t\t\t}\n\t\t\t.filled.low {\n\t\t\t\tcolor: #ff1e1e;\n\t\t\t}\n\t\t`,\n  ],\n})\nexport class CustomerDetailCommentsComponent implements OnChanges {\n  @Input() comments: ProductReview[]\n  filteredComments: ProductReview[]\n  filterMode: boolean\n\n  isCommentAvailable = false;\n  searchFormGroup: FormGroup\n  constructor(\n    private formBuilder: FormBuilder\n  ) {\n    this.searchFormGroup = formBuilder.group({\n      email: [''],\n      sort: [null],\n      filter: [null]\n    })\n    this.onEmailChanges()\n  }\n\n  onFilterAny(controlChangeName: string) {\n    (controlChangeName != 'email') ? this.searchFormGroup.get('email').reset() : 1;\n    (controlChangeName != 'sort') ? this.searchFormGroup.get('sort').reset() : 1;\n    (controlChangeName != 'filter') ? this.searchFormGroup.get('filter').reset() : 1;\n  }\n\n  onEmailChanges() {\n    this.searchFormGroup.get('email').valueChanges.subscribe(data => {\n      this.onFilterAny('email')\n      if (data == '') {\n        this.filterMode = false\n      } else {\n        this.filterMode = true\n        this.filteredComments = [...this.comments].filter(cmt => cmt.accountEmail.startsWith(data))\n      }\n    })\n  }\n\n  onSort(event: any) {\n    this.onFilterAny('sort')\n    this.searchFormGroup.get('sort').setValue(event)\n    if (event == null) {\n      this.filterMode = false\n    } else {\n      this.filterMode = true\n      if (event == 'Newest') {\n        this.filteredComments = [...this.comments].sort((cmt1, cmt2) =>\n          (new Date(cmt1.createdAt).getTime() < new Date(cmt2.createdAt).getTime()) ? 1 : -1)\n      } else if (event == 'Rating Star') {\n        this.filteredComments = [...this.comments].sort((cmt1, cmt2) => {\n          return (cmt2.rating > cmt1.rating) ? 1 : -1\n        })\n      }\n    }\n  }\n\n  onFilter(event: any) {\n    this.onFilterAny('filter')\n    this.searchFormGroup.get('filter').setValue(event)\n    if (event == null) {\n      this.filterMode = false\n    } else {\n      this.filterMode = true\n      this.filteredComments = [...this.comments].filter((cmt1) => {\n        return cmt1.rating == event\n      })\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.comments && this.comments) {\n      this.isCommentAvailable = true;\n      this.comments.map((comment: ProductReview) => {\n        comment.imageUrl = ACCOUNT_IMAGE_DIRECTORY + comment.imageUrl\n      })\n\n    } else {\n      this.isCommentAvailable = false;\n    }\n  }\n}\n","<ng-container *ngIf=\"isCommentAvailable\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-2\"></div>\n            <div class=\"col-lg-8 col-md-12\">\n                <nb-card>\n                    <nb-card-body>\n                        <div class=\"row\">\n                            <div class=\"col-12 mb-4 d-flex\" [formGroup]=\"searchFormGroup\">\n                                <nb-form-field>\n                                    <input type=\"text\" nbInput status=\"primary\" placeholder=\"Search by email\" formControlName=\"email\">\n                                    <nb-icon nbSuffix icon=\"search-outline\" pack=\"eva\"></nb-icon>\n                                </nb-form-field>\n                                <nb-select placeholder=\"Sort\" formControlName=\"sort\" class=\"ml-3\"\n                                    (selectedChange)=\"onSort($event)\">\n                                    <nb-select-label>\n                                        Sort: {{ searchFormGroup.get('sort').value }}\n                                    </nb-select-label>\n                                    <nb-option>Reset</nb-option>\n                                    <nb-option value=\"Newest\">Newest</nb-option>\n                                    <nb-option value=\"Rating Star\">Rating Star</nb-option>\n                                </nb-select>\n                                <nb-select placeholder=\"Filter\" formControlName=\"filter\" class=\"ml-3\"\n                                    (selectedChange)=\"onFilter($event)\">\n                                    <nb-select-label>\n                                        Filter: {{searchFormGroup.get('filter').value}}\n                                    </nb-select-label>\n                                    <nb-option>Reset</nb-option>\n                                    <nb-option [value]=\"1\">\n                                        <ngb-rating [max]=\"1\" [rate]=\"1\" [readonly]=\"true\">\n                                            <ng-template let-fill=\"fill\" let-index=\"index\">\n                                                <span class=\"star\" [class.filled]=\"fill === 100\">&#9733;</span>\n                                            </ng-template>\n                                        </ngb-rating>\n                                    </nb-option>\n                                    <nb-option [value]=\"2\">\n                                        <ngb-rating [max]=\"2\" [rate]=\"2\" [readonly]=\"true\">\n                                            <ng-template let-fill=\"fill\" let-index=\"index\">\n                                                <span class=\"star\" [class.filled]=\"fill === 100\">&#9733;</span>\n                                            </ng-template>\n                                        </ngb-rating>\n                                    </nb-option>\n                                    <nb-option [value]=\"3\">\n                                        <ngb-rating [max]=\"3\" [rate]=\"3\" [readonly]=\"true\">\n                                            <ng-template let-fill=\"fill\" let-index=\"index\">\n                                                <span class=\"star\" [class.filled]=\"fill === 100\">&#9733;</span>\n                                            </ng-template>\n                                        </ngb-rating>\n                                    </nb-option>\n                                    <nb-option [value]=\"4\">\n                                        <ngb-rating [max]=\"4\" [rate]=\"4\" [readonly]=\"true\">\n                                            <ng-template let-fill=\"fill\" let-index=\"index\">\n                                                <span class=\"star\" [class.filled]=\"fill === 100\">&#9733;</span>\n                                            </ng-template>\n                                        </ngb-rating>\n                                    </nb-option>\n                                    <nb-option [value]=\"5\">\n                                        <ngb-rating [max]=\"5\" [rate]=\"5\" [readonly]=\"true\">\n                                            <ng-template let-fill=\"fill\" let-index=\"index\">\n                                                <span class=\"star\" [class.filled]=\"fill === 100\">&#9733;</span>\n                                            </ng-template>\n                                        </ngb-rating>\n                                    </nb-option>\n                                </nb-select>\n                            </div>\n                            \n                            <ng-container *ngIf=\"filterMode\">\n                                <div class=\"col-12 mb-4\" *ngFor=\"let comment of filteredComments\">\n                                    <ng-container [ngTemplateOutlet]=\"commentTemplate\" \n                                        [ngTemplateOutletContext]=\"{ comment: comment }\"></ng-container>\n                                </div>\n                            </ng-container>\n                            <ng-container *ngIf=\"!filterMode\">\n                                <div class=\"col-12 mb-4\" *ngFor=\"let comment of comments\">\n                                    <ng-container [ngTemplateOutlet]=\"commentTemplate\" \n                                        [ngTemplateOutletContext]=\"{ comment: comment }\"></ng-container>\n                                </div>\n                            </ng-container>\n                        </div>\n                    </nb-card-body>\n                </nb-card>\n            </div>\n        </div>\n\n    </div>\n</ng-container>\n\n<ng-template #commentTemplate let-comment=\"comment\">\n    <div class=\"row\">\n        <div class=\"col-2 d-flex\">\n            <img [src]=\"comment.imageUrl\" alt=\"\" class=\"d-block w-100\" [height]=\"75\">\n        </div>\n        <div class=\"col-10\">\n            <p class=\"mb-0\">\n                <span class=\"font-weight-bold\">{{comment.accountEmail + \" \"}}</span>\n                <span>\n                    <ngb-rating [max]=\"5\" [rate]=\"comment.rating\" [readonly]=\"true\">\n                        <ng-template let-fill=\"fill\" let-index=\"index\">\n                            <span class=\"star\" [class.filled]=\"fill === 100\">&#9733;</span>\n                        </ng-template>\n                    </ngb-rating>\n                </span>\n            </p>\n            <p>{{comment.content}}</p>\n            <p>\n                <span class=\"text-monospace\">{{comment.createdAt | date:'hh:mma dd/MM/yy'}}</span>\n            </p>\n        </div>\n    </div>\n</ng-template>","import { Component, Input, OnChanges, SimpleChanges, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { ProductReview } from '../../../../@core/models/product/product-review.model';\nimport { ACCOUNT_IMAGE_DIRECTORY } from '../../../../@core/utils/image-storing-directory';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Order } from '../../../../@core/models/order/order.model';\n\n@Component({\n  selector: 'ngx-customer-detail-orders',\n  templateUrl: './customer-detail-orders.component.html',\n})\nexport class CustomerDetailOrdersComponent implements OnChanges {\n  @Input() orders: Order[]\n  filteredOrders: Order[]\n  filterMode: boolean\n\n  isOrdersAvailable = false;\n  searchFormGroup: FormGroup\n  constructor(\n    private formBuilder: FormBuilder\n  ) {\n    this.searchFormGroup = formBuilder.group({\n      trackingNumber: [''],\n      sort: [null],\n      filterStatus: [null],\n      filterPayment: [null]\n    })\n    this.onSearchTrackingNumber()\n  }\n\n  onFilterAny(controlChangeName: string) {\n    (controlChangeName != 'trackingNumber') ? this.searchFormGroup.get('trackingNumber').reset() : 1;\n    (controlChangeName != 'sort') ? this.searchFormGroup.get('sort').reset() : 1;\n    (controlChangeName != 'filterStatus') ? this.searchFormGroup.get('filterStatus').reset() : 1;\n    (controlChangeName != 'filterPayment') ? this.searchFormGroup.get('filterPayment').reset() : 1;\n  }\n\n  onSearchTrackingNumber() {\n    this.searchFormGroup.get('trackingNumber').valueChanges.subscribe(data => {\n      this.onFilterAny('trackingNumber')\n      if (data == '') {\n        this.filterMode = false\n      } else {\n        this.filterMode = true\n        this.filteredOrders = [...this.orders].filter(order => order.orderTrackingNumber.startsWith(data))\n      }\n    })\n  }\n\n  onSort(event: any) {\n    this.onFilterAny('sort')\n    this.searchFormGroup.get('sort').setValue(event)\n    if (event == null) {\n      this.filterMode = false\n    } else {\n      this.filterMode = true\n      if (event == 'Newest') {\n        this.filteredOrders = [...this.orders].sort((o1, o2) =>\n          (new Date(o1.createdAt).getTime() < new Date(o2.createdAt).getTime()) ? 1 : -1)\n      } else if (event == 'Total Price') {\n        this.filteredOrders = [...this.orders].sort((o1, o2) => {\n          return (o2.totalPrice > o1.totalPrice) ? 1 : -1\n        })\n      }\n    }\n  }\n\n  onFilterStatus(event: any) {\n    this.onFilterAny('filterStatus')\n    this.searchFormGroup.get('filterStatus').setValue(event)\n    if (event == null) {\n      this.filterMode = false\n    } else {\n      this.filterMode = true\n      this.filteredOrders = [...this.orders].filter((o) => {\n        return o.orderStatus.statusName == event\n      })\n    }\n  }\n\n  onFilterPayment(event: any) {\n    this.onFilterAny('filterPayment')\n    this.searchFormGroup.get('filterPayment').setValue(event)\n    if (event == null) {\n      this.filterMode = false\n    } else {\n      this.filterMode = true\n      this.filteredOrders = [...this.orders].filter((o) => {\n        return o.paymentMethod.methodName == event\n      })\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.orders && this.orders) {\n      this.isOrdersAvailable = true;\n    } else {\n      this.isOrdersAvailable = false;\n    }\n  }\n}\n","<ng-container *ngIf=\"isOrdersAvailable\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-2\"></div>\n            <div class=\"col-lg-8 col-md-12\">\n                <nb-card>\n                    <nb-card-body>\n                        <div class=\"row\">\n                            <div class=\"col-12 mb-4 d-flex\" [formGroup]=\"searchFormGroup\">\n                                <nb-form-field>\n                                    <input type=\"text\" nbInput status=\"primary\" placeholder=\"Search by tracking number\"\n                                        formControlName=\"trackingNumber\">\n                                    <nb-icon nbSuffix icon=\"search-outline\" pack=\"eva\"></nb-icon>\n                                </nb-form-field>\n                                <nb-select placeholder=\"Sort\" formControlName=\"sort\" class=\"ml-3\"\n                                    (selectedChange)=\"onSort($event)\">\n                                    <nb-select-label>\n                                        Sort: {{ searchFormGroup.get('sort').value }}\n                                    </nb-select-label>\n                                    <nb-option>Reset</nb-option>\n                                    <nb-option value=\"Newest\">Newest</nb-option>\n                                    <nb-option value=\"Total Price\">Total Price</nb-option>\n                                </nb-select>\n                                <nb-select placeholder=\"Filter By Status\" formControlName=\"filterStatus\" class=\"ml-3\"\n                                    (selectedChange)=\"onFilterStatus($event)\">\n                                    <nb-select-label>\n                                        Filter By Status: {{searchFormGroup.get('filterStatus').value}}\n                                    </nb-select-label>\n                                    <nb-option>Reset</nb-option>\n                                    <nb-option value=\"Canceled\">Canceled</nb-option>\n                                    <nb-option value=\"Handling\">Handling</nb-option>\n                                    <nb-option value=\"Delivering\">Delivering</nb-option>\n                                    <nb-option value=\"Completed\">Completed</nb-option>\n                                </nb-select>\n                                <nb-select placeholder=\"Filter By Payment\" formControlName=\"filterPayment\" class=\"ml-3\"\n                                    (selectedChange)=\"onFilterPayment($event)\">\n                                    <nb-select-label>\n                                        Filter By Payment: {{searchFormGroup.get('filterPayment').value}}\n                                    </nb-select-label>\n                                    <nb-option>Reset</nb-option>\n                                    <nb-option value=\"Vnpay\">Vnpay</nb-option>\n                                    <nb-option value=\"Paypal\">Paypal</nb-option>\n                                </nb-select>\n                            </div>\n\n                            <ng-container *ngIf=\"filterMode\">\n                                <div class=\"row m-3 p-3 border border-primary mb-3\" *ngFor=\"let order of filteredOrders\">\n                                    <ng-container [ngTemplateOutlet]=\"orderTemplate\" [ngTemplateOutletContext]=\"{ order: order }\">\n                                    </ng-container>\n                                </div>\n                            </ng-container>\n                            <ng-container *ngIf=\"!filterMode\">\n                                <div class=\"row m-3 p-3 border border-primary mb-3\" *ngFor=\"let order of orders\">\n                                    <ng-container [ngTemplateOutlet]=\"orderTemplate\" [ngTemplateOutletContext]=\"{ order: order }\">\n                                    </ng-container>\n                                </div>\n                            </ng-container>\n                        </div>\n                    </nb-card-body>\n                </nb-card>\n            </div>\n        </div>\n    </div>\n</ng-container>\n\n<ng-template #orderTemplate let-order=\"order\">\n    <a [href]=\"'/admin/orders/detail/' + order.orderId\">\n        <div class=\"col-12\">\n            <p><span class=\"font-weight-bold\">Tracking Number: </span>{{order.orderTrackingNumber}}</p>\n            <div class=\"row\">\n                <div class=\"col-6\">\n                    <p>\n                        <span class=\"font-weight-bold\">Coupon Applied: </span>\n                        {{ order.couponCode !== null ?order.couponCode : 'NONE' }}\n                    </p>\n                </div>\n                <div class=\"col-6\">\n                    <p>\n                        <span class=\"font-weight-bold\">Payment method: </span>\n                        {{order.paymentMethod.methodName}}\n                    </p>\n                </div>\n                <div class=\"col-6\">\n                    <p><span class=\"font-weight-bold\">Total Quantity: </span>{{order.totalQuantity}}</p>\n                </div>\n                <div class=\"col-6\">\n                    <p><span class=\"font-weight-bold\">Total Price: </span>{{order.totalPrice | currency: 'USD'}}\n                    </p>\n                </div>\n                <div class=\"col-6\">\n                    <p><span class=\"font-weight-bold\">Created At: </span>{{order.createdAt | date: 'short'}}</p>\n                </div>\n                <div class=\"col-6 d-flex align-items-center\">\n                    <p class=\"font-weight-bold\">Status:</p>\n                    <div class=\"pl-3\" *ngIf=\"order.orderStatus.statusName==='Canceled'\">\n                        <h6><span class=\"badge badge-pill badge-danger\">Canceled</span></h6>\n                    </div>\n                    <div class=\"pl-3\" *ngIf=\"order.orderStatus.statusName==='Hanling'\">\n                        <h6><span class=\"badge badge-pill badge-info\">Handling</span></h6>\n                    </div>\n                    <div class=\"pl-3\" *ngIf=\"order.orderStatus.statusName==='Delivering'\">\n                        <h6><span class=\"badge badge-pill badge-warning\">Delivering</span></h6>\n                    </div>\n                    <div class=\"pl-3\" *ngIf=\"order.orderStatus.statusName==='Completed'\">\n                        <h6><span class=\"badge badge-pill badge-success\">Completed</span></h6>\n                    </div>\n                </div>\n                <div class=\"col-12\">\n                    <p><span class=\"font-weight-bold\">Shipping Address: </span>{{order.address}}</p>\n                </div>\n            </div>\n    \n        </div>\n    </a>\n</ng-template>","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AccountService } from '../../../@core/services/account/account.service';\nimport { Account } from '../../../@core/models/account/account.model';\nimport { ProductReview } from '../../../@core/models/product/product-review.model';\n\n@Component({\n  selector: 'ngx-customer-detail',\n  templateUrl: './customer-detail.component.html',\n  styleUrls: ['./customer-detail.component.scss']\n})\nexport class CustomerDetailComponent {\n  account: Account;\n  comments: ProductReview[];\n  numberOfComments\n\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private accountService: AccountService,\n  ) {\n    this.activatedRoute.params.subscribe(\n      params => {\n        this.accountService.findById(+params['id']).subscribe(\n          (data: Account) => {\n            this.account = data\n            this.numberOfComments = this.account.productReviews.length\n          }\n        )\n      }\n    )\n  }\n}\n","<nb-card>\r\n    <nb-card-body>\r\n        <nb-tabset fullWidth>\r\n            <nb-tab tabTitle=\"Basic Information\" tabIcon=\"list-outline\">\r\n                <ngx-customer-detail-basic *ngIf=\"account\" [account]=\"account\"></ngx-customer-detail-basic>\r\n            </nb-tab>\r\n            <nb-tab tabTitle=\"Orders\" tabIcon=\"file-text-outline\"\r\n                [badgeText]=\"account ? account.totalOrders : null\" badgeStatus=\"success\">\r\n                <ngx-customer-detail-orders *ngIf=\"account\" [orders]=\"account.orders\"></ngx-customer-detail-orders>\r\n            </nb-tab>\r\n            <nb-tab tabTitle=\"Comments\" tabIcon=\"message-square-outline\"\r\n                [badgeText]=\"numberOfComments\" badgeStatus=\"success\">\r\n                <ngx-customer-detail-comments *ngIf=\"account\" [comments]=\"account.productReviews\"></ngx-customer-detail-comments>\r\n            </nb-tab>\r\n        </nb-tabset>\r\n    </nb-card-body>\r\n</nb-card>","import { Component, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef, ViewChild, Input } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { NbWindowRef, NbWindowService } from \"@nebular/theme\";\r\nimport { ViewCell } from \"ng2-smart-table\";\r\nimport { ToastState, UtilsService } from \"../../../../../@core/services/utils.service\";\r\nimport { AccountService } from \"../../../../../@core/services/account/account.service\";\r\nimport { Account } from '../../../../../@core/models/account/account.model';\r\n\r\n@Component({\r\n    templateUrl: 'custom-customer-action.component.html',\r\n    styles: [\r\n        `\r\n            button {\r\n                padding: 0.5rem 0.7rem;\r\n            }\r\n            i {\r\n                font-size: 1.2rem;\r\n            }\r\n        `\r\n    ]\r\n})\r\n\r\nexport class CustomCustomerActionComponent implements ViewCell, OnInit{\r\n    renderValue: string;\r\n\r\n    @Input() value: string | number;\r\n    @Input() rowData: any;\r\n\r\n    windowRef: NbWindowRef;\r\n    @ViewChild('editCustomer') editCustomerWindow: TemplateRef<any>;\r\n    editCustomerFormGroup: FormGroup;\r\n\r\n    constructor(\r\n        private windowService: NbWindowService,\r\n        private formBuilder: FormBuilder,\r\n        private utilsService: UtilsService,\r\n        private accountService: AccountService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.editCustomerFormGroup = this.formBuilder.group({\r\n            id: [],\r\n            username: [],\r\n            email: [, [Validators.required, Validators.maxLength(100)]],\r\n            password: [],\r\n            fullName: [, [Validators.required, Validators.maxLength(100)]],\r\n            phoneNumber: [, [Validators.required, Validators.maxLength(100)]],\r\n            active: [false],\r\n            image: [, Validators.required],\r\n        })\r\n        this.fillFormValues()\r\n    }\r\n\r\n    fillFormValues() {\r\n        this.editCustomerFormGroup.get('id').setValue(this.rowData.id)\r\n        this.editCustomerFormGroup.get('username').setValue(this.rowData.username)\r\n        this.editCustomerFormGroup.get('email').setValue(this.rowData.email)\r\n        this.editCustomerFormGroup.get('fullName').setValue(this.rowData.fullName)\r\n        this.editCustomerFormGroup.get('phoneNumber').setValue(this.rowData.phoneNumber)\r\n        this.editCustomerFormGroup.get('active').setValue(this.rowData.active)\r\n        this.editCustomerFormGroup.get('image').setValue(this.rowData.imageUrl)\r\n    }\r\n\r\n    onGetDetail() {\r\n        this.router.navigate(['/admin/customers', 'detail', this.rowData.id])\r\n    }\r\n\r\n    onEdit() {\r\n        this.windowRef = this.windowService.open(\r\n            this.editCustomerWindow,\r\n            { title: 'Edit Customer Account Id: ' +  this.rowData.id},\r\n        );\r\n    }\r\n\r\n    onEditCustomer() {\r\n        if (this.editCustomerFormGroup.invalid) {\r\n            this.editCustomerFormGroup.markAllAsTouched();\r\n            this.utilsService.updateToastState(new ToastState('Edit Account Failed!', \"danger\"))\r\n            return;\r\n        }\r\n        let account: any = new Account();\r\n        account.id = this.editCustomerFormGroup.get('id').value\r\n        account.username = this.editCustomerFormGroup.get('username').value\r\n        account.email = this.editCustomerFormGroup.get('email').value\r\n        account.password = this.editCustomerFormGroup.get('password').value\r\n        account.fullName = this.editCustomerFormGroup.get('fullName').value\r\n        account.phoneNumber = this.editCustomerFormGroup.get('phoneNumber').value\r\n        account.active = this.editCustomerFormGroup.get('active').value\r\n        account.image = this.editCustomerFormGroup.get('image').value\r\n        console.log(account);\r\n        \r\n        this.accountService.update(account).subscribe(\r\n            data => {\r\n                if(data) {\r\n                    this.utilsService.updateToastState(new ToastState('Edit Account Successfully!', \"success\"))\r\n                    this.accountService.notifyAccountChange()\r\n                    this.windowRef.close();\r\n                } else {\r\n                    this.utilsService.updateToastState(new ToastState('Edit Account Failed!', \"danger\"))\r\n                }\r\n            },\r\n            error => console.log(error)\r\n        )\r\n    }\r\n\r\n    selectFile(event: any) {\r\n        if (event.target.files) {\r\n            const reader = new FileReader();\r\n            reader.onload = (event: any) => {\r\n                this.editCustomerFormGroup.get('image').setValue(event.target.result)\r\n            };\r\n            reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n    }\r\n}","<div class=\"row d-flex justify-content-center\">\r\n    <div class=\"col-6 d-flex justify-content-center\">\r\n        <button nbButton status=\"primary\" (click)=\"onGetDetail()\">\r\n            <nb-icon icon=\"folder-outline\"></nb-icon>\r\n        </button>\r\n    </div>\r\n</div>\r\n","import { NbWindowRef } from '@nebular/theme';\r\nimport { Component, ViewChild, OnInit, Input, TemplateRef } from \"@angular/core\";\r\nimport { ViewCell } from \"ng2-smart-table\";\r\n\r\n@Component({\r\n    template: `\r\n        <div *ngIf=\"renderValue==='true'\" class=\"\">\r\n            <h6 class=\"d-flex justify-content-center\">\r\n                <span class=\"badge badge-pill badge-success\">Active</span>\r\n            </h6>\r\n        </div>\r\n        <div *ngIf=\"renderValue==='false'\">\r\n            <h6 class=\"d-flex justify-content-center\">\r\n                <span class=\"badge badge-pill badge-danger\">Inactive</span>\r\n            </h6>\r\n        </div>\r\n    `,\r\n})\r\nexport class CustomCustomerActiveActionComponent implements ViewCell, OnInit {\r\n    renderValue: string;\r\n\r\n    @Input() value: string | number;\r\n    @Input() rowData: any;\r\n\r\n    @ViewChild('onDeleteTemplate') deleteWindow: TemplateRef<any>;\r\n    deleteWindowRef: NbWindowRef;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void {\r\n        this.renderValue = this.rowData.active.toString()\r\n    }\r\n\r\n}","import { Component, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { NbWindowRef, NbWindowService } from '@nebular/theme';\r\nimport { DefaultFilter } from 'ng2-smart-table';\r\nimport { ToastState, UtilsService } from '../../../../../@core/services/utils.service';\r\nimport { CustomValidator, isEmailExisting, isEmailNotExisting, isUsernameExisting } from '../../../../../@core/validators/custom-validator';\r\nimport { AccountService } from '../../../../../@core/services/account/account.service';\r\nimport { Account } from '../../../../../@core/models/account/account.model';\r\n\r\n@Component({\r\n    templateUrl: 'custom-customer-filter-actions.component.html',\r\n    styleUrls: ['custom-customer-filter-actions.component.scss']\r\n})\r\nexport class CustomCustomerFilterActionsComponent extends DefaultFilter implements OnInit, OnChanges {\r\n\r\n    inputControl = new FormControl();\r\n\r\n    windowRef: NbWindowRef;\r\n    @ViewChild('createCustomer') createCustomerWindow: TemplateRef<any>;\r\n    addCustomerFormGroup: FormGroup;\r\n\r\n    constructor(\r\n        private windowService: NbWindowService,\r\n        private formBuilder: FormBuilder,\r\n        private utilsService: UtilsService,\r\n        private accountService: AccountService\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.addCustomerFormGroup = this.formBuilder.group({\r\n            username: [, \r\n                [CustomValidator.notBlank,\r\n                Validators.minLength(3),\r\n                Validators.maxLength(20),\r\n                Validators.pattern(\"^[a-zA-Z0-9_]{3,20}$\")],\r\n                [isUsernameExisting(this.accountService)]],\r\n            email: [, \r\n                    [CustomValidator.notBlank,\r\n                    Validators.maxLength(50),\r\n                    Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")],\r\n                    [isEmailExisting(this.accountService)]],\r\n            password: [, \r\n                    [CustomValidator.notBlank,\r\n                    Validators.minLength(8),\r\n                    Validators.maxLength(50),\r\n                    Validators.pattern(/^(?=.*\\d)(?=.*[a-zA-Z]).{8,}$/)]],\r\n            fullName: [, [CustomValidator.notBlank, Validators.maxLength(50)]],\r\n            phoneNumber: [,  [Validators.pattern(/^\\s*\\d{10}\\s*$/)]],\r\n            active: [true],\r\n            image: [],\r\n        });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        1\r\n    }\r\n\r\n    onAdd() {\r\n        this.windowRef = this.windowService.open(\r\n            this.createCustomerWindow,\r\n            { title: 'Add Customer Account' },\r\n        );\r\n    }\r\n\r\n    addCustomer() {\r\n        console.log(this.addCustomerFormGroup);\r\n\r\n        if (this.addCustomerFormGroup.invalid) {\r\n            this.addCustomerFormGroup.markAllAsTouched();\r\n            this.utilsService.updateToastState(new ToastState('Add Account Failed!', \"danger\"))\r\n            return;\r\n        }\r\n        let account: Account = new Account();\r\n        account.username = this.addCustomerFormGroup.get('username').value\r\n        account.email = this.addCustomerFormGroup.get('email').value\r\n        account.password = this.addCustomerFormGroup.get('password').value\r\n        account.fullName = this.addCustomerFormGroup.get('fullName').value\r\n        account.phoneNumber = this.addCustomerFormGroup.get('phoneNumber').value\r\n        account.active = this.addCustomerFormGroup.get('active').value\r\n        account.image = this.addCustomerFormGroup.get('image').value\r\n        console.log(account);\r\n\r\n        this.accountService.insert(account).subscribe(\r\n            data => {\r\n                if (data) {\r\n                    this.utilsService.updateToastState(new ToastState('Add Account Successfully!', \"success\"))\r\n                    this.accountService.notifyAccountChange()\r\n                    this.resetForm()\r\n                    this.windowRef.close();\r\n                } else {\r\n                    this.utilsService.updateToastState(new ToastState('Add Account Failed!', \"danger\"))\r\n                }\r\n            },\r\n            error => console.log(error)\r\n        )\r\n    }\r\n\r\n    resetForm() {\r\n        this.addCustomerFormGroup.reset();\r\n        this.addCustomerFormGroup.get('active').setValue(true)\r\n    }\r\n\r\n    selectFile(event: any) {\r\n        if (event.target.files) {\r\n            const reader = new FileReader();\r\n            reader.onload = (event: any) => {\r\n                this.addCustomerFormGroup.get('image').setValue(event.target.result)\r\n            };\r\n            reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n    }\r\n\r\n}","<button nbButton fullWidth status=\"primary\" (click)=\"onAdd()\">\r\n    <nb-icon icon=\"plus-square-outline\"></nb-icon>\r\n</button>\r\n\r\n<ng-template #createCustomer let-data>\r\n    <nb-card [formGroup]=\"addCustomerFormGroup\">\r\n        <nb-card-body>\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-6 col-md-12\">\r\n                    <input type=\"text\" nbInput fullWidth placeholder=\"Username\" formControlName=\"username\">\r\n                    <div class=\"alert w-100 alert-danger mt-1\"\r\n                        *ngIf=\"addCustomerFormGroup.get('username').invalid && (addCustomerFormGroup.get('username').dirty || addCustomerFormGroup.get('username').touched)\">\r\n                        <div *ngIf=\"addCustomerFormGroup.get('username').errors['notblank']\">\r\n                            Username is required\r\n                        </div>\r\n                        <div *ngIf=\"addCustomerFormGroup.get('username').errors['pattern']\">\r\n                            Invalid username format\r\n                        </div>\r\n                        <div *ngIf=\"addCustomerFormGroup.get('username').errors['minlength']\">\r\n                            Username must have at least 3 characters\r\n                        </div>\r\n                        <div *ngIf=\"addCustomerFormGroup.get('username').errors['maxlength']\">\r\n                            Username must not exceed 20 characters\r\n                        </div>\r\n                        <div *ngIf=\"addCustomerFormGroup.get('username').errors['usernameExists']\">\r\n                            This username already exists\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-lg-6 col-md-12\">\r\n                    <input type=\"email\" nbInput fullWidth placeholder=\"Email\" formControlName=\"email\">\r\n                    <div class=\"alert w-100 alert-danger mt-1\"\r\n                        *ngIf=\"addCustomerFormGroup.get('email').invalid && (addCustomerFormGroup.get('email').dirty || addCustomerFormGroup.get('email').touched)\">\r\n                        <div *ngIf=\"addCustomerFormGroup.get('email').errors['notblank']\">\r\n                            Email is required\r\n                        </div>\r\n                        <div *ngIf=\"addCustomerFormGroup.get('email').errors['pattern']\">\r\n                            Invalid email format\r\n                        </div>\r\n                        <div *ngIf=\"addCustomerFormGroup.get('email').errors['maxlength']\">\r\n                            Email must not exceed 50 characters\r\n                        </div>\r\n                        <div *ngIf=\"addCustomerFormGroup.get('email').errors['emailExists']\">\r\n                            This email already exists\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-lg-6 col-md-12 mt-3\">\r\n                    <input type=\"password\" nbInput fullWidth placeholder=\"Password\" formControlName=\"password\">\r\n                    <div class=\"alert w-100 alert-danger mt-1\"\r\n                        *ngIf=\"addCustomerFormGroup.get('password').invalid && (addCustomerFormGroup.get('password').dirty || addCustomerFormGroup.get('password').touched)\">\r\n                        <div *ngIf=\"addCustomerFormGroup.get('password').errors['notblank']\">\r\n                            Password is required\r\n                        </div>\r\n                        <div *ngIf=\"addCustomerFormGroup.get('password').errors['minlength']\">\r\n                            Password must have at least 8 character\r\n                        </div>\r\n                        <div *ngIf=\"addCustomerFormGroup.get('password').errors['maxlength']\">\r\n                            Password must not exceed 50 characters\r\n                        </div>\r\n                        <div *ngIf=\"addCustomerFormGroup.get('password').errors['pattern']\">\r\n                            Password must have at least 1 character and 1 number\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"col-lg-6 col-md-12 mt-3\">\r\n                    <input type=\"text\" nbInput fullWidth placeholder=\"Full Name\" formControlName=\"fullName\">\r\n                    <div class=\"alert w-100 alert-danger mt-1\"\r\n                        *ngIf=\"addCustomerFormGroup.get('fullName').invalid && (addCustomerFormGroup.get('fullName').dirty || addCustomerFormGroup.get('fullName').touched)\">\r\n                        <div *ngIf=\"addCustomerFormGroup.get('fullName').errors['notblank']\">\r\n                            Full Name is required\r\n                        </div>\r\n                        <div *ngIf=\"addCustomerFormGroup.get('fullName').errors['maxlength']\">\r\n                            Full Name must not exceed 100 characters\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-lg-6 col-md-12  mt-3\">\r\n                    <input type=\"text\" nbInput fullWidth placeholder=\"Phone Number\" formControlName=\"phoneNumber\">\r\n                    <div class=\"alert w-100 alert-danger mt-1\"\r\n                        *ngIf=\"addCustomerFormGroup.get('phoneNumber').invalid && (addCustomerFormGroup.get('phoneNumber').dirty || addCustomerFormGroup.get('phoneNumber').touched)\">\r\n                        <div *ngIf=\"addCustomerFormGroup.get('phoneNumber').errors['pattern']\">\r\n                            Phone number must be exactly 10 digits in length and can only contain numerical digits\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-lg-6 col-md-12 mt-3\">\r\n                    <nb-checkbox (checkedChange)=\"addCustomerFormGroup.get('active').setValue($event)\"\r\n                        [checked]=\"addCustomerFormGroup.get('active').value\" status=\"warning\">\r\n                        Active\r\n                    </nb-checkbox>\r\n                </div>\r\n\r\n                <div class=\"col-lg-6 col-md-12 mt-3\">\r\n                    <div class=\"input-group\">\r\n                        <div class=\"input-group-prepend\">\r\n                            <span class=\"input-group-text\">Upload</span>\r\n                        </div>\r\n                        <div class=\"custom-file\">\r\n                            <input type=\"file\" mutliple class=\"custom-file-input\" accept=\"image/png, image/jpeg\"\r\n                                (change)=\"selectFile($event)\">\r\n                            <label class=\"custom-file-label\">Choose images</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-lg-6 col-md-12 mt-3\">\r\n                    <div class=\"row d-flex justify-content-center align-item-center\">\r\n                        <div class=\"col-12 d-flex justify-content-center align-item-center border border-primary\"\r\n                            style=\"height: 275px\">\r\n                            <ng-container *ngIf=\"addCustomerFormGroup.get('image').value !== null\">\r\n                                <img [src]=\"addCustomerFormGroup.get('image').value\" class=\"d-block w-100\"\r\n                                    alt=\"Slide Image\" style=\"max-height: 300px; object-fit: contain;\">\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- <ng-container *ngIf=\"addCustomerFormGroup.get('image').value !== null\">\r\n                    <div class=\"col-12\">\r\n                        <img [src]=\"addCustomerFormGroup.get('image').value\" class=\"d-block w-100 mx-auto\"\r\n                            alt=\"Slide Image\">\r\n                    </div>\r\n                </ng-container> -->\r\n            </div>\r\n\r\n        </nb-card-body>\r\n        <nb-card-footer>\r\n            <button nbButton status=\"success\" class=\"mt-3\" (click)=\"addCustomer()\">\r\n                CREATE\r\n            </button>\r\n        </nb-card-footer>\r\n    </nb-card>\r\n</ng-template>","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { ViewCell } from \"ng2-smart-table\";\r\n\r\n@Component({\r\n    template: `\r\n        <img [src]=\"renderValue\" class='d-block mx-auto' alt=\"Customer Image\" style=\"height: 75px; width: auto\"/>\r\n    `,\r\n})\r\n\r\nexport class CustomCustomerImageComponent implements ViewCell, OnInit {\r\n    renderValue: string;\r\n\r\n    @Input() value: string | number;\r\n    @Input() rowData: any;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.renderValue = this.value.toString()\r\n    }\r\n}","import { Component, OnInit, Input, ViewChild, TemplateRef, Output, EventEmitter } from \"@angular/core\";\r\nimport { ProductSale } from \"../../../../@core/models/sale/product-sale.model\";\r\nimport { ToastState, UtilsService } from \"../../../../@core/services/utils.service\";\r\nimport { NbWindowRef, NbWindowService } from \"@nebular/theme\";\r\nimport { ProductSaleService } from \"../../../../@core/services/product/product-sale.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Account } from \"../../../../@core/models/account/account.model\";\r\nimport { AccountService } from \"../../../../@core/services/account/account.service\";\r\n\r\n@Component({\r\n  selector: \"ngx-customers-list-multi\",\r\n  templateUrl: \"./customer-list-multi.component.html\",\r\n  styleUrls: [\"./customer-list-multi.component.scss\"],\r\n})\r\nexport class CustomerListMultiComponent implements OnInit {\r\n\r\n  @Input() selectedCustomers: Account[]\r\n  @Output() isUpdated = new EventEmitter<boolean>();\r\n\r\n  @ViewChild('onUpdateStatusTemplate') updateStatusWindow: TemplateRef<any>;\r\n  updateStatusWindowRef: NbWindowRef;\r\n  statusFormGroup: FormGroup\r\n\r\n  constructor(    \r\n    private accountService: AccountService,\r\n    private windowService: NbWindowService,\r\n    private formBuilder: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.statusFormGroup = this.formBuilder.group({\r\n      active: [false]\r\n    })\r\n  }\r\n\r\n  openEditWindow() {\r\n    this.updateStatusWindowRef = this.windowService\r\n      .open(this.updateStatusWindow, { title: `Update Customers's Active Status` });\r\n  }\r\n\r\n  onUpdateStatus() {\r\n    if (this.statusFormGroup.invalid) {\r\n      this.statusFormGroup.markAllAsTouched();\r\n      return;\r\n    }\r\n    \r\n    this.accountService.updateStatus(this.selectedCustomers, this.statusFormGroup.get('active').value).subscribe(\r\n      () => {\r\n        this.selectedCustomers = []\r\n        this.updateStatusWindowRef.close()\r\n        this.isUpdated.emit(true);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.isUpdated.emit(false);\r\n      }\r\n    )\r\n  }\r\n\r\n}","<button nbButton status=\"warning\" (click)=\"openEditWindow()\" class=\"ml-3\">\r\n    <nb-icon icon=\"edit-2-outline\"></nb-icon>\r\n</button>\r\n\r\n<ng-template #onUpdateStatusTemplate let-data>\r\n    <nb-card>\r\n        <nb-card-header [formGroup]=\"statusFormGroup\">\r\n            <nb-select fullWidth placeholder=\"Status\" formControlName=\"active\">\r\n                <nb-select-label>\r\n                    Status: {{ statusFormGroup.get('active').value ? 'Active' : 'Inactive'}}\r\n                </nb-select-label>\r\n                <nb-option [value]=\"true\">Active</nb-option>\r\n                <nb-option [value]=\"false\">Inactive</nb-option>\r\n            </nb-select>\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <button nbButton status=\"success\" class=\"mt-3\" (click)=\"onUpdateStatus()\">\r\n                CONFIRM\r\n            </button>\r\n        </nb-card-body>\r\n    </nb-card>\r\n</ng-template>","import { takeUntil } from 'rxjs/operators';\r\nimport { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { CustomCustomerActionComponent } from './custom/custom-customer-action/custom-customer-action.component';\r\nimport { CustomCustomerImageComponent } from './custom/custom-customer-image.component';\r\nimport { AccountService } from '../../../@core/services/account/account.service';\r\nimport { ToastState, UtilsService } from '../../../@core/services/utils.service';\r\nimport { CustomCustomerFilterActionsComponent } from './custom/custom-customer-filter-actions/custom-customer-filter-actions.component';\r\nimport { Subject } from 'rxjs';\r\nimport { ACCOUNT_IMAGE_DIRECTORY } from '../../../@core/utils/image-storing-directory';\r\nimport { CustomCustomerActiveActionComponent } from './custom/custom-customer-active-action.component';\r\nimport { Account } from '../../../@core/models/account/account.model';\r\n\r\n@Component({\r\n  selector: \"ngx-customer-list\",\r\n  templateUrl: \"./customer-list.component.html\",\r\n  styleUrls: [\"./customer-list.component.scss\"],\r\n})\r\nexport class CustomerListComponent implements OnInit, AfterViewInit {\r\n  numberOfItem: number = localStorage.getItem('itemPerPage') != null ? +localStorage.getItem('itemPerPage') : 10; // default\r\n  source: LocalDataSource = new LocalDataSource();\r\n  private unsubscribe = new Subject<void>();\r\n\r\n  selectedCustomers: Account[] = []\r\n  loadedCustomers: boolean = false\r\n\r\n  settings = {\r\n    selectMode: 'multi',\r\n    actions: {\r\n      position: 'right',\r\n      edit: false,\r\n      delete: false,\r\n      add: false,\r\n      columnTitle: ''\r\n    },\r\n    columns: {\r\n      imageUrl: {\r\n        title: \"Avatar\",\r\n        type: \"custom\",\r\n        renderComponent: CustomCustomerImageComponent,\r\n        sort: false,\r\n        filter: false\r\n      },\r\n      id: {\r\n        title: 'ID',\r\n        type: 'number',\r\n        width: '3%'\r\n      },\r\n      username: {\r\n        title: 'Username',\r\n        type: 'string',\r\n      },\r\n      email: {\r\n        title: 'Email',\r\n        type: 'string',\r\n      },\r\n      fullName: {\r\n        title: 'Full Name',\r\n        type: 'string'\r\n      },\r\n      phoneNumber: {\r\n        title: 'Phone Number',\r\n        type: 'string',\r\n      },\r\n      totalOrder: {\r\n        title: 'Total Orders',\r\n        type: 'number',\r\n        width: '10%'\r\n      },\r\n      createdAt: {\r\n        title: 'Registration Date',\r\n        type: 'string'\r\n      },\r\n      active: {\r\n        title: 'Status',\r\n        sort: false,\r\n        width: \"10%\",\r\n        filter: {\r\n          type: 'list',\r\n          config: {\r\n            selectText: 'Status...',\r\n            list: [\r\n              { value: 'true', title: 'Active' },\r\n              { value: 'false', title: 'Inactive' },\r\n            ]\r\n          },\r\n        },\r\n        type: 'custom',\r\n        renderComponent: CustomCustomerActiveActionComponent\r\n      },\r\n      actions: {\r\n        title: 'Actions',\r\n        type: 'custom',\r\n        sort: false,\r\n        filter: {\r\n          type: 'custom',\r\n          component: CustomCustomerFilterActionsComponent,\r\n        },\r\n        renderComponent: CustomCustomerActionComponent\r\n      }\r\n    },\r\n    pager: {\r\n      display: true,\r\n      perPage: this.numberOfItem\r\n    },\r\n  }\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private utilsService: UtilsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.accountService.accountChange$\r\n      .pipe(takeUntil(this.unsubscribe))\r\n      .subscribe(() => {\r\n        this.loadCustomers();\r\n      });\r\n    this.loadCustomers();\r\n  }\r\n\r\n  loadCustomers() {\r\n    this.accountService.findAll().subscribe(\r\n      data => {\r\n        const mappedAccounts: any[] = data.map(account => {\r\n          return {\r\n            id: account.id,\r\n            username: account.username,\r\n            imageUrl: account.image !== null ? ACCOUNT_IMAGE_DIRECTORY + account.image.imageUrl : 'assets/images/no-image.jpg',\r\n            fullName: account.fullName,\r\n            email: account.email,\r\n            phoneNumber: account.phoneNumber,\r\n            active: account.active,\r\n            createdAt: new DatePipe('en-US').transform(account.createdAt, 'dd-MM-yyyy'),\r\n            totalOrder: account.totalOrders != undefined ? account.totalOrders : 0\r\n          }\r\n        })\r\n        this.source.load(mappedAccounts)\r\n        this.loadedCustomers = true\r\n      }\r\n    )\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const pager = document.querySelector('ng2-smart-table-pager');\r\n    pager.classList.add('d-block')\r\n  }\r\n\r\n  onRowSelect(event: any): void {\r\n    this.selectedCustomers = (event.selected) as Account[]\r\n  }\r\n\r\n  onUpdateStatus(isUpdated: boolean) {\r\n    if(isUpdated) {\r\n      this.loadCustomers();\r\n      this.selectedCustomers = []\r\n      this.utilsService.updateToastState(new ToastState(\"Updated The Customers's Status Successfully!\", \"success\"))\r\n    } else {\r\n      this.utilsService.updateToastState(new ToastState(\"Updated The Customers's Status Failed!\", \"danger\"))\r\n    }\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadedCustomers; else loadingBlock\">\n    <nb-card>\n        <nb-card-header class=\"d-flex justify-content-between align-items-center\">\n            <h6>\n                Customer List\n            </h6>\n            <ngx-item-of-list (selectNumberOfItem)=\"source.setPaging(1, $event)\"></ngx-item-of-list>\n        </nb-card-header>\n        <nb-card-body>\n            <ng2-smart-table\n                id=\"product-table\"\n                [settings]=\"settings\" \n                [source]=\"source\" \n                [ngClass]=\"'smart-table'\"\n                (userRowSelect)=\"onRowSelect($event)\">\n            </ng2-smart-table>\n        </nb-card-body>\n        <nb-card-footer>\n            <ng-container *ngIf=\"selectedCustomers.length > 0\">\n                <ngx-customers-list-multi [selectedCustomers]=\"selectedCustomers\" (isUpdated)=\"onUpdateStatus($event)\">\n                </ngx-customers-list-multi>\n            </ng-container>\n        </nb-card-footer>\n    </nb-card>\n</ng-container>\n\n<ng-template #loadingBlock>\n    <nb-card [size]=\"'small'\" [nbSpinner]=\"!loadedCustomers\" nbSpinnerSize=\"large\" nbSpinnerStatus=\"primary\">\n    </nb-card>\n</ng-template>","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { CustomerListComponent } from \"./customer-list/customer-list.component\";\r\nimport { CustomersComponent } from \"./customers.component\";\r\nimport { CustomerDetailComponent } from \"./customer-detail/customer-detail.component\";\r\nimport { CustomerContactComponent } from \"./customer-contact/customer-contact.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: \"\",\r\n        component: CustomersComponent,\r\n        children: [\r\n            {\r\n                path: \"list\",\r\n                component: CustomerListComponent,\r\n            },\r\n            {\r\n                path: \"contact\",\r\n                component: CustomerContactComponent,\r\n            },\r\n            {\r\n                path: \"detail/:id\",\r\n                component: CustomerDetailComponent,\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class CustomersRoutingModule { }\r\n\r\nexport const routedComponents = [\r\n    CustomersComponent,\r\n    CustomerListComponent,\r\n    CustomerDetailComponent,\r\n];\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-customer',\n  template: `<router-outlet></router-outlet>`\n})\nexport class CustomersComponent {\n\n}\n","import { CustomerDetailCommentsComponent } from './customer-detail/customer-detail-comments/customer-detail-comments.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CustomersComponent } from './customers.component';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\nimport { CustomerDetailComponent } from './customer-detail/customer-detail.component';\nimport { CustomersRoutingModule } from './customers-routing.module';\nimport { RouterModule } from '@angular/router';\nimport { NbAccordionModule, NbActionsModule, NbButtonModule, NbCardModule, NbCheckboxModule, NbDatepickerModule, NbFormFieldModule, NbIconModule, NbInputModule, NbRadioModule, NbSelectModule, NbSpinnerModule, NbTabsetModule } from '@nebular/theme';\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\nimport { CustomCustomerActionComponent } from './customer-list/custom/custom-customer-action/custom-customer-action.component';\nimport { CustomCustomerImageComponent } from './customer-list/custom/custom-customer-image.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CustomCustomerFilterActionsComponent } from './customer-list/custom/custom-customer-filter-actions/custom-customer-filter-actions.component';\nimport { CustomCustomerActiveActionComponent } from './customer-list/custom/custom-customer-active-action.component';\nimport { CustomerListMultiComponent } from './customer-list/customer-list-multi/customer-list-multi.component';\nimport { CustomerDetailBasicComponent } from './customer-detail/customer-detail-basic/customer-detail-basic.component';\nimport { CustomerDetailOrdersComponent } from './customer-detail/customer-detail-orders/customer-detail-orders.component';\nimport { NgbRatingModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SharedModule } from '../shared/shared.module';\nimport { CustomCustomerContactActionComponent } from './customer-contact/custom-customer-contact-action.component';\nimport { CustomerContactComponent } from './customer-contact/customer-contact.component';\n\n\n\n@NgModule({\n  declarations: [\n    CustomersComponent,\n    CustomerListComponent,\n    CustomerDetailComponent,\n    CustomerContactComponent,\n    CustomCustomerActionComponent,\n    CustomCustomerImageComponent,\n    CustomCustomerFilterActionsComponent,\n    CustomCustomerActiveActionComponent,\n    CustomerListMultiComponent,\n    CustomCustomerContactActionComponent,\n    CustomerDetailBasicComponent,\n    CustomerDetailCommentsComponent,\n    CustomerDetailOrdersComponent\n  ],\n  imports: [\n    CustomersRoutingModule,\n    RouterModule,\n    CommonModule,\n    NbCardModule,\n    Ng2SmartTableModule,\n    NbInputModule,\n    NbButtonModule,\n    NbActionsModule,    \n    NbCheckboxModule,\n    NbRadioModule,\n    NbDatepickerModule,\n    NbSelectModule,\n    NbAccordionModule,\n    NbIconModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NbTabsetModule,\n    NbFormFieldModule,\n    NgbRatingModule,\n    SharedModule,\n    NbSpinnerModule\n  ]\n})\nexport class CustomersModule { }\n","import { ACCOUNT_IMAGE_DIRECTORY } from './../../../@core/utils/image-storing-directory';\nimport { Subscription } from 'rxjs';\nimport { Component, OnInit } from '@angular/core';\nimport { Account } from '../../../@core/models/account/account.model';\nimport { AuthenticationService } from '../../../@core/services/account/authentication.service';\nimport { AccountService } from '../../../@core/services/account/account.service';\nimport { HttpErrorResponse, HttpEvent, HttpEventType } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastState, UtilsService } from '../../../@core/services/utils.service';\nimport { CustomValidator } from '../../../@core/validators/custom-validator';\nimport { error } from 'console';\n\n@Component({\n  selector: 'ngx-change-profile',\n  templateUrl: './change-profile.component.html',\n  styleUrls: ['./change-profile.component.scss']\n})\nexport class ChangeProfileComponent implements OnInit {\n  public account: any;\n  public refreshing: boolean;\n  public fileName: string;\n  public profileImage: File;\n  public fileStatus = new FileUploadStatus();\n  private subscriptions: Subscription[] = [];\n\n  isFormChanged: boolean = false;\n  changeProfileFormGroup: FormGroup\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthenticationService,\n    private accountService: AccountService,\n    private utilsService: UtilsService\n  ) { }\n\n  ngOnInit(): void {\n    this.changeProfileFormGroup = this.formBuilder.group({\n      username: [],\n      email: [],\n      fullName: [, [Validators.maxLength(255), Validators.minLength(3), CustomValidator.notBlank]]\n    })\n    this.changeProfileFormGroup.get('username').disable()\n    this.changeProfileFormGroup.get('email').disable()\n\n    this.account = this.authService.getAccountFromLocalCache()\n    this.account.image = this.account.image != null ? ACCOUNT_IMAGE_DIRECTORY + this.account.image.imageUrl : 'assets/images/no-image.jpg'\n    this.fillFormValue()\n\n    this.changeProfileFormGroup.get('fullName').valueChanges.subscribe((data) => {\n      if(data != this.account.fullName || this.changeProfileFormGroup.get('fullName').valid) {\n        this.isFormChanged = true\n      }\n    })\n  }\n\n  fillFormValue() {\n    this.changeProfileFormGroup.get('username').setValue(this.account.username)\n    this.changeProfileFormGroup.get('email').setValue(this.account.email)\n    this.changeProfileFormGroup.get('fullName').setValue(this.account.fullName)\n  }\n\n  public updateProfileImage(): void {\n    this.clickButton('profile-image-input');\n  }\n\n  private clickButton(buttonId: string): void {\n    document.getElementById(buttonId).click();\n  }\n\n  public onProfileImageChange(fileName: string, profileImage: File): void {\n    this.fileName =  fileName;\n    this.profileImage = profileImage;\n  }\n\n  updateFullname() {\n    if(this.changeProfileFormGroup.invalid) {\n      this.changeProfileFormGroup.markAllAsTouched()\n      return\n    }\n\n    this.subscriptions.push(\n      this.accountService.updateFullname(this.account.username, this.changeProfileFormGroup.get('fullName').value).subscribe(\n        (response) => {\n          if(response) {\n            this.accountService.findById(this.account.id).subscribe(data => {\n              this.account = data\n              this.authService.addAccountToLocalCache(data)\n              this.accountService.notifyAccountChange() \n              this.account.image = this.account.image != null ? ACCOUNT_IMAGE_DIRECTORY + this.account.image.imageUrl : 'assets/images/no-image.jpg'\n              \n              this.utilsService.updateToastState(new ToastState(`Updated account information successfully`, 'success'));\n              this.fileStatus.status = 'done';\n            })\n          }\n        },\n        (error: HttpErrorResponse) => {\n          console.log(error);\n          \n        }\n      )\n    );\n  }\n\n  public onUpdateProfileImage(): void {\n    const formData = new FormData();\n    formData.append('username', this.account.username);\n    formData.append('profileImage', this.profileImage);\n    this.subscriptions.push(\n      this.accountService.updateProfileImage(formData).subscribe(\n        (event: HttpEvent<any>) => {\n          this.reportUploadProgress(event);\n        },\n        (errorResponse: HttpErrorResponse) => {\n          this.utilsService.updateToastState(new ToastState(errorResponse.error.message, 'danger'));\n          this.fileStatus.status = 'done';\n        }\n      )\n    );\n  }\n\n  private reportUploadProgress(event: HttpEvent<any>): void {\n    switch (event.type) {\n      case HttpEventType.UploadProgress:\n        this.fileStatus.percentage = Math.round(100 * event.loaded / event.total);\n        this.fileStatus.status = 'progress';\n        break;\n      case HttpEventType.Response:\n        if (event.status === 200) {\n          this.subscriptions.push(\n            this.accountService.findById(this.account.id).subscribe(data => {\n              this.account = data\n              this.authService.addAccountToLocalCache(data)\n              this.accountService.notifyAccountChange() \n              this.account.image = `${ACCOUNT_IMAGE_DIRECTORY}${this.account.image.imageUrl}`;\n              \n              this.utilsService.updateToastState(new ToastState(`${this.account.fullName}\\'s profile image updated successfully`, 'success'));\n              this.fileStatus.status = 'done';\n            }))\n          break;\n        } else {\n          this.utilsService.updateToastState(new ToastState(`Unable to upload image`, 'danger'));\n          break;\n        }\n      default:\n        `Finished all processes`;\n    }\n  }\n}\n\nexport class FileUploadStatus {\n  public status: string;\n  public  percentage: number;\n\n  constructor() {\n    this.status = '';\n    this.percentage = 0;\n  }\n}\n\n","<div class=\"row\">\n  <div class=\"col-lg-6 col-md-12\">\n    <nb-card>\n      <nb-card-header>\n        Change Profile\n      </nb-card-header>\n      <nb-card-body>\n        <div class=\"container\">\n          <div class=\"row flex-lg-nowrap\">\n            <div class=\"card-body\">\n              <div class=\"e-profile\">\n                <div class=\"row\">\n                  <div class=\"col-12 col-sm-auto\">\n                    <div class=\"mx-auto\" style=\"width: 120px;\">\n                      <div class=\"d-flex justify-content-center align-items-center rounded\">\n                        <img class=\"rounded-circle\" \n                          style=\"height: 135px; width: 135px; object-fit: cover;\" \n                          [src]=\"account.image !== null ? account.image : 'assets/images/no-image.jpg'\" alt=\"\">\n                      </div>\n                      <div *ngIf=\"fileStatus?.status==='progress'\" class=\"progress mt-1\">\n                        <div class=\"progress-bar bg-info\" role=\"progressbar\"\n                          [style.width.%]=\"fileStatus?.percentage\" aria-valuenow=\"0\" aria-valuemin=\"0\"\n                          aria-valuemax=\"100\">\n                          {{fileStatus?.percentage}}%</div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col d-flex flex-column flex-sm-row justify-content-between mb-3\">\n                    <div class=\"text-center text-sm-left mb-2 mb-sm-0\">\n                      <h4 class=\"pt-sm-2 pb-1 mb-0 text-nowrap\">{{account?.fullName}}</h4>\n                      <p class=\"mb-0\">{{account?.username}}</p>\n                      <div class=\"mt-2\">\n                        <button (click)=\"updateProfileImage()\" class=\"btn btn-primary\" type=\"button\">\n                          <i class=\"fa fa-fw fa-camera\"></i>\n                          <span>Change Photo</span>\n                        </button>\n                      </div>\n                    </div>\n                    <div class=\"text-center text-sm-right\">\n                      <div class=\"text-muted\">\n                        <small>Joined {{account?.createdAt | date:'mediumDate'}}</small>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"tab-content pt-3\">\n                  <div class=\"tab-pane active\">\n                    <form [formGroup]=\"changeProfileFormGroup\" (ngSubmit)=\"updateFullname()\" class=\"form\">\n                      <div class=\"row\">\n                        <div class=\"col\">\n                          <div class=\"row\">\n                            <div class=\"col\">\n                              <div class=\"form-group\">\n                                <label>Full Name</label>\n                                <input type=\"text\" formControlName=\"fullName\" required class=\"form-control\">\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col\">\n                              <div class=\"form-group\">\n                                <label>Username</label>\n                                <input type=\"text\" formControlName=\"username\" required class=\"form-control\">\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col\">\n                              <div class=\"form-group\">\n                                <label>Email</label>\n                                <input type=\"text\" formControlName=\"email\" required class=\"form-control\">\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col d-flex justify-content-end\">\n                          <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!isFormChanged\">\n                            <i *ngIf=\"refreshing\" class=\"fas fa-spinner fa-spin\"></i>&nbsp;&nbsp;\n                            <span *ngIf=\"refreshing\">Loading...</span>\n                            <span *ngIf=\"!refreshing\">Save Changes</span>\n                          </button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div>\n\n<form enctype=\"multipart/form-data\" style=\"display:none;\">\n  <input type=\"file\" (change)=\"\n        onProfileImageChange($event.target.files[0].name, $event.target.files[0]);\n        onUpdateProfileImage()\" name=\"profile-image-input\" id=\"profile-image-input\" placeholder=\"file\"\n    accept=\"image/*\" />\n</form>","import { Component, EventEmitter, Input, OnDestroy, Output } from '@angular/core';\r\nimport { NbMediaBreakpoint, NbMediaBreakpointsService, NbThemeService } from '@nebular/theme';\r\nimport { takeWhile } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'ngx-chart-panel-header',\r\n  styleUrls: ['./chart-panel-header.component.scss'],\r\n  templateUrl: './chart-panel-header.component.html',\r\n})\r\nexport class ChartPanelHeaderComponent implements OnDestroy {\r\n\r\n  private alive = true;\r\n\r\n  @Output() periodChange = new EventEmitter<string>();\r\n\r\n  @Input() type: string = 'week';\r\n\r\n  types: string[] = ['week', 'month'];\r\n  chartLegend: {iconColor: string; title: string}[];\r\n  breakpoint: NbMediaBreakpoint = { name: '', width: 0 };\r\n  breakpoints: any;\r\n  currentTheme: string;\r\n\r\n  constructor(private themeService: NbThemeService,\r\n              private breakpointService: NbMediaBreakpointsService) {\r\n    this.themeService.getJsTheme()\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe(theme => {\r\n        const orderProfitLegend = theme.variables.orderProfitLegend;\r\n\r\n        this.currentTheme = theme.name;\r\n        this.setLegendItems(orderProfitLegend);\r\n      });\r\n\r\n      this.breakpoints = this.breakpointService.getBreakpointsMap();\r\n      this.themeService.onMediaQueryChange()\r\n        .pipe(takeWhile(() => this.alive))\r\n        .subscribe(([oldValue, newValue]) => {\r\n          this.breakpoint = newValue;\r\n        });\r\n  }\r\n\r\n  setLegendItems(orderProfitLegend) {\r\n    this.chartLegend = [\r\n      {\r\n        iconColor: orderProfitLegend.firstItem,\r\n        title: 'Payment',\r\n      },\r\n      {\r\n        iconColor: orderProfitLegend.secondItem,\r\n        title: 'Canceled',\r\n      },\r\n      {\r\n        iconColor: orderProfitLegend.thirdItem,\r\n        title: 'All orders',\r\n      },\r\n    ];\r\n  }\r\n\r\n  changePeriod(period: string): void {\r\n    this.type = period;\r\n    this.periodChange.emit(period);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.alive = false;\r\n  }\r\n}\r\n","<ngx-legend-chart [legendItems]=\"chartLegend\"></ngx-legend-chart>\r\n\r\n<nb-select class=\"period-select\" [selected]=\"type\" (selectedChange)=\"changePeriod($event)\">\r\n  <nb-option *ngFor=\"let period of types\" [value]=\"period\">\r\n    {{ period }}\r\n  </nb-option>\r\n</nb-select>\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-chart-panel-summary',\r\n  styleUrls: ['./chart-panel-summary.component.scss'],\r\n  template: `\r\n    <div class=\"summary-container\">\r\n      <div *ngFor=\"let item of summary\">\r\n        <div>{{ item.title }}</div>\r\n        <div class=\"h6\">{{ item.value }}</div>\r\n      </div>\r\n    </div>\r\n  `,\r\n})\r\nexport class ChartPanelSummaryComponent {\r\n  @Input() summary: {title: string; value: number}[];\r\n}\r\n\r\n","import { Component, OnDestroy, ViewChild } from '@angular/core';\r\nimport { takeWhile } from 'rxjs/operators';\r\n\r\nimport { OrdersChartComponent } from './charts/orders-chart.component';\r\nimport { OrdersChart } from '../../../@core/models/chart/orders-chart';\r\nimport { ProfitChart } from '../../../@core/models/chart/profit-chart';\r\nimport { OrderProfitChart } from '../../../@core/models/chart/orders-profit-chart';\r\nimport { OrdersProfitChartService } from '../../../@core/services/orders-profit-chart/orders-profit-chart.service';\r\n\r\n@Component({\r\n  selector: 'ngx-ecommerce-charts',\r\n  styleUrls: ['./charts-panel.component.scss'],\r\n  templateUrl: './charts-panel.component.html',\r\n})\r\nexport class ECommerceChartsPanelComponent implements OnDestroy {\r\n\r\n  private alive = true;\r\n\r\n  chartPanelSummary: OrderProfitChart[];\r\n  period: string = 'week';\r\n  ordersChartData: OrdersChart;\r\n\r\n  @ViewChild('ordersChart', { static: true }) ordersChart: OrdersChartComponent;\r\n\r\n  constructor(private ordersProfitChartService: OrdersProfitChartService) {\r\n    this.ordersProfitChartService.getOrderProfitChart()\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((summary) => {\r\n        this.chartPanelSummary = summary;\r\n      });\r\n\r\n    this.getOrdersChartData(this.period);\r\n  }\r\n\r\n  setPeriodAndGetChartData(value: string): void {\r\n    if (this.period !== value) {\r\n      this.period = value;\r\n    }\r\n\r\n    this.getOrdersChartData(value);\r\n  }\r\n\r\n  getOrdersChartData(period: string) {\r\n    this.ordersProfitChartService.getOrdersChartData(period)\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe(ordersChartData => {\r\n        this.ordersChartData = ordersChartData;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.alive = false;\r\n  }\r\n}\r\n","<nb-card size=\"large\">\r\n  <nb-tabset fullWidth>\r\n    <nb-tab tabTitle=\"Orders\">\r\n      <div class=\"chart-container\">\r\n        <ngx-chart-panel-summary [summary]=\"chartPanelSummary\"></ngx-chart-panel-summary>\r\n        <ngx-chart-panel-header [type]=\"period\"\r\n                                (periodChange)=\"setPeriodAndGetChartData($event)\">\r\n        </ngx-chart-panel-header>\r\n        <ngx-orders-chart #ordersChart [ordersChartData]=\"ordersChartData\"></ngx-orders-chart>\r\n      </div>\r\n    </nb-tab>\r\n  </nb-tabset>\r\n</nb-card>\r\n","import { AfterViewInit, Component, Input, OnChanges, OnDestroy } from '@angular/core';\r\nimport { NbThemeService } from '@nebular/theme';\r\nimport { delay, takeWhile } from 'rxjs/operators';\r\n\r\nimport { OrdersChart } from '../../../../@core/models/chart/orders-chart';\r\nimport { LayoutService } from '../../../../@core/utils/layout.service';\r\n\r\n@Component({\r\n  selector: 'ngx-orders-chart',\r\n  styleUrls: ['./charts-common.component.scss'],\r\n  template: `\r\n    <div echarts\r\n         [options]=\"option\"\r\n         [merge]=\"option\"\r\n         class=\"echart\"\r\n         (chartInit)=\"onChartInit($event)\">\r\n    </div>\r\n  `,\r\n})\r\nexport class OrdersChartComponent implements AfterViewInit, OnDestroy, OnChanges {\r\n\r\n  @Input()\r\n  ordersChartData: OrdersChart;\r\n\r\n  private alive = true;\r\n\r\n  echartsIntance: any;\r\n  option: any;\r\n\r\n  ngOnChanges(): void {\r\n    if (this.option) {\r\n      this.updateOrdersChartOptions(this.ordersChartData);\r\n    }\r\n  }\r\n\r\n  constructor(private theme: NbThemeService,\r\n              private layoutService: LayoutService) {\r\n    this.layoutService.onSafeChangeLayoutSize()\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n      )\r\n      .subscribe(() => this.resizeChart());\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.theme.getJsTheme()\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        delay(1),\r\n      )\r\n      .subscribe(config => {\r\n        const eTheme: any = config.variables.orders;\r\n\r\n        this.setOptions(eTheme);\r\n        this.updateOrdersChartOptions(this.ordersChartData);\r\n      });\r\n  }\r\n\r\n  setOptions(eTheme) {\r\n    this.option = {\r\n      grid: {\r\n        left: 40,\r\n        top: 20,\r\n        right: 0,\r\n        bottom: 40,\r\n      },\r\n      tooltip: {\r\n        trigger: 'item',\r\n        axisPointer: {\r\n          type: 'line',\r\n          lineStyle: {\r\n            color: eTheme.tooltipLineColor,\r\n            width: eTheme.tooltipLineWidth,\r\n          },\r\n        },\r\n        textStyle: {\r\n          color: eTheme.tooltipTextColor,\r\n          fontSize: eTheme.tooltipFontSize,\r\n          fontWeight: eTheme.tooltipFontWeight,\r\n        },\r\n        position: 'top',\r\n        backgroundColor: eTheme.tooltipBg,\r\n        borderColor: eTheme.tooltipBorderColor,\r\n        borderWidth: 1,\r\n        formatter: (params) => {\r\n          return Math.round(parseInt(params.value, 10));\r\n        },\r\n        extraCssText: eTheme.tooltipExtraCss,\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        boundaryGap: false,\r\n        offset: 5,\r\n        data: [],\r\n        axisTick: {\r\n          show: false,\r\n        },\r\n        axisLabel: {\r\n          color: eTheme.axisTextColor,\r\n          fontSize: eTheme.axisFontSize,\r\n        },\r\n        axisLine: {\r\n          lineStyle: {\r\n            color: eTheme.axisLineColor,\r\n            width: '2',\r\n          },\r\n        },\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        boundaryGap: false,\r\n        axisLine: {\r\n          lineStyle: {\r\n            color: eTheme.axisLineColor,\r\n            width: '1',\r\n          },\r\n        },\r\n        axisLabel: {\r\n          color: eTheme.axisTextColor,\r\n          fontSize: eTheme.axisFontSize,\r\n        },\r\n        axisTick: {\r\n          show: false,\r\n        },\r\n        splitLine: {\r\n\r\n          lineStyle: {\r\n            color: eTheme.yAxisSplitLine,\r\n            width: '1',\r\n          },\r\n        },\r\n      },\r\n      series: [\r\n        this.getFirstLine(eTheme),\r\n        this.getSecondLine(eTheme),\r\n        this.getThirdLine(eTheme),\r\n      ],\r\n    };\r\n  }\r\n\r\n  getFirstLine(eTheme) {\r\n    return {\r\n      type: 'line',\r\n      smooth: true,\r\n      symbolSize: 20,\r\n      itemStyle: {\r\n        normal: {\r\n          opacity: 0,\r\n        },\r\n        emphasis: {\r\n          opacity: 0,\r\n        },\r\n      },\r\n      lineStyle: {\r\n        normal: {\r\n          width: 0,\r\n        },\r\n      },\r\n      areaStyle: {\r\n        normal: {\r\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n            offset: 0,\r\n            color: eTheme.firstAreaGradFrom,\r\n          }, {\r\n            offset: 1,\r\n            color: eTheme.firstAreaGradTo,\r\n          }]),\r\n          opacity: 1,\r\n        },\r\n      },\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  getSecondLine(eTheme) {\r\n    return         {\r\n      type: 'line',\r\n      smooth: true,\r\n      symbolSize: 20,\r\n      itemStyle: {\r\n        normal: {\r\n          opacity: 0,\r\n        },\r\n        emphasis: {\r\n          color: '#ffffff',\r\n          borderColor: eTheme.itemBorderColor,\r\n          borderWidth: 2,\r\n          opacity: 1,\r\n        },\r\n      },\r\n      lineStyle: {\r\n        normal: {\r\n          width: eTheme.lineWidth,\r\n          type: eTheme.lineStyle,\r\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n            offset: 0,\r\n            color: eTheme.secondLineGradFrom,\r\n          }, {\r\n            offset: 1,\r\n            color: eTheme.secondLineGradTo,\r\n          }]),\r\n        },\r\n      },\r\n      areaStyle: {\r\n        normal: {\r\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n            offset: 0,\r\n            color: eTheme.secondAreaGradFrom,\r\n          }, {\r\n            offset: 1,\r\n            color: eTheme.secondAreaGradTo,\r\n          }]),\r\n        },\r\n      },\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  getThirdLine(eTheme) {\r\n    return {\r\n      type: 'line',\r\n      smooth: true,\r\n      symbolSize: 20,\r\n      itemStyle: {\r\n        normal: {\r\n          opacity: 0,\r\n        },\r\n        emphasis: {\r\n          color: '#ffffff',\r\n          borderColor: eTheme.itemBorderColor,\r\n          borderWidth: 2,\r\n          opacity: 1,\r\n        },\r\n      },\r\n      lineStyle: {\r\n        normal: {\r\n          width: eTheme.lineWidth,\r\n          type: eTheme.lineStyle,\r\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n            offset: 0,\r\n            color: eTheme.thirdLineGradFrom,\r\n          }, {\r\n            offset: 1,\r\n            color: eTheme.thirdLineGradTo,\r\n          }]),\r\n        },\r\n      },\r\n      areaStyle: {\r\n        normal: {\r\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n            offset: 0,\r\n            color: eTheme.thirdAreaGradFrom,\r\n          }, {\r\n            offset: 1,\r\n            color: eTheme.thirdAreaGradTo,\r\n          }]),\r\n        },\r\n      },\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  updateOrdersChartOptions(ordersChartData: OrdersChart) {\r\n    const options = this.option;\r\n    const series = this.getNewSeries(options.series, ordersChartData.linesData);\r\n    const xAxis = this.getNewXAxis(options.xAxis, ordersChartData.chartLabel);\r\n\r\n    this.option = {\r\n      ...options,\r\n      xAxis,\r\n      series,\r\n    };\r\n  }\r\n\r\n  getNewSeries(series, linesData: number[][]) {\r\n    return series.map((line, index) => {\r\n      return {\r\n        ...line,\r\n        data: linesData[index],\r\n      };\r\n    });\r\n  }\r\n\r\n  getNewXAxis(xAxis, chartLabel: string[]) {\r\n    return {\r\n      ...xAxis,\r\n      data: chartLabel,\r\n    };\r\n  }\r\n\r\n  onChartInit(echarts) {\r\n    this.echartsIntance = echarts;\r\n  }\r\n\r\n  resizeChart() {\r\n    if (this.echartsIntance) {\r\n      // Fix recalculation chart size\r\n      // TODO: investigate more deeply\r\n      setTimeout(() => {\r\n        this.echartsIntance.resize();\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.alive = false;\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { NgxLegendItemColor } from './enum.legend-item-color';\r\n\r\n@Component({\r\n  selector: 'ngx-legend-chart',\r\n  styleUrls: ['./legend-chart.component.scss'],\r\n  templateUrl: './legend-chart.component.html',\r\n})\r\nexport class ECommerceLegendChartComponent {\r\n\r\n  /**\r\n   * Take an array of legend items\r\n   * Available iconColor: 'green', 'purple', 'light-purple', 'blue', 'yellow'\r\n   * @type {{iconColor: string; title: string}[]}\r\n   */\r\n  @Input()\r\n  legendItems: { iconColor: NgxLegendItemColor; title: string }[] = [];\r\n}\r\n","<div *ngFor=\"let legend of legendItems\" class=\"legend\">\r\n  <div class=\"legend-item-color\"\r\n       [style.background]=\"legend.iconColor\"></div>\r\n  <div class=\"legend-title\">{{ legend.title }}</div>\r\n</div>\r\n","import { OnInit } from '@angular/core';\r\nimport { Component, OnDestroy } from '@angular/core';\r\nimport { NbThemeService } from '@nebular/theme';\r\nimport { takeWhile } from 'rxjs/operators';\r\nimport { AccountService } from '../../@core/services/account/account.service';\r\nimport { ProductService } from '../../@core/services/product/product.service';\r\nimport { OrderService } from '../../@core/services/order/order.service';\r\nimport { forkJoin } from 'rxjs';\r\n\r\n\r\ninterface CardSettings {\r\n  title: string;\r\n  iconClass: string;\r\n  type: string;\r\n  value: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-dashboad',\r\n  templateUrl: './dashboard.component.html',\r\n})\r\nexport class DashboardComponent implements OnInit, OnDestroy{\r\n  private alive = true;\r\n\r\n  accountCard: CardSettings = {\r\n    title: 'Registered Users',\r\n    iconClass: 'person-add-outline',\r\n    type: 'primary',\r\n    value: 0\r\n  };\r\n  productCard: CardSettings = {\r\n    title: 'Total Products',\r\n    iconClass: 'archive-outline',\r\n    type: 'success',\r\n    value: 0\r\n  };\r\n  orderCard: CardSettings = {\r\n    title: 'Completed Orders',\r\n    iconClass: 'file-text-outline',\r\n    type: 'info',\r\n    value: 0\r\n  };\r\n  soldCard: CardSettings = {\r\n    title: 'Total Sold',\r\n    iconClass: 'car',\r\n    type: 'warning',\r\n    value: 0\r\n  };\r\n\r\n  statusCards: string;\r\n\r\n  commonStatusCardsSet: CardSettings[] = [\r\n    this.accountCard,\r\n    this.productCard,\r\n    this.orderCard,\r\n    this.soldCard,\r\n  ];\r\n\r\n  statusCardsByThemes: {\r\n    default: CardSettings[];\r\n    cosmic: CardSettings[];\r\n    corporate: CardSettings[];\r\n    dark: CardSettings[];\r\n  } = {\r\n    default: this.commonStatusCardsSet,\r\n    cosmic: this.commonStatusCardsSet,\r\n    corporate: [\r\n      {\r\n        ...this.accountCard,\r\n        type: 'warning',\r\n      },\r\n      {\r\n        ...this.productCard,\r\n        type: 'primary',\r\n      },\r\n      {\r\n        ...this.orderCard,\r\n        type: 'danger',\r\n      },\r\n      {\r\n        ...this.soldCard,\r\n        type: 'info',\r\n      },\r\n    ],\r\n    dark: this.commonStatusCardsSet,\r\n  };\r\n\r\n  constructor(\r\n    private themeService: NbThemeService,\r\n    private accountService: AccountService,\r\n    private productService: ProductService,\r\n    private orderService: OrderService\r\n    ) {\r\n    this.themeService.getJsTheme()\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe(theme => {\r\n        this.statusCards = this.statusCardsByThemes[theme.name];\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    const account$ = this.accountService.count()\r\n    const product$ = this.productService.count()\r\n    const order$ = this.orderService.count()\r\n    const sold$ = this.orderService.countSold()\r\n\r\n    forkJoin([account$, product$, order$, sold$]).subscribe(([accountData, productData, orderData, soldData]) => {\r\n      this.accountCard.value = accountData\r\n      this.productCard.value = productData\r\n      this.orderCard.value = orderData\r\n      this.soldCard.value = soldData\r\n    })\r\n  }\r\n  ngOnDestroy() {\r\n    this.alive = false;\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-xxxl-3 col-md-6\" *ngFor=\"let statusCard of statusCards\">\r\n    <ngx-status-card [title]=\"statusCard.title\" [type]=\"statusCard.type\" [value]=\"statusCard.value\">\r\n      <nb-icon [icon]=\"statusCard.iconClass\" style=\"font-size:3rem\"></nb-icon>\r\n    </ngx-status-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col\">\r\n    <ngx-ecommerce-charts></ngx-ecommerce-charts>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport {\r\n  NbButtonModule,\r\n  NbCardModule,\r\n  NbProgressBarModule,\r\n  NbTabsetModule,\r\n  NbUserModule,\r\n  NbIconModule,\r\n  NbSelectModule,\r\n  NbListModule,\r\n} from '@nebular/theme';\r\nimport { NgxEchartsModule } from 'ngx-echarts';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\n\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { ECommerceChartsPanelComponent } from './charts-panel/charts-panel.component';\r\nimport { OrdersChartComponent } from './charts-panel/charts/orders-chart.component';\r\nimport { ChartPanelHeaderComponent } from './charts-panel/chart-panel-header/chart-panel-header.component';\r\nimport { ChartPanelSummaryComponent } from './charts-panel/chart-panel-summary/chart-panel-summary.component';\r\nimport { ChartModule } from 'angular2-chartjs';\r\n\r\nimport { ECommerceLegendChartComponent } from './charts-panel/legend-chart/legend-chart.component';\r\nimport { SlideOutComponent } from './slide-out/slide-out.component';\r\n\r\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\r\nimport { StatusCardComponent } from './status-card/status-card.component';\r\nimport { ChangeProfileComponent } from './change-profile/change-profile.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    ThemeModule,\r\n    NbCardModule,\r\n    NbUserModule,\r\n    NbButtonModule,\r\n    NbIconModule,\r\n    NbTabsetModule,\r\n    NbSelectModule,\r\n    NbListModule,\r\n    ChartModule,\r\n    NbProgressBarModule,\r\n    NgxEchartsModule,\r\n    NgxChartsModule,\r\n    LeafletModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [\r\n    DashboardComponent,\r\n    // chart\r\n    ChartPanelHeaderComponent,\r\n    ChartPanelSummaryComponent,\r\n    OrdersChartComponent,\r\n    ECommerceLegendChartComponent,\r\n    ECommerceChartsPanelComponent,\r\n    SlideOutComponent,\r\n    StatusCardComponent,\r\n    ChangeProfileComponent,\r\n  ],\r\n  providers: [\r\n  ],\r\n})\r\nexport class DashboardModule { }\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-slide-out',\r\n  styleUrls: ['./slide-out.component.scss'],\r\n  templateUrl: './slide-out.component.html',\r\n})\r\nexport class SlideOutComponent {\r\n\r\n  @Input() showVisitorsStatistics: boolean = false;\r\n\r\n  toggleStatistics() {\r\n    this.showVisitorsStatistics = !this.showVisitorsStatistics;\r\n  }\r\n}\r\n","<nb-icon [icon]=\"showVisitorsStatistics ? 'arrow-forward-outline' : 'arrow-back-outline'\"\r\n         pack=\"eva\"\r\n         class=\"show-hide-toggle\"\r\n         (click)=\"toggleStatistics()\">\r\n</nb-icon>\r\n<div class=\"slide-out-container\"\r\n     [class.expanded]=\"showVisitorsStatistics\"\r\n     [class.collapsed]=\"!showVisitorsStatistics\">\r\n  <div class=\"content-wrapper\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'ngx-status-card',\n  template: `\n  <nb-card (click)=\"on = !on\" [ngClass]=\"{'off': !on}\">\n    <div class=\"icon-container\">\n      <div class=\"icon status-{{ type }}\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n\n    <div class=\"details\">\n      <div class=\"title h5\">{{ title }}</div>\n      <div class=\"status paragraph-2\">{{ value }}</div>\n    </div>\n  </nb-card>\n`,  styleUrls: ['./status-card.component.scss']\n})\nexport class StatusCardComponent {\n\n  @Input() title: string;\n  @Input() value: number;\n  @Input() type: string;\n  @Input() on = true;\n  \n  constructor() { }\n}\n","import { ToastState, UtilsService } from './../../../@core/services/utils.service';\r\nimport { ProductService } from './../../../@core/services/product/product.service';\r\nimport { PaymentMethodService } from './../../../@core/services/order/payment-method.service';\r\nimport { AfterViewInit, Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { NbAccordionItemComponent } from '@nebular/theme';\r\nimport { CompleterCmp, CompleterData, CompleterService } from 'ng2-completer';\r\nimport { Observable, of, } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { OrderService } from '../../../@core/services/order/order.service';\r\nimport { OrderStatusService } from '../../../@core/services/order/order-status.service';\r\nimport { PaymentMethod } from '../../../@core/models/order/payment-method.model';\r\nimport { OrderStatus } from '../../../@core/models/order/order-status.model';\r\nimport { Account } from '../../../@core/models/account/account.model';\r\nimport { AccountService } from '../../../@core/services/account/account.service';\r\nimport { Ward } from '../../../@core/models/address/wards.model';\r\nimport { Province } from '../../../@core/models/address/provinces.model';\r\nimport { District } from '../../../@core/models/address/districts.model';\r\nimport { Address } from '../../../@core/models/address/address.model';\r\nimport { Product } from '../../../@core/models/product/product.model';\r\nimport { CustomValidator, isCouponCantBeUsed, isCouponNotExisting, isEmailNotExisting, isProductNotExisting } from '../../../@core/validators/custom-validator';\r\nimport { Order } from '../../../@core/models/order/order.model';\r\nimport { AddressService } from '../../../@core/services/account/address.service';\r\nimport { ProductCouponService } from '../../../@core/services/product/product-coupon.service';\r\nimport { Router } from '@angular/router';\r\nimport { isEqual } from 'lodash';\r\nimport { Coupon } from '../../../@core/models/coupon/coupon.model';\r\nimport { ProductVariant } from '../../../@core/models/product/product-variant.model';\r\n\r\n@Component({\r\n  selector: 'ngx-order-add',\r\n  templateUrl: './order-add.component.html',\r\n  styleUrls: ['./order-add.component.scss']\r\n})\r\nexport class OrderAddComponent implements OnInit, AfterViewInit {\r\n  @ViewChild(CompleterCmp, { static: false }) completer: CompleterCmp;\r\n  @ViewChildren(NbAccordionItemComponent) accordions: QueryList<NbAccordionItemComponent>;\r\n\r\n  addOrderFormGroup: FormGroup\r\n  // basic information\r\n\r\n  paymentMethods: PaymentMethod[]\r\n  orderStatuses: OrderStatus[]\r\n  provinces: Province[]\r\n  districts: District[]\r\n  wards: Ward[]\r\n  existingAddresses: Address[]\r\n  appliedCoupon: Coupon;\r\n\r\n  addressOptions = [\r\n    { value: 'existing', label: 'Use Existing Address', disabled: true },\r\n    { value: 'new', label: 'New Address', disabled: true },\r\n  ];\r\n\r\n  constructor(\r\n    private orderService: OrderService,\r\n    private orderStatusService: OrderStatusService,\r\n    private paymentMethodService: PaymentMethodService,\r\n    private accountService: AccountService,\r\n    private formBuilder: FormBuilder,\r\n    private productService: ProductService,\r\n    private utilsService: UtilsService,\r\n    private addressService: AddressService,\r\n    private couponService: ProductCouponService,\r\n    private router: Router\r\n  ) { }\r\n\r\n\r\n  settingFormGroup() {\r\n    this.addOrderFormGroup = this.formBuilder.group({\r\n      accountForm: this.formBuilder.group({\r\n        email: ['',\r\n          [CustomValidator.notBlank],\r\n          [isEmailNotExisting(this.accountService)]],\r\n        applyCoupon: [false],\r\n        coupon: ['',\r\n          [Validators.required],\r\n          [isCouponNotExisting(this.couponService), isCouponCantBeUsed(this.couponService)]],\r\n\r\n        totalPrice: [0, Validators.required],\r\n        totalQuantity: [0, Validators.required],\r\n        orderStatus: ['', Validators.required],\r\n        paymentMethod: ['', Validators.required],\r\n\r\n        addressOption: ['', Validators.required],\r\n        // for address option = new\r\n        province: ['', Validators.required],\r\n        district: ['', Validators.required],\r\n        ward: ['', Validators.required],\r\n        roadName: ['', [Validators.required, Validators.maxLength(50)]],\r\n\r\n        // for address option = existing\r\n        address: [null, [Validators.required]]\r\n      }),\r\n      products: this.formBuilder.array([])\r\n    })\r\n  }\r\n\r\n  get accountForm() { return this.addOrderFormGroup.controls[\"accountForm\"] as FormGroup }\r\n  get products() { return this.addOrderFormGroup.controls[\"products\"] as FormArray }\r\n\r\n  ngOnInit() {\r\n    this.orderStatusService.findAll().subscribe(data => this.orderStatuses = data._embedded.orderStatuses)\r\n    this.paymentMethodService.findAll().subscribe(data => this.paymentMethods = data._embedded.paymentMethods)\r\n    this.settingFormGroup()\r\n    this.addProduct()\r\n    this.accountCompleter()\r\n    this.onAddressOptionChange()\r\n    this.onAddressChange()\r\n    this.onCouponChange()\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => {\r\n      this.accordions.first.toggle()\r\n    }, 1000);\r\n  }\r\n\r\n  accountCompleter$: Observable<Account[]>;\r\n  accountCompleter() {\r\n    this.accountCompleter$ = this.accountForm.get('email').valueChanges.pipe(\r\n      startWith(''),\r\n      switchMap(enteredEmail => {\r\n        return this.accountService.findByEmailKeyword(enteredEmail)\r\n      })\r\n    );\r\n  }\r\n\r\n  selectCustomer(account: Account) {\r\n    this.accountForm.get('email').setValue(account.email);\r\n\r\n    this.addressService.findByAccountId(account.id).subscribe(data => {\r\n      this.existingAddresses = data\r\n      if (this.existingAddresses.length > 0) {\r\n        this.addressOptions[0].disabled = false\r\n        this.addressOptions[1].disabled = false\r\n        this.accountForm.get('addressOption').setValue('existing')\r\n      } else {\r\n        this.addressOptions[0].disabled = true\r\n        this.addressOptions[1].disabled = false\r\n        this.accountForm.get('addressOption').setValue('new')\r\n        this.loadProvinces()\r\n      }\r\n    })\r\n  }\r\n\r\n  loadProvinces() {\r\n    this.addressService.findAllProvinces().subscribe(\r\n      data => {\r\n        console.log(data);\r\n        \r\n        this.provinces = data._embedded.provinces\r\n        this.accountForm.get('district').setValue({})\r\n        this.accountForm.get('ward').setValue({})\r\n      }\r\n    )\r\n  }\r\n\r\n  loadDistricts(event: any) {\r\n    const selectedProvince: Province = this.accountForm.get('province').value\r\n    this.addressService.findAllDistrictByProvince(selectedProvince.code).subscribe(\r\n      data => {\r\n        this.districts = data._embedded.districts\r\n      }\r\n    );\r\n  }\r\n\r\n  loadWards(event: any) {\r\n    const selectedDistrict: District = this.accountForm.get('district').value\r\n    this.addressService.findAllWardByDistrict(selectedDistrict.code).subscribe(\r\n      data => {\r\n        this.wards = data._embedded.wards\r\n        this.accountForm.get('ward').setValue({})\r\n      }\r\n    );\r\n  }\r\n\r\n  onAddressOptionChange() {\r\n    this.accountForm.get('addressOption').valueChanges.subscribe(data => {\r\n      if(data == 'new') {\r\n        this.loadProvinces()\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddressChange() {\r\n    this.accountForm.get('province').valueChanges.subscribe(data => {\r\n      this.accountForm.patchValue({\r\n        district: '',\r\n        wards: '',\r\n        address: ''\r\n      });\r\n    });\r\n    this.accountForm.get('district').valueChanges.subscribe(data => {\r\n      this.accountForm.patchValue({\r\n        wards: '',\r\n        address: ''\r\n      });\r\n    });\r\n  }\r\n\r\n  onCouponChange() {\r\n    const couponControl = this.accountForm.get('coupon');\r\n    couponControl.statusChanges.subscribe((status) => {\r\n      if (status === 'VALID') {\r\n        this.couponService\r\n          .findByCode(couponControl.value)\r\n          .subscribe(data => {\r\n            this.appliedCoupon = data\r\n            this.countTotalPriceAndTotalQuantity()\r\n          })\r\n      } else {\r\n        this.appliedCoupon = null\r\n        this.countTotalPriceAndTotalQuantity()\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // FOR PRODUCTS\r\n  productCompleter$: Observable<any[]>\r\n  productCompleter(productFormIndex: number) {\r\n    this.productCompleter$ = this.products.at(productFormIndex).get('name').valueChanges.pipe(\r\n      startWith(''),\r\n      switchMap(enteredProductName => {\r\n        return this.productService.findByNameKeyword(enteredProductName)\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n  addProduct(): void {\r\n    const productForm = this.formBuilder.group({\r\n      product: [],\r\n      name: ['', [CustomValidator.notBlank], [isProductNotExisting(this.productService)]],\r\n      variant: [, [Validators.required]],\r\n      variants: [],\r\n      price: [],\r\n      maxQuantity: [],\r\n      quantity: [, [Validators.required, Validators.min(1)]],\r\n    })\r\n    this.products.push(productForm)\r\n    this.productCompleter(this.products.controls.length - 1)\r\n  }\r\n\r\n  removeProduct(productFormIndex: number): void { this.products.removeAt(productFormIndex) }\r\n\r\n  selectProduct(product: Product, productFormIndex: number) {\r\n    let productForm = this.products.controls[productFormIndex];\r\n    productForm.get('name').setValue(product.productName)\r\n\r\n    // select the selected\r\n    if (isEqual(productForm.get('product').value, product)) {\r\n      return;\r\n    }\r\n    productForm.get('product').setValue(product);\r\n    productForm.get('variant').setValue(null)\r\n    productForm.get('price').setValue(null)\r\n\r\n    // load variants\r\n    this.productService.findVariantsFromProductId(product.productId).subscribe(\r\n      (data: ProductVariant[]) => {\r\n        productForm.get('variants').setValue(data)\r\n      }\r\n    )\r\n    \r\n    const variantControl = productForm.get('variant')\r\n    variantControl.valueChanges.subscribe(data => {\r\n      productForm.get('price').setValue(variantControl.value['price'])\r\n      productForm.get('maxQuantity').setValue(variantControl.value['quantity'])\r\n      productForm.get('quantity').setValidators(Validators.max(variantControl.value['quantity']))\r\n    })\r\n\r\n    productForm.get('quantity').valueChanges.subscribe(() => { this.countTotalPriceAndTotalQuantity() })\r\n  }\r\n\r\n  countTotalPriceAndTotalQuantity() {\r\n    let totalQuantity: number = 0;\r\n    let totalPrice: number = 0;\r\n\r\n    for (let i = 0; i < this.products.length; i++) {\r\n      const productForm: FormGroup = this.products.at(i) as FormGroup;\r\n      totalQuantity += parseInt(productForm.get('quantity').value, 10);\r\n      totalPrice += parseFloat(productForm.get('price').value) * totalQuantity;\r\n    }\r\n    if (this.accountForm.get('applyCoupon').value && this.appliedCoupon != null) {\r\n      if (this.appliedCoupon.couponType.typeName == 'Fixed') {\r\n        totalPrice -= this.appliedCoupon.discount\r\n        if(totalPrice < 0) {\r\n          totalPrice = 0\r\n        }\r\n      } else {\r\n        totalPrice *= (1 - this.appliedCoupon.discount / 100)\r\n      }\r\n    }\r\n    this.accountForm.get('totalQuantity').setValue(totalQuantity);\r\n    this.accountForm.get('totalPrice').setValue(totalPrice);\r\n  }\r\n\r\n\r\n\r\n\r\n  // FOR SUBMIT\r\n  onSubmit() {\r\n    if(this.accountForm.get('addressOption').value == 'new') {\r\n      this.accountForm.get('address').setErrors(null)\r\n    } else if (this.accountForm.get('addressOption').value == 'existing') {\r\n      this.accountForm.get('province').setErrors(null)\r\n      this.accountForm.get('district').setErrors(null)\r\n      this.accountForm.get('ward').setErrors(null)\r\n      this.accountForm.get('roadName').setErrors(null)\r\n    }\r\n\r\n    if(!this.accountForm.get('applyCoupon').value) {\r\n      this.accountForm.get('coupon').setErrors(null)\r\n    }\r\n\r\n    if (this.addOrderFormGroup.invalid) {\r\n      this.addOrderFormGroup.markAllAsTouched();\r\n      this.utilsService.updateToastState(new ToastState('Add Order Failed!', \"danger\"))\r\n      return;\r\n    }\r\n\r\n    let order: Order = this.mapFormValue()\r\n    console.log(order)\r\n\r\n    this.orderService.insert(order).subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.utilsService.updateToastState(new ToastState('Add Order Successfully!!', \"success\"))\r\n          this.router.navigate(['/admin/orders/list'])\r\n        }\r\n      },\r\n      error => {\r\n        this.utilsService.updateToastState(new ToastState('Add Order Failed!', \"danger\"))\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  mapFormValue(): any {\r\n    let order: any = new Order()\r\n    order.accountEmail = this.accountForm.get('email').value\r\n    if (this.accountForm.get('applyCoupon').value) {\r\n      order.coupon = this.appliedCoupon\r\n    } else {\r\n      order.coupon = null\r\n    }\r\n    if (this.accountForm.get('addressOption').value == 'new') {\r\n      order.address = {\r\n        addressId: null,\r\n        roadName: this.accountForm.get('roadName').value,\r\n        ward: this.accountForm.get('ward').value,\r\n        district: this.accountForm.get('district').value,\r\n        province: this.accountForm.get('province').value\r\n      }\r\n    } else {\r\n      order.address = this.accountForm.get('address').value\r\n    }\r\n    order.orderStatus = this.accountForm.get('orderStatus').value\r\n    order.paymentMethod = this.accountForm.get('paymentMethod').value\r\n    order.totalQuantity = this.accountForm.get('totalQuantity').value\r\n    order.totalPrice = this.accountForm.get('totalPrice').value;\r\n    order.products = [];\r\n\r\n    for(let i = 0; i < this.products.length; i++) {\r\n      const productForm: FormGroup = this.products.at(i) as FormGroup;\r\n      let product: any = {\r\n        productId: productForm.get('product').value['productId'],\r\n        productName: productForm.get('product').value['productName'],\r\n        quantity: productForm.get('quantity').value,\r\n        productVariant: productForm.get('variant').value,\r\n        price: productForm.get('price').value\r\n      }\r\n      order.products.push(product)\r\n    }\r\n    return order;\r\n  }\r\n\r\n  getSizeStrFromVariant(variant) {\r\n    return \"Size: \" + variant.productSize.sizeName + \" - h: \" + variant.height + \"cm * w: \" + variant.width + \"cm\"\r\n  }\r\n}\r\n","<nb-card fullWidth>\n    <nb-card-header>\n        <div class=\"row\">\n            <div class=\"col d-flex align-items-center justify-content-between\">\n                <h6>\n                    Add An Order\n                </h6>\n                <button nbButton status=\"success\" size=\"large\" (click)=\"onSubmit()\">PUBLISH</button>\n            </div>\n        </div>\n    </nb-card-header>\n</nb-card>\n<div class=\"row\" [formGroup]=\"addOrderFormGroup\">\n    <div class=\"col-lg-6\" >\n        <nb-card formGroupName=\"accountForm\">\n            <nb-card-header>Basic Information</nb-card-header>\n            <nb-card-body>\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <input type=\"text\" placeholder=\"Customer Email\" nbInput fullWidth [nbAutocomplete]=\"accountTemplate\"\n                            formControlName=\"email\" class=\"mb-3\"/>\n                        <div class=\"alert alert-danger mt-1\"\n                            *ngIf=\"accountForm.get('email').invalid && (accountForm.get('email').dirty || accountForm.get('email').touched)\">\n                            <div *ngIf=\"accountForm.get('email').errors['notblank']\">\n                                Customer Email is required\n                            </div>\n                            <div *ngIf=\"accountForm.get('email').errors['emailNotExists']\">\n                                Customer Email does not exist\n                            </div>\n                        </div>\n                        <nb-autocomplete #accountTemplate>\n                            <nb-option *ngFor=\"let account of accountCompleter$ | async\" \n                                (click)=\"selectCustomer(account)\">\n                                <div class=\"row\">\n                                    <div class=\"col-3\">\n                                        <img [src]=\"account.image !== null ? \n                                            ('http://localhost:9090/assets/upload/account/' + account.image?.imageUrl) : \n                                            'assets/images/no-image.jpg'\"\n                                            class=\"d-block w-100\" style=\"width: 100%; height: auto\">\n                                    </div>\n                                    <div class=\"col-9 my-auto\">\n                                        <p class=\"font-weight-bold\">{{ account.email }}</p>\n                                        <p>Fullname: {{ account.fullName }}</p>\n                                        <p>Phone Number: {{ account.phoneNumber }}</p>\n                                    </div>\n                                </div>\n                            </nb-option>\n                        </nb-autocomplete>\n                    </div>\n                    <div class=\"col-12\">\n                        <div class=\"row\">\n                            <div class=\"col-12\">\n                                <nb-radio-group status=\"success\" formControlName=\"addressOption\">\n                                    <nb-radio *ngFor=\"let option of addressOptions\" [value]=\"option.value\" [disabled]=\"option.disabled\">\n                                        {{ option.label }}\n                                    </nb-radio>\n                                </nb-radio-group>\n                                <div class=\"alert alert-danger mt-1\"\n                                    *ngIf=\"accountForm.get('addressOption').invalid && (accountForm.get('addressOption').dirty || accountForm.get('addressOption').touched)\">\n                                    <div *ngIf=\"accountForm.get('addressOption').errors['required']\">\n                                        Shipping Address is required\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-12  mt-3\">\n                                <ng-container *ngIf=\"accountForm.get('addressOption').value === 'new' && \n                                        !accountForm.get('email').errors?.emailNotExisting\">\n                                    <div class=\"row\">\n                                        <div class=\"col-lg-6\">\n                                            <nb-select fullWidth placeholder=\"Province\" formControlName=\"province\"\n                                                (selectedChange)=\"loadDistricts($event)\">\n                                                <nb-select-label>\n                                                    Province: {{ accountForm.get('province').value['name'] }}\n                                                </nb-select-label>\n                                                <nb-option *ngFor=\"let province of provinces\"\n                                                    [value]=\"province\">{{province.name}}</nb-option>\n                                            </nb-select>\n                                            <div class=\"alert alert-danger mt-1\"\n                                                *ngIf=\"accountForm.get('province').invalid && (accountForm.get('province').dirty || accountForm.get('province').touched)\">\n                                                <div *ngIf=\"accountForm.get('province').errors['required']\">\n                                                    Province is required\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-lg-6\">\n                                            <nb-select fullWidth placeholder=\"District\" formControlName=\"district\"\n                                                (selectedChange)=\"loadWards($event)\">\n                                                <nb-select-label>\n                                                    District: {{ accountForm.get('district').value['name'] }}\n                                                </nb-select-label>\n                                                <nb-option *ngFor=\"let district of districts\"\n                                                    [value]=\"district\">{{district.fullName}}</nb-option>\n                                            </nb-select>\n                                            <div class=\"alert alert-danger mt-1\"\n                                                *ngIf=\"accountForm.get('district').invalid && (accountForm.get('district').dirty || accountForm.get('district').touched)\">\n                                                <div *ngIf=\"accountForm.get('district').errors['required']\">\n                                                    District is required\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-lg-6 mt-3\">\n                                            <nb-select fullWidth placeholder=\"Ward\" formControlName=\"ward\">\n                                                <nb-select-label>\n                                                    Ward: {{ accountForm.get('ward').value['name'] }}\n                                                </nb-select-label>\n                                                <nb-option *ngFor=\"let ward of wards\" [value]=\"ward\">{{ward.fullName}}</nb-option>\n                                            </nb-select>\n                                            <div class=\"alert alert-danger mt-1\"\n                                                *ngIf=\"accountForm.get('ward').invalid && (accountForm.get('ward').dirty || accountForm.get('ward').touched)\">\n                                                <div *ngIf=\"accountForm.get('ward').errors['required']\">\n                                                    Ward is required\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-lg-6 mt-3\">\n                                            <input type=\"text\" placeholder=\"Address\" nbInput fullWidth formControlName=\"roadName\" />\n                                            <div class=\"alert alert-danger mt-1\"\n                                                *ngIf=\"accountForm.get('roadName').invalid && (accountForm.get('roadName').dirty || accountForm.get('roadName').touched)\">\n                                                <div *ngIf=\"accountForm.get('roadName').errors['required']\">\n                                                    Address is required\n                                                </div>\n                                                <div *ngIf=\"accountForm.get('roadName').errors['maxlength']\">\n                                                    Address must be under 50 characters\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </ng-container>\n                \n                                <ng-container *ngIf=\"accountForm.get('addressOption').value === 'existing'\">\n                                    <nb-select fullWidth placeholder=\"Address\" formControlName=\"address\">\n                                        <nb-select-label>\n                                            Address: {{ \n                                                accountForm.get('address').value !== null ?\n                                                addressService.getAddressStringFormAddress(accountForm.get('address').value) :\n                                                null \n                                            }}\n                                        </nb-select-label>\n                                        <nb-option *ngFor=\"let addr of existingAddresses\"\n                                            [value]=\"addr\">{{ addressService.getAddressStringFormAddress(addr) }}</nb-option>\n                                    </nb-select>\n                                    <div class=\"alert alert-danger mt-1\"\n                                        *ngIf=\"accountForm.get('address').invalid && (accountForm.get('address').dirty || accountForm.get('address').touched)\">\n                                        <div *ngIf=\"accountForm.get('address').errors['required']\">\n                                            Address is required\n                                        </div>\n                                    </div>\n                                </ng-container>\n                            </div>\n                        </div>\n                        \n                    </div>\n                    <div class=\"col-12 mt-3\">\n                        <nb-select fullWidth placeholder=\"Payment Method\" formControlName=\"paymentMethod\">\n                            <nb-select-label>\n                                Payment Method: {{ accountForm.get('paymentMethod').value['methodName'] }}\n                            </nb-select-label>\n                            <nb-option *ngFor=\"let method of paymentMethods\"\n                                [value]=\"method\">{{method.methodName}}</nb-option>\n                        </nb-select>\n                        <div class=\"alert alert-danger mt-1\"\n                            *ngIf=\"accountForm.get('paymentMethod').invalid && (accountForm.get('paymentMethod').dirty || accountForm.get('paymentMethod').touched)\">\n                            <div *ngIf=\"accountForm.get('paymentMethod').errors['required']\">\n                                Payment Method is required\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-12 mt-3\">\n                        <nb-select fullWidth placeholder=\"Order Status\" formControlName=\"orderStatus\">\n                            <nb-select-label>\n                                Order Status: {{ accountForm.get('orderStatus').value['statusName'] }}\n                            </nb-select-label>\n                            <nb-option *ngFor=\"let status of orderStatuses\"\n                                [value]=\"status\">{{status.statusName}} - {{status.description}}</nb-option>\n                        </nb-select>\n                        <div class=\"alert alert-danger mt-1\"\n                            *ngIf=\"accountForm.get('orderStatus').invalid && (accountForm.get('orderStatus').dirty || accountForm.get('orderStatus').touched)\">\n                            <div *ngIf=\"accountForm.get('orderStatus').errors['required']\">\n                                Order Status is required\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-12 mt-3\">\n                        <div class=\"row d-flex align-items-center\">\n                            <div class=\"col-lg-3\">\n                                <nb-checkbox status=\"success\" \n                                    (checkedChange)=\"accountForm.get('applyCoupon').setValue($event)\"\n                                    [checked]=\"accountForm.get('applyCoupon').value\">Apply Coupon</nb-checkbox>\n                            </div>\n                            <ng-container *ngIf=\"accountForm.get('applyCoupon').value\">\n                            <div class=\"col-lg-9\">\n                                <input type=\"text\" placeholder=\"Coupon\" nbInput fullWidth formControlName=\"coupon\" />\n                                \n                                <div class=\"alert alert-danger mt-1\"\n                                    *ngIf=\"accountForm.get('coupon').invalid && (accountForm.get('coupon').dirty || accountForm.get('coupon').touched)\">\n                                    <div *ngIf=\"accountForm.get('coupon').errors['required']\">\n                                        Coupon Code does not exist\n                                    </div>\n                                    <div *ngIf=\"accountForm.get('coupon').errors['couponNotExist']\">\n                                        Coupon Code does not exist\n                                    </div>\n                                    <div *ngIf=\"accountForm.get('coupon').errors['couponNotExist'] !== true &&\n                                        accountForm.get('coupon').errors['couponCantUse']\">\n                                        Coupon Code cannot be used (it may have expired)\n                                    </div>\n                                </div>\n                            </div>\n                            </ng-container>\n                        </div>\n                    </div>\n                    <div class=\"col-12 mt-3\">\n                        <div class=\"row\">\n                            <div class=\"col-lg-6 font-weight-bold\">Total Quantity: {{ accountForm.get('totalQuantity').value }}</div>\n                            <div class=\"col-lg-6 font-weight-bold\">Total Price: {{ accountForm.get('totalPrice').value | currency:'USD'}}</div>\n                        </div>\n                    </div>\n                </div>\n            </nb-card-body>\n        </nb-card>\n    </div>\n\n    <div class=\"col-lg-6\">\n        <nb-card formArrayName=\"products\">\n            <nb-card-header>Order's Products</nb-card-header>\n            <nb-card-body>\n                <nb-accordion multi>\n                    <nb-accordion-item *ngFor=\"let productForm of products.controls; let i = index\">\n                        <nb-accordion-item-header class=\"d-flex justify-content-between align-items-center\">\n                            <p class=\"font-weight-bold\">Product #{{i + 1}}</p>\n                            <ng-container *ngIf=\"i !== 0\">\n                                <button nbButton [size]=\"'small'\" [status]=\"'danger'\" \n                                    class=\"mr-5\" (click)=\"removeProduct(i)\">\n                                    <nb-icon icon=\"trash-outline\"></nb-icon>\n                                </button>\n                            </ng-container>\n                            <ng-container *ngIf=\"i === 0\">\n                                <button nbButton [size]=\"'small'\" [status]=\"'danger'\" \n                                    class=\"mr-5\" (click)=\"removeProduct(i)\" style=\"visibility: hidden\">\n                                <nb-icon icon=\"trash-outline\"></nb-icon>\n                                </button>\n                            </ng-container>\n                        </nb-accordion-item-header>\n                        <nb-accordion-item-body [formGroup]=\"productForm\">\n                            <input  type=\"text\" placeholder=\"Product Name\" formControlName=\"name\"\n                                nbInput fullWidth [nbAutocomplete]=\"product\" class=\"inputs-group\"/>\n                            <div class=\"alert alert-danger mt-1\" \n                                *ngIf=\"productForm.get('name').invalid && (productForm.get('name').dirty || productForm.get('name').touched)\">\n                                <div *ngIf=\"productForm.get('name').errors['notblank']\">\n                                    Product name is required\n                                </div>\n                                <div *ngIf=\"productForm.get('name').errors['productNotExist']\">\n                                    Product does not exist\n                                </div>\n                            </div> \n                            <nb-autocomplete #product>\n                                <nb-option *ngFor=\"let product of productCompleter$ | async\"\n                                    (click)=\"selectProduct(product, i)\">\n                                    <div class=\"row\">\n                                        <div class=\"col-3\">\n                                            <img [src]=\"'http://localhost:9090/assets/upload/product/' + product.imageUrl\" class=\"d-block w-100\">\n                                        </div>\n                                        <div class=\"col-9 my-auto\">\n                                            <p class=\"font-weight-bold\">{{ product.productName }}</p>\n                                        </div>\n                                    </div>\n                                </nb-option>\n                            </nb-autocomplete>\n\n                            <nb-select fullWidth placeholder=\"Variant\" class=\"inputs-group\" formControlName=\"variant\">\n                                <nb-select-label>\n                                    Variant: {{ productForm.get('variant').value !== null ?\n                                        getSizeStrFromVariant(productForm.get('variant').value) :\n                                        null }}\n                                </nb-select-label>\n                                <nb-option *ngFor=\"let vari of productForm.get('variants').value\" [value]=\"vari\">\n                                    {{ getSizeStrFromVariant(vari) }}\n                                </nb-option>\n                            </nb-select>\n                            <div class=\"alert alert-danger mt-1\" \n                                *ngIf=\"productForm.get('variant').invalid && (productForm.get('variant').dirty || productForm.get('variant').touched)\">\n                                <div *ngIf=\"productForm.get('variant').errors['required']\">\n                                    Product Variant is required\n                                </div>\n                            </div> \n\n                            <input  type=\"number\" placeholder=\"Price\" nbInput fullWidth\n                                class=\"inputs-group\" formControlName=\"price\" disabled/>\n\n                            <input  type=\"number\" placeholder=\"Quantity\" nbInput fullWidth \n                                class=\"inputs-group\" formControlName=\"quantity\"/>\n                            <div class=\"alert alert-danger mt-1\" \n                                *ngIf=\"productForm.get('quantity').invalid && (productForm.get('quantity').dirty || productForm.get('quantity').touched)\">\n                                <div *ngIf=\"productForm.get('quantity').errors['required']\">\n                                    Quantity is required\n                                </div>\n                                <div *ngIf=\"productForm.get('quantity').errors['min']\">\n                                    The min quantity is 1\n                                </div>\n                                <div *ngIf=\"productForm.get('maxQuantity').value !== null\">\n                                    <div *ngIf=\"productForm.get('quantity').errors['max']\">\n                                        The maximum quantity is {{productForm.get('maxQuantity').value}}\n                                    </div>\n                                </div>\n                            </div> \n                        </nb-accordion-item-body>\n                    </nb-accordion-item>\n                </nb-accordion>\n            </nb-card-body>\n            <nb-card-footer>\n                <button nbButton [status]=\"'success'\" (click)=\"addProduct()\">\n                    <nb-icon icon=\"plus-outline\"></nb-icon>\n                </button>\n            </nb-card-footer>\n        </nb-card>\n    </div>\n</div>","import { Component, QueryList, ViewChildren } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NbAccordionItemComponent } from '@nebular/theme';\nimport { Order } from '../../../@core/models/order/order.model';\nimport { OrderService } from '../../../@core/services/order/order.service';\n\n@Component({\n  selector: 'ngx-order-detail',\n  templateUrl: './order-detail.component.html',\n  styleUrls: ['./order-detail.component.scss']\n})\nexport class OrderDetailComponent {\n  @ViewChildren(NbAccordionItemComponent) accordions: QueryList<NbAccordionItemComponent>;\n\n  order: Order;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private orderService: OrderService,\n    private router: Router\n  ) {\n    this.activatedRoute.params.subscribe(\n      params => {\n        this.orderService.findById(+params['id']).subscribe(\n          data => {\n            this.order = data\n          }\n        )\n      }\n    )\n  }\n}\n","<nb-card>\n    <nb-card-header>\n        <div class=\"d-flex justify-content-between align-items-center\">\n            <h6>\n                Order Detail\n            </h6>\n        </div>\n    </nb-card-header>\n</nb-card>\n<ng-container *ngIf=\"order !== undefined\">\n    <div class=\"row\">\n        <div class=\"col-lg-6 col-md-12\">\n            <nb-card>\n                <nb-card-header>\n                    Basic Information\n                </nb-card-header>\n                <nb-card-body>\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <p><span class=\"font-weight-bold\">Tracking Number: </span>{{order.orderTrackingNumber}}</p>\n                            <p><span class=\"font-weight-bold\">Customer Email: </span>{{order.accountEmail}}</p>\n                            <p><span class=\"font-weight-bold\">Coupon Applied: </span>{{ order.couponCode !== null ?\n                                order.couponCode : 'NONE' }}</p>\n                            <p><span class=\"font-weight-bold\">Payment method: </span>{{order.paymentMethod.methodName}}\n                            </p>\n                            <p><span class=\"font-weight-bold\">Shipping Address: </span>{{order.address}}</p>\n                            <p><span class=\"font-weight-bold\">Created At: </span>{{order.createdAt | date: 'short'}}</p>\n                            <p><span class=\"font-weight-bold\">Total Quantity: </span>{{order.totalQuantity}}</p>\n                            <p><span class=\"font-weight-bold\">Total Price: </span>{{order.totalPrice | currency: 'USD'}}\n                            </p>\n                            <div class=\"d-flex align-items-center\">\n                                <div class=\"font-weight-bold\">Status: </div>\n                                <div class=\"pl-3\" *ngIf=\"order.orderStatus.statusName==='Canceled'\">\n                                    <h6><span class=\"badge badge-pill badge-danger\">Canceled</span></h6>\n                                </div>\n                                <div class=\"pl-3\" *ngIf=\"order.orderStatus.statusName==='Hanling'\">\n                                    <h6><span class=\"badge badge-pill badge-info\">Handling</span></h6>\n                                </div>\n                                <div class=\"pl-3\" *ngIf=\"order.orderStatus.statusName==='Delivering'\">\n                                    <h6><span class=\"badge badge-pill badge-warning\">Delivering</span></h6>\n                                </div>\n                                <div class=\"pl-3\" *ngIf=\"order.orderStatus.statusName==='Completed'\">\n                                    <h6><span class=\"badge badge-pill badge-success\">Completed</span></h6>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </nb-card-body>\n            </nb-card>\n        </div>\n        <div class=\"col-lg-6 col-md-12\">\n            <nb-card>\n                <nb-card-header>\n                    Order's Products Information\n                </nb-card-header>\n                <nb-card-body>\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\" style=\"width: 20%;\" class=\"align-middle text-center\">\n                                    <p><span class=\"font-weight-bold\">Image</span></p>\n                                </th>\n                                <th scope=\"col\" style=\"width: 20%;\" class=\"align-middle text-center\">\n                                    <p><span class=\"font-weight-bold\">Name</span></p>\n                                </th>\n                                <th scope=\"col\" style=\"width: 20%;\" class=\"align-middle text-center\">\n                                    <p><span class=\"font-weight-bold\">Size</span></p>\n                                </th>\n                                <th scope=\"col\" style=\"width: 20%;\" class=\"align-middle text-center\">\n                                    <p><span class=\"font-weight-bold\">Unit Price</span></p>\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <ng-container *ngFor=\"let detail of order.orderDetails\">\n                                <tr>\n                                    <ng-container *ngIf=\"detail.productId !== null\">\n                                        <a [href]=\"'/admin/products/detail/' + detail.productId\">\n                                            <th class=\"d-flex justify-content-center\">\n                                                <img [src]=\"\n                                                    detail.imageUrl !== null ?\n                                                    'http://localhost:9090/assets/upload/product/' + detail.imageUrl :\n                                                    'assets/images/no-image.jpg'\" \n                                                    [height]=\"75\" class=\"d-block\">\n                                            </th>\n                                        </a>\n                                    </ng-container>\n                                    <ng-container *ngIf=\"detail.productId === null\">\n                                        <th class=\"d-flex justify-content-center\">\n                                            <img [src]=\"'assets/images/no-image.jpg'\" \n                                                [height]=\"75\" class=\"d-block\">\n                                        </th>\n                                    </ng-container>\n                                    \n                                    <th class=\"align-middle text-center\">\n                                        <p>{{detail.productName}}</p>\n                                    </th>\n                                    <th class=\"align-middle text-center\">\n                                        <p>{{detail.size | uppercase}}</p>\n                                    </th>\n                                    <th class=\"align-middle text-center\">\n                                        <p>\n                                            {{detail.price | currency: 'USD'}} *\n                                            <span class=\"text-monospace\">{{detail.quantity}}</span>\n                                        </p>\n                                    </th>\n                                </tr>\n                            </ng-container>\n                            \n                        </tbody>\n                    </table>\n                </nb-card-body>\n            </nb-card>\n        </div>\n\n    </div>\n</ng-container>","import { Component, Input, ViewChild, TemplateRef } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { NbWindowRef, NbWindowService } from \"@nebular/theme\";\r\nimport { ViewCell } from \"ng2-smart-table\";\r\nimport { ToastState, UtilsService } from \"../../../../@core/services/utils.service\";\r\nimport { OrderStatusService } from \"../../../../@core/services/order/order-status.service\";\r\nimport { OrderService } from \"../../../../@core/services/order/order.service\";\r\nimport { OrderStatus } from \"../../../../@core/models/order/order-status.model\";\r\nimport { forkJoin } from \"rxjs\";\r\n\r\n@Component({\r\n    selector: 'ngx-custom-action',\r\n    template: `\r\n        <div class=\"row \">\r\n            <div class=\"col-lg-6 d-flex justify-content-center\">\r\n                <button nbButton status=\"primary\" (click)=\"onGetDetail()\">\r\n                    <nb-icon icon=\"folder-outline\"></nb-icon>\r\n                </button>\r\n            </div>\r\n            <div class=\"col-lg-6 d-flex justify-content-center\">\r\n                <button nbButton status=\"warning\" (click)=\"onEdit()\">\r\n                    <nb-icon icon=\"edit-2-outline\"></nb-icon>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <ng-template #editOrderStatus let-data>\r\n            <div class=\"d-flex flex-column\" [formGroup]=\"editStatusFormGroup\">\r\n                <nb-select fullWidth placeholder=\"Order Status\" formControlName=\"orderStatus\">\r\n                    <nb-select-label>\r\n                        Order Status: {{ \r\n                            editStatusFormGroup.get('orderStatus').value !== null ? \r\n                            editStatusFormGroup.get('orderStatus').value['statusName'] :\r\n                            null\r\n                        }}\r\n                    </nb-select-label>\r\n                    <nb-option *ngFor=\"let status of orderStatuses\"\r\n                        [value]=\"status\">{{status.statusName}}</nb-option>\r\n                </nb-select>\r\n\r\n                <div class=\"alert alert-danger mt-1\"\r\n                    *ngIf=\"editStatusFormGroup.get('orderStatus').invalid && (editStatusFormGroup.get('orderStatus').dirty || editStatusFormGroup.get('orderStatus').touched)\">\r\n                    <div *ngIf=\"editStatusFormGroup.get('orderStatus').errors['required']\">\r\n                        Order Status is required\r\n                    </div>\r\n                </div>\r\n                <button nbButton status=\"success\" class=\"mt-3\" (click)=\"editStatus()\">\r\n                    SAVE\r\n                </button>\r\n            </div>\r\n        </ng-template>\r\n    `,\r\n    styles: [\r\n        `\r\n            button {\r\n                padding: 0.5rem 0.7rem;\r\n            }\r\n            i {\r\n                font-size: 1.2rem;\r\n            }\r\n        `\r\n    ]\r\n})\r\n\r\nexport class CustomOrderActionComponent implements ViewCell {\r\n    renderValue: string;\r\n\r\n    @Input() value: string | number;\r\n    @Input() rowData: any;\r\n\r\n    @ViewChild('editOrderStatus') editOrderStatusWindow: TemplateRef<any>;\r\n    windowRef: NbWindowRef;\r\n    editStatusFormGroup: FormGroup;\r\n    orderStatuses: OrderStatus[]\r\n\r\n    constructor(\r\n        private windowService: NbWindowService,\r\n        private formBuilder: FormBuilder,\r\n        private utilsService: UtilsService,\r\n        private orderService: OrderService,\r\n        private orderStatusService: OrderStatusService,\r\n        private router: Router\r\n    ) { \r\n        this.editStatusFormGroup = this.formBuilder.group({\r\n            orderStatus: [null, Validators.required],\r\n        })\r\n    }\r\n\r\n    onGetDetail() {\r\n        this.router.navigate(['/admin/orders', 'detail', this.rowData.orderId])\r\n    }\r\n\r\n    onEdit() {\r\n        this.windowRef = this.windowService.open(\r\n            this.editOrderStatusWindow, { title: 'Edit Order Status' },\r\n        );\r\n\r\n        this.orderStatusService.findAll().subscribe(data => {\r\n            this.orderStatuses = data._embedded.orderStatuses.map(data => {\r\n                return {\r\n                    orderStatusId: data.orderStatusId,\r\n                    statusName: data.statusName,\r\n                    description: data.description\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    editStatus() {\r\n        if (this.editStatusFormGroup.invalid) {\r\n            this.editStatusFormGroup.markAllAsTouched();\r\n            this.utilsService.updateToastState(new ToastState('Edit Order Failed!', 'danger'))\r\n            return;\r\n        }\r\n        let orderStatus: OrderStatus = this.editStatusFormGroup.value['orderStatus'] as OrderStatus\r\n        this.orderService.updateOrderStatus(this.rowData.orderId, orderStatus).subscribe(\r\n            data => {\r\n                if (data) {\r\n                    this.utilsService.updateToastState(new ToastState('Edit Order Successfully!', 'success'))\r\n                    this.orderService.notifyOrderChange()\r\n                    this.windowRef.close();\r\n                }\r\n            },\r\n            error => {console.log(error);\r\n            }\r\n        )\r\n    }\r\n}","import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DefaultFilter } from 'ng2-smart-table';\r\n\r\n@Component({\r\n    template: `\r\n        <button nbButton fullWidth status=\"primary\" (click)=\"onAdd()\">\r\n            <nb-icon icon=\"plus-square-outline\"></nb-icon>\r\n        </button>\r\n    `,\r\n})\r\nexport class CustomOrderFilterActionsComponent extends DefaultFilter implements OnInit, OnChanges {\r\n\r\n    inputControl = new FormControl();\r\n\r\n    constructor(private router: Router) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        let x        \r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        let x        \r\n    }\r\n\r\n    onAdd(){\r\n        this.router.navigate(['/admin/orders', 'add'])\r\n    }\r\n\r\n}","import { NbWindowRef } from '@nebular/theme';\r\nimport { Component, ViewChild, OnInit, Input, TemplateRef } from \"@angular/core\";\r\nimport { ViewCell } from \"ng2-smart-table\";\r\n\r\n@Component({\r\n    selector: 'ngx-custom-action',\r\n    template: `\r\n        <div *ngIf=\"renderValue==='Canceled'\">\r\n            <h6><span class=\"badge badge-pill badge-danger\">Canceled</span></h6>\r\n        </div>\r\n        <div *ngIf=\"renderValue==='Hanling'\">\r\n            <h6><span class=\"badge badge-pill badge-info\">Handling</span></h6>\r\n        </div>\r\n        <div *ngIf=\"renderValue==='Delivering'\">\r\n            <h6><span class=\"badge badge-pill badge-warning\">Delivering</span></h6>\r\n        </div>\r\n        <div *ngIf=\"renderValue==='Completed'\">\r\n            <h6><span class=\"badge badge-pill badge-success\">Completed</span></h6>\r\n        </div>\r\n    `,\r\n})\r\nexport class CustomOrderStatusActionComponent implements ViewCell, OnInit {\r\n    renderValue: string;\r\n\r\n    @Input() value: string | number;\r\n    @Input() rowData: any;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void {\r\n        this.renderValue = this.rowData.orderStatus.toString()\r\n    }\r\n\r\n}","import { takeUntil } from 'rxjs/operators';\nimport { forkJoin, Subject } from 'rxjs';\nimport { Component, OnInit, AfterViewInit, ViewChild, ElementRef, TemplateRef } from '@angular/core';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { Router } from '@angular/router';\nimport { CustomOrderActionComponent } from './custom/custom-order-action.component';\nimport { CustomOrderFilterActionsComponent } from './custom/custom-order-filter-actions.component';\nimport { PaymentMethod } from '../../../@core/models/order/payment-method.model';\nimport { OrderStatus } from '../../../@core/models/order/order-status.model';\nimport { PaymentMethodService } from '../../../@core/services/order/payment-method.service';\nimport { OrderStatusService } from '../../../@core/services/order/order-status.service';\nimport { OrderService } from '../../../@core/services/order/order.service';\nimport { DatePipe } from '@angular/common';\nimport { Order } from '../../../@core/models/order/order.model';\nimport { CustomOrderStatusActionComponent } from './custom/custom-order-status-action.component';\nimport { NbWindowRef, NbWindowService } from '@nebular/theme';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastState, UtilsService } from '../../../@core/services/utils.service';\n\n@Component({\n  selector: \"ngx-order-list\",\n  templateUrl: \"./order-list.component.html\",\n  styleUrls: [\"./order-list.component.scss\"],\n})\nexport class OrderListComponent implements OnInit, AfterViewInit {\n  numberOfItem: number = localStorage.getItem('itemPerPage') != null ? +localStorage.getItem('itemPerPage') : 10; // default\n  source: LocalDataSource = new LocalDataSource();\n  // Setting for List layout\n  paymentMethods: PaymentMethod[];\n  orderStatuses: OrderStatus[];\n  private unsubscribe = new Subject<void>();\n\n  // select multi order\n  selectedOrders: Order[] = []\n  loadedOrders: boolean = false;\n  @ViewChild('editOrderStatus') editOrderStatusWindow: TemplateRef<any>;\n  windowRef: NbWindowRef;\n  editStatusFormGroup: FormGroup;\n\n\n\n  settings = {\n    selectMode: 'multi',\n    actions: {\n      position: 'right',\n      edit: false,\n      delete: false,\n      add: false,\n      columnTitle: ''\n    },\n    columns: {},\n    pager: {\n      display: true,\n      perPage: this.numberOfItem\n    },\n  };\n\n\n  constructor(\n    private router: Router,\n    private paymentMethodService: PaymentMethodService,\n    private orderStatusService: OrderStatusService,\n    private orderService: OrderService,\n    private windowService: NbWindowService,\n    private utilsService: UtilsService,\n    private formBuilder: FormBuilder\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    const paymentObservable = this.paymentMethodService.findAll();\n    const orderStatusObservable = this.orderStatusService.findAll();\n\n    forkJoin([paymentObservable, orderStatusObservable]).subscribe(\n      ([paymentData, orderStatusDate]) => {\n        this.paymentMethods = paymentData._embedded.paymentMethods;\n        this.orderStatuses = orderStatusDate._embedded.orderStatuses;\n\n        this.settings = {\n          selectMode: 'multi',\n          actions: {\n            position: 'right',\n            edit: false,\n            delete: false,\n            add: false,\n            columnTitle: ''\n          },\n          columns: {\n            orderId: {\n              title: 'ID',\n              type: 'number',\n              width: '3%'\n            },\n            orderTrackingNumber: {\n              title: 'Tracking Number',\n              type: 'string',\n            },\n            customerEmail: {\n              title: 'Customer Email',\n              type: 'string',\n            },\n            totalPrice: {\n              title: 'Total Price',\n              type: 'string',\n            },\n            totalQuantity: {\n              title: 'Total Quantity',\n              type: 'string',\n            },\n            paymentMethod: {\n              title: 'Payment Method',\n              type: 'string',\n              filter: {\n                type: 'list',\n                config: {\n                  selectText: 'Method...',\n                  list: this.paymentMethods.map(pm => {\n                    return { value: pm.methodName, title: pm.methodName }\n                  }),\n                },\n              },\n            },\n            createdAt: {\n              title: 'Created Date',\n              type: 'string',\n            },\n            orderStatus: {\n              title: 'Order Status',\n              type: 'custom',\n              renderComponent: CustomOrderStatusActionComponent,\n              filter: {\n                type: 'list',\n                config: {\n                  selectText: 'Status...',\n                  list: this.orderStatuses.map(status => {\n                    return { value: status.statusName, title: status.statusName }\n                  })\n                },\n              },\n            },\n            actions: {\n              title: 'Actions',\n              type: 'custom',\n              sort: false,\n              filter: {\n                type: 'custom',\n                component: CustomOrderFilterActionsComponent,\n              },\n              renderComponent: CustomOrderActionComponent\n            }\n          },\n          pager: {\n            display: true,\n            perPage: this.numberOfItem\n          },\n        }\n\n        this.orderService.orderChange$\n          .pipe(takeUntil(this.unsubscribe))\n          .subscribe(() => {\n            this.loadOrders();\n          });\n        this.loadOrders()\n      }\n    )\n\n\n\n  }\n\n  loadOrders() {\n    this.orderService.findAll().subscribe(\n      data => {\n        const mappedOrders: any[] = data.map((order: Order) => {\n          return {\n            orderId: order.orderId,\n            orderTrackingNumber: order.orderTrackingNumber,\n            customerEmail: order.accountEmail,\n            totalPrice: order.totalPrice + '$',\n            totalQuantity: order.totalQuantity,\n            paymentMethod: order.paymentMethod.methodName,\n            orderStatus: order.orderStatus.statusName,\n            createdAt: new DatePipe('en-US').transform(order.createdAt, 'dd/MM/yyyy').toString()\n          }\n        })\n        this.source.load(mappedOrders)\n        this.loadedOrders = true\n      }\n    )\n  }\n\n  onRowSelect(event: any): void {\n    this.selectedOrders = (event.selected) as Order[]\n  }\n\n  ngAfterViewInit() {\n    const pager = document.querySelector('ng2-smart-table-pager');\n    pager.classList.add('d-block')\n  }\n\n  onEdit() {\n    this.editStatusFormGroup = this.formBuilder.group({\n      orderStatus: [null, Validators.required],\n    })\n    this.windowRef = this.windowService.open(\n      this.editOrderStatusWindow, { title: 'Edit Order Status' },\n    );\n  }\n\n  editStatus() {\n    if (this.editStatusFormGroup.invalid) {\n      this.editStatusFormGroup.markAllAsTouched();\n      this.utilsService.updateToastState(new ToastState('Edit Order Status Failed!', 'danger'))\n      return;\n    }\n    this.orderService.updateOrdersStatus(this.selectedOrders, this.editStatusFormGroup.get('orderStatus').value)\n      .subscribe(\n        data => {\n          if (data) {\n            this.selectedOrders = []\n            this.loadOrders();\n            this.utilsService.updateToastState(new ToastState('Edit Order Status Successfully!', 'success'))\n            this.windowRef.close();\n          }\n        },\n        error => {\n          console.log(error);\n          this.utilsService.updateToastState(new ToastState('Edit Order Status Failed!', 'danger'))\n\n        }\n      )\n  }\n}\n","<ng-container *ngIf=\"loadedOrders; else loadingBlock\">\n    <nb-card>\n        <nb-card-header class=\"d-flex justify-content-between align-items-center\">\n            <h6>\n                Order List\n            </h6>\n            <ngx-item-of-list (selectNumberOfItem)=\"source.setPaging(1, $event)\"></ngx-item-of-list>\n        </nb-card-header>\n        <nb-card-body>\n            <ng2-smart-table [ngClass]=\"'smart-table'\" [settings]=\"settings\" [source]=\"source\"\n                (userRowSelect)=\"onRowSelect($event)\">\n            </ng2-smart-table>\n        </nb-card-body>\n        <nb-card-footer>\n            <ng-container *ngIf=\"selectedOrders.length > 0\">\n                <button nbButton status=\"warning\" (click)=\"onEdit()\">\n                    <nb-icon icon=\"edit-2-outline\"></nb-icon>\n                    Edit Status\n                </button>\n            </ng-container>\n        </nb-card-footer>\n    </nb-card>\n</ng-container>\n\n<ng-template #editOrderStatus let-data>\n    <div class=\"d-flex flex-column\" [formGroup]=\"editStatusFormGroup\">\n        <nb-select fullWidth placeholder=\"Order Status\" formControlName=\"orderStatus\">\n            <nb-select-label>\n                Order Status: {{ editStatusFormGroup.get('orderStatus').value !== null ?\n                editStatusFormGroup.get('orderStatus').value['statusName'] : null }}\n            </nb-select-label>\n            <nb-option *ngFor=\"let status of orderStatuses\" [value]=\"status\">{{status.statusName}}</nb-option>\n        </nb-select>\n        <div class=\"alert alert-danger mt-1\"\n            *ngIf=\"editStatusFormGroup.get('orderStatus').invalid && (editStatusFormGroup.get('orderStatus').dirty || editStatusFormGroup.get('orderStatus').touched)\">\n            <div *ngIf=\"editStatusFormGroup.get('orderStatus').errors['required']\">\n                Order Status is required\n            </div>\n        </div>\n        <button nbButton status=\"success\" class=\"mt-3\" (click)=\"editStatus()\">\n            SAVE\n        </button>\n    </div>\n</ng-template>\n\n\n<ng-template #loadingBlock>\n    <nb-card [size]=\"'small'\" [nbSpinner]=\"!loadedCatalogs\" nbSpinnerSize=\"large\" nbSpinnerStatus=\"primary\">\n    </nb-card>\n</ng-template>","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { OrderListComponent } from \"./order-list/order-list.component\";\r\nimport { OrdersComponent } from \"./orders.component\";\r\nimport { OrderDetailComponent } from \"./order-detail/order-detail.component\";\r\nimport { OrderAddComponent } from \"./order-add/order-add.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: \"\",\r\n        component: OrdersComponent,\r\n        children: [\r\n            {\r\n                path: \"list\",\r\n                component: OrderListComponent,\r\n            },\r\n            {\r\n                path: \"add\",\r\n                component: OrderAddComponent\r\n            },\r\n            {\r\n                path: \"detail/:id\",\r\n                component: OrderDetailComponent,\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class OrdersRoutingModule { }\r\n\r\nexport const routedComponents = [\r\n    OrdersComponent,\r\n    OrderListComponent,\r\n    OrderDetailComponent,\r\n];\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-order',\n  template: `<router-outlet></router-outlet>`\n})\nexport class OrdersComponent {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OrdersComponent } from './orders.component';\nimport { OrderDetailComponent } from './order-detail/order-detail.component';\nimport { RouterModule } from '@angular/router';\nimport { OrderListComponent } from './order-list/order-list.component';\nimport { OrdersRoutingModule } from './orders-routing.module';\nimport { NbAccordionModule, NbActionsModule, NbAutocompleteComponent, NbAutocompleteModule, NbButtonModule, NbCardModule, NbCheckboxModule, NbDatepickerModule, NbIconComponent, NbIconModule, NbInputModule, NbRadioModule, NbSelectModule, NbSpinnerModule } from '@nebular/theme';\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\nimport { OrderAddComponent } from './order-add/order-add.component';\nimport { Ng2CompleterModule } from 'ng2-completer';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CustomOrderActionComponent } from './order-list/custom/custom-order-action.component';\nimport { CustomOrderFilterActionsComponent } from './order-list/custom/custom-order-filter-actions.component';\nimport { CustomOrderStatusActionComponent } from './order-list/custom/custom-order-status-action.component';\nimport { ThemeModule } from '../../@theme/theme.module';\nimport { SharedModule } from '../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [\n    OrdersComponent,\n    OrderDetailComponent,\n    OrderListComponent,\n    OrderAddComponent,\n    CustomOrderActionComponent,\n    CustomOrderFilterActionsComponent,\n    CustomOrderStatusActionComponent,\n  ],\n  imports: [\n    RouterModule,\n    CommonModule,\n    OrdersRoutingModule,\n    NbCardModule,\n    Ng2SmartTableModule,\n    Ng2CompleterModule,\n    NbInputModule,\n    NbButtonModule,\n    NbActionsModule,\n    NbCheckboxModule,\n    NbRadioModule,\n    NbDatepickerModule,\n    NbSelectModule,\n    NbAccordionModule,\n    FormsModule,\n    NbAutocompleteModule,\n    ReactiveFormsModule,\n    NbIconModule,\n    ThemeModule,\n    SharedModule,\n    NbSpinnerModule\n  ]\n})\nexport class OrdersModule { }\n","import { NbMenuItem } from '@nebular/theme';\r\n\r\nexport const MENU_ITEMS_AUTHORIZED: NbMenuItem[] = [\r\n  {\r\n    title: 'Dashboard',\r\n    icon: 'home-outline',\r\n    link: '/admin/dashboard',\r\n    home: true,\r\n  },\r\n  {\r\n    title: 'FEATURES',\r\n    group: true,\r\n  },\r\n  {\r\n    title: 'Products',\r\n    icon: 'grid-outline',\r\n    expanded: true,\r\n    children: [\r\n      {\r\n        title: 'Product List',\r\n        link: '/admin/products/list',\r\n      },\r\n      {\r\n        title: 'Add A Product',\r\n        link: '/admin/products/add',\r\n      },\r\n      {\r\n        title: 'Product Catalog',\r\n        link: '/admin/products/catalog',\r\n      },\r\n      {\r\n        title: 'Product Coupon',\r\n        link: '/admin/products/coupon',\r\n      },\r\n      {\r\n        title: 'Product Sale',\r\n        link: '/admin/products/product-sale',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Orders',\r\n    icon: 'clipboard-outline',\r\n    expanded: true,\r\n    children: [\r\n      {\r\n        title: 'Order List',\r\n        link: '/admin/orders/list',\r\n      },\r\n      {\r\n        title: 'Add An Order',\r\n        link: '/admin/orders/add',\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: 'Customers',\r\n    icon: 'person-done-outline',\r\n    expanded: true,\r\n    children: [\r\n      {\r\n        title: \"Customer List\",\r\n        link: '/admin/customers/list',\r\n      },\r\n      {\r\n        title: \"Contact\",\r\n        link: '/admin/customers/contact',\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: 'Logout',\r\n    icon: 'log-out-outline',\r\n    link: '/admin/auth/logout',\r\n  },\r\n];\r\n\r\nexport const MENU_ITEMS_UNAUTHORIZED: NbMenuItem[] = [\r\n  {\r\n    title: 'Login',\r\n    icon: 'lock-outline',\r\n    link: '/admin/auth/login',\r\n  },\r\n  {\r\n    title: '',\r\n    group: true,\r\n  },\r\n]\r\n","import { RouterModule, Routes } from \"@angular/router\";\r\nimport { NgModule } from \"@angular/core\";\r\n\r\nimport { PagesComponent } from \"./pages.component\";\r\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\r\nimport { AuthenticationGuard } from \"../@core/guard/authentication.guard\";\r\nimport { ChangeProfileComponent } from \"./dashboard/change-profile/change-profile.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", component: PagesComponent, canActivate: [AuthenticationGuard],\r\n      children: [\r\n        { path: \"dashboard\", component: DashboardComponent },\r\n        { path: \"change-profile\", component: ChangeProfileComponent },\r\n        {\r\n          path: \"products\",\r\n          loadChildren: () =>\r\n            import(\"./products/products.module\").then((m) => m.ProductsModule),\r\n        },\r\n        {\r\n          path: \"customers\",\r\n          loadChildren: () =>\r\n            import(\"./customers/customers.module\").then((m) => m.CustomersModule),\r\n        },\r\n        {\r\n          path: \"orders\",\r\n          loadChildren: () =>\r\n            import(\"./orders/orders.module\").then((m) => m.OrdersModule),\r\n        },\r\n        {\r\n          path: 'auth', \r\n          loadChildren: () =>\r\n            import(\"./auth/auth.module\").then((m) => m.AuthModule),\r\n        },\r\n        {\r\n          path: \"\",\r\n          redirectTo: \"dashboard\",\r\n          pathMatch: \"full\",\r\n        },\r\n        {\r\n          path: \"**\",\r\n          redirectTo: \"dashboard\",\r\n        },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PagesRoutingModule {}\r\n","import { takeUntil } from 'rxjs/operators';\r\nimport { Component } from '@angular/core';\r\n\r\nimport { MENU_ITEMS_AUTHORIZED } from './pages-menu';\r\nimport { MENU_ITEMS_UNAUTHORIZED } from './pages-menu';\r\n\r\nimport { NbMenuItem } from '@nebular/theme';\r\nimport { Subject } from 'rxjs';\r\nimport { AuthenticationService } from '../@core/services/account/authentication.service';\r\n\r\n@Component({\r\n  selector: 'ngx-pages',\r\n  styleUrls: ['pages.component.scss'],\r\n  template: `\r\n    <ngx-one-column-layout>\r\n      <nb-menu [items]=\"menu\"></nb-menu>\r\n      <router-outlet></router-outlet>\r\n    </ngx-one-column-layout>\r\n  `,\r\n})\r\nexport class PagesComponent {\r\n\r\n  menu: NbMenuItem[]\r\n  private unsubscribe = new Subject<void>();\r\n\r\n  constructor(\r\n    public authService: AuthenticationService\r\n  ) {\r\n    this.authService.authChange$\r\n      .pipe(takeUntil(this.unsubscribe))\r\n      .subscribe(() => {\r\n        this.loadMenu();\r\n      });\r\n    this.loadMenu()\r\n  }\r\n\r\n  loadMenu() {\r\n    if (this.authService.isLoggedIn()) {\r\n      this.menu = MENU_ITEMS_AUTHORIZED\r\n    } else {\r\n      this.menu = MENU_ITEMS_UNAUTHORIZED\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NbMenuModule, NbSearchModule, NbSelectModule } from '@nebular/theme';\r\n\r\nimport { ThemeModule } from '../@theme/theme.module';\r\nimport { PagesComponent } from './pages.component';\r\nimport { DashboardModule } from './dashboard/dashboard.module';\r\nimport { PagesRoutingModule } from './pages-routing.module';\r\nimport { ProductsModule } from './products/products.module';\r\nimport { OrdersModule } from './orders/orders.module';\r\nimport { CustomersModule } from './customers/customers.module';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    PagesRoutingModule,\r\n    ThemeModule, // @theme\r\n    NbMenuModule,\r\n    \r\n    DashboardModule,\r\n    ProductsModule,\r\n    OrdersModule,\r\n    CustomersModule,\r\n    SharedModule,\r\n\r\n    NbSearchModule,\r\n  ],\r\n  declarations: [\r\n    PagesComponent,\r\n  ],\r\n})\r\nexport class PagesModule {\r\n}\r\n","import { Input, OnInit } from '@angular/core';\r\nimport { Component, ElementRef, Renderer2 } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ngx-images-carousel',\r\n    template: `\r\n    <div id=\"carouselExample\" class=\"carousel slide\" data-ride=\"carousel\" #carousel>\r\n        <ol class=\"carousel-indicators\">\r\n            <li li *ngFor=\"let url of urls; let i = index\" [class.active]=\"i === activeSlideIndex\"\r\n                [attr.data-target]=\"'#carouselExample'\" [attr.data-slide-to]=\"i\"></li>\r\n        </ol>\r\n        <div class=\"carousel-inner\">\r\n            <div class=\"carousel-item\" *ngFor=\"let url of urls; let i = index\"\r\n                [class.active]=\"i === activeSlideIndex\">\r\n                <div style=\"width: 100%; height: 100%; display: flex; justify-content: center; align-items: center;\">\r\n                    <img [src]=\"url\" class=\"d-block w-100\" alt=\"Slide Image\" style=\"max-height: 290px; object-fit: contain\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <a class=\"carousel-control-prev\" (click)=\"prevSlide(carousel)\" role=\"button\" data-slide=\"prev\">\r\n            <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n            <span class=\"sr-only\">Previous</span>\r\n        </a>\r\n        <a class=\"carousel-control-next\" (click)=\"nextSlide(carousel)\" role=\"button\" data-slide=\"next\">\r\n            <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n            <span class=\"sr-only\">Next</span>\r\n        </a>\r\n    </div>\r\n    `,\r\n})\r\nexport class ImagesCarouselComponent implements OnInit {\r\n    @Input() urls: string[] = []\r\n    @Input() imgHeight: number = null\r\n    activeSlideIndex = 0;\r\n\r\n    constructor(private elementRef: ElementRef, private renderer: Renderer2) { }\r\n\r\n    ngOnInit(): void {\r\n        if (this.imgHeight != null) {\r\n            setTimeout(() => {\r\n                this.setMaximumHeight(this.imgHeight);\r\n            });\r\n        }\r\n    }\r\n\r\n    show(urls: string[]): void {\r\n        this.urls = urls\r\n    }\r\n\r\n    setMaximumHeight(imgHeight: number) {\r\n        const imageElement: HTMLImageElement = this.elementRef.nativeElement.querySelector('img');\r\n\r\n        this.renderer.setStyle(imageElement, 'height', imgHeight + 'px');\r\n        this.renderer.setStyle(imageElement, 'width', 'auto');\r\n    }\r\n\r\n\r\n    prevSlide(carousel: any): void {\r\n        this.activeSlideIndex = (this.activeSlideIndex - 1 + this.urls.length) % this.urls.length;\r\n    }\r\n\r\n    nextSlide(carousel: any): void {\r\n        this.activeSlideIndex = (this.activeSlideIndex + 1) % this.urls.length;\r\n    }\r\n\r\n}\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { ProductService } from '../../../@core/services/product/product.service';\r\nimport { Product } from '../../../@core/models/product/product.model';\r\nimport { ToastState, UtilsService } from '../../../@core/services/utils.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormBasicInformationComponent } from '../shared/form-basic-information/form-basic-information.component';\r\nimport { FormVariantsComponent } from '../shared/form-variants/form-variants.component';\r\nimport { FormCareGuideComponent } from '../shared/form-care-guide/form-care-guide.component';\r\nimport { NbStepChangeEvent, NbStepperComponent } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'ngx-product-add',\r\n  templateUrl: './product-add.component.html',\r\n  styleUrls: ['./product-add.component.scss']\r\n})\r\nexport class ProductAddComponent {\r\n  @ViewChild(NbStepperComponent) stepper: NbStepperComponent;\r\n  @ViewChild(FormBasicInformationComponent) basicInformationCpn: FormBasicInformationComponent;\r\n  @ViewChild(FormVariantsComponent) variantCpn: FormVariantsComponent;\r\n  @ViewChild(FormCareGuideComponent) careGuideCpn: FormCareGuideComponent;\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private utilsService: UtilsService,\r\n    private router: Router\r\n  ) { }\r\n\r\n\r\n  onSubmit() {\r\n    if(!this.validate()) return;\r\n\r\n    const product: Product = this.mapFormValue()\r\n    this.productService.insert(product).subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.utilsService.updateToastState(new ToastState('Add Product Successfully!', 'success'))\r\n          this.router.navigate(['/admin/products/list'])\r\n        } else {\r\n          this.utilsService.updateToastState(new ToastState('Add Product Failed!', 'danger'))\r\n        }\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.utilsService.updateToastState(new ToastState('Add Product Failed!', 'danger'))\r\n      }  \r\n    )\r\n  }\r\n\r\n  validate(): boolean {\r\n    if (this.basicInformationCpn.productForm.invalid ||\r\n        this.variantCpn.variantsForm.invalid || \r\n        this.careGuideCpn.careGuideForm.invalid   \r\n    ) {\r\n      this.basicInformationCpn.productForm.markAllAsTouched();\r\n      this.variantCpn.variantsForm.markAllAsTouched();\r\n      this.careGuideCpn.careGuideForm.markAllAsTouched();\r\n      this.utilsService.updateToastState(new ToastState('Add Product Failed!', 'danger'))\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n  mapFormValue(): Product {\r\n    let product: Product = this.basicInformationCpn.getFormValue();\r\n    product.productCareGuide = this.careGuideCpn.getFormValue();\r\n    product.productVariants = this.variantCpn.getVariantsValue();\r\n    product.imageSizeGuide = this.variantCpn.getImgSizeGuideValue();\r\n    return product;\r\n  }\r\n\r\n  stepChange(event: NbStepChangeEvent) {\r\n    if(event.index == 1 && event.previouslySelectedIndex == 0) {\r\n      if (this.basicInformationCpn.productForm.invalid) {\r\n        this.basicInformationCpn.productForm.markAllAsTouched()\r\n        this.stepper.previous()\r\n        return;\r\n      }\r\n    } else if(event.index == 2 && event.previouslySelectedIndex == 1) {\r\n      if (this.variantCpn.variantsForm.invalid) {\r\n        this.variantCpn.variantsForm.markAllAsTouched()\r\n        this.stepper.previous()\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n","<nb-card>\r\n    <nb-card-body style=\"padding: 50px;\">\r\n        <nb-stepper orientation=\"horizontal\" (stepChange)=\"stepChange($event)\">\r\n            <nb-step label=\"Basic Information\" class=\"d-flex flex-column align-item-center\">\r\n                <ngx-form-basic-information></ngx-form-basic-information>\r\n\r\n                <div class=\"col-12  d-flex justify-content-center mt-3\">\r\n                    <button nbButton disabled nbStepperNext>prev</button>\r\n                    <button nbButton nbStepperNext class=\"ml-3\">next</button>\r\n                </div>\r\n            </nb-step>\r\n            <nb-step label=\"Variants\">\r\n                <ngx-form-variants></ngx-form-variants>\r\n\r\n                <div class=\"col-12 d-flex justify-content-center mt-3\">\r\n                    <button nbButton nbStepperPrevious>prev</button>\r\n                    <button nbButton nbStepperNext class=\"ml-3\">next</button>\r\n                </div>\r\n            </nb-step>\r\n            <nb-step label=\"Care Guide\">\r\n                <ngx-form-care-guide></ngx-form-care-guide>\r\n\r\n                <div class=\"col-12 d-flex justify-content-center mt-3\">\r\n                    <button nbButton nbStepperPrevious>prev</button>\r\n                    <button nbButton status=\"success\" type=\"submit\" class=\"ml-3\" (click)=\"onSubmit()\">PUBLISH</button>\r\n                </div>\r\n            </nb-step>\r\n        </nb-stepper>\r\n    </nb-card-body>\r\n</nb-card>","import { ToastState, UtilsService } from '../../../../@core/services/utils.service';\r\nimport { Component, OnInit, Input, ViewChild, TemplateRef, OnChanges, SimpleChanges } from \"@angular/core\";\r\nimport { CatalogService } from \"../../../../@core/services/product/product-catalog.service\";\r\nimport { NbWindowRef, NbWindowService } from \"@nebular/theme\";\r\n\r\n@Component({\r\n    selector: 'ngx-catalog-custom-action',\r\n    template: `\r\n        <div class=\"row no-gutters  d-flex justify-content-center\">\r\n            <div class=\"col-lg-6  d-flex justify-content-center\">\r\n                <button nbButton status=\"warning\" (click)=\"onEdit($event)\">\r\n                    <nb-icon icon=\"edit-2-outline\"></nb-icon>\r\n                </button>\r\n            </div>\r\n            <div class=\"col-lg-6  d-flex justify-content-center\">\r\n                <button nbButton status=\"danger\" (click)=\"onDelete()\">\r\n                    <nb-icon icon=\"trash-outline\"></nb-icon>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <ng-template #onDeleteTemplate let-data>\r\n            <nb-card>\r\n                <nb-card-header>\r\n                        Are you sure you want to delete this catalog?\r\n                </nb-card-header>\r\n                <nb-card-body>\r\n                    <button nbButton status=\"success\" class=\"mt-3\" (click)=\"deleteCatalog()\">\r\n                        CONFIRM\r\n                    </button>\r\n                </nb-card-body>\r\n            </nb-card>\r\n        </ng-template>\r\n    `,\r\n})\r\n\r\nexport class CustomCatalogActionComponent {\r\n\r\n    @Input() catalogId: number;\r\n    @ViewChild('onDeleteTemplate') deleteWindow: TemplateRef<any>;\r\n    deleteWindowRef: NbWindowRef;\r\n\r\n    constructor(\r\n        private catalogService: CatalogService,\r\n        private windowService: NbWindowService,\r\n        private utilsService: UtilsService\r\n    ) { }\r\n\r\n    onEdit(event: MouseEvent) {\r\n        this.catalogService.updateHandleAndRowData('edit', this.catalogId);\r\n    }\r\n\r\n    onDelete() {\r\n        this.deleteWindowRef = this.windowService\r\n            .open(this.deleteWindow, { title: `Delete Product` });\r\n    }\r\n\r\n    deleteCatalog() {\r\n        this.catalogService.delete(this.catalogId).subscribe(\r\n            data => {\r\n                if (data) {\r\n                    this.deleteWindowRef.close()\r\n                    this.catalogService.notifyCatalogChange();\r\n                    this.utilsService.updateToastState(new ToastState('Delete Catalog Successfully!', \"success\"))\r\n                } else {\r\n                    this.utilsService.updateToastState(new ToastState('Delete Catalog Failed!', \"danger\"))\r\n                }\r\n            },\r\n            error => {\r\n                this.utilsService.updateToastState(new ToastState('Delete Catalog Failed!', \"danger\"))\r\n                console.log(error);\r\n            }\r\n        )\r\n    }\r\n}","import { Component, OnChanges, OnInit, SimpleChanges, Output, EventEmitter } from '@angular/core';\r\nimport { DefaultFilter } from 'ng2-smart-table';\r\nimport { CatalogService } from '../../../../@core/services/product/product-catalog.service';\r\n\r\n@Component({\r\n    selector: 'ngx-custom-catalog-filter-actions',\r\n    template: `\r\n        <button nbButton fullWidth=\"\" status=\"primary\" \r\n            (click)=\"onAdd()\">\r\n            <nb-icon icon=\"plus-square-outline\"></nb-icon>\r\n        </button>\r\n    `,\r\n})\r\nexport class CustomCatalogFilterActionsComponent {\r\n\r\n    constructor(private catalogService: CatalogService) { }\r\n\r\n    onAdd() {\r\n        this.catalogService.updateHandleAndRowData('add');\r\n    }\r\n}","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { ViewCell } from \"ng2-smart-table\";\r\n\r\n@Component({\r\n    template: `\r\n        <img [src]=\"renderValue\" class='d-block mx-auto' alt=\"Catalog Image\" style=\"height: 75px; width: auto\"/>\r\n    `,\r\n})\r\n\r\nexport class CustomCatalogImageComponent implements ViewCell, OnInit {\r\n    renderValue: string;\r\n\r\n    @Input() value: string | number;\r\n    @Input() rowData: any;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.renderValue = this.value.toString()\r\n        \r\n    }\r\n}","import { Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ToastState, UtilsService } from \"../../../../@core/services/utils.service\";\r\nimport { CustomValidator } from \"../../../../@core/validators/custom-validator\";\r\nimport { Catalog } from \"../../../../@core/models/product/catalog.model\";\r\nimport { CatalogService } from \"../../../../@core/services/product/product-catalog.service\";\r\n\r\n@Component({\r\n  selector: \"ngx-product-catalog-add\",\r\n  templateUrl: \"./product-catalog-add.component.html\",\r\n  styleUrls: [\"./product-catalog-add.component.scss\"],\r\n})\r\nexport class ProductCatalogAddComponent {\r\n\r\n  addCatalogFormGroup: FormGroup;\r\n  uploadedFile: File\r\n  catalogs: Catalog[] = []\r\n\r\n  constructor(\r\n    private catalogService: CatalogService,\r\n    private formBuilder: FormBuilder,\r\n    private utilsService: UtilsService,\r\n  ) {\r\n    this.addCatalogFormGroup = this.formBuilder.group({\r\n      name: ['', [CustomValidator.notBlank, Validators.maxLength(100)]],\r\n      description: ['', [CustomValidator.notBlank, Validators.maxLength(500)]],\r\n      parent: [null],\r\n      image: [, [Validators.required]]\r\n    })\r\n    this.catalogService.findAll().subscribe(data => {\r\n      this.catalogs = data.filter(cata => !cata.hasParent)\r\n    })\r\n  }\r\n\r\n  selectFile(event: any) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n\r\n    if (inputElement.files && inputElement.files.length > 0) {\r\n      this.uploadedFile = inputElement.files[0];\r\n      this.addCatalogFormGroup.get('image').setValue('uploaded')\r\n      const reader = new FileReader();\r\n      reader.onload = (event: any) => {\r\n        this.uploadedFile['dataUrl'] = event.target.result;\r\n      };\r\n      reader.readAsDataURL(this.uploadedFile);\r\n    }\r\n  }\r\n\r\n  createCatalog() {\r\n\r\n    if (this.addCatalogFormGroup.invalid) {\r\n      this.addCatalogFormGroup.markAllAsTouched();\r\n      this.utilsService.updateToastState(new ToastState('Add Catalog Failed!', \"danger\"))\r\n      return;\r\n    }\r\n\r\n    let catalog: Catalog = new Catalog()\r\n    catalog.catalogName = this.addCatalogFormGroup.get('name').value\r\n    catalog.description = this.addCatalogFormGroup.get('description').value\r\n    catalog.parentCatalog = this.addCatalogFormGroup.get('parent').value\r\n    if(catalog.parentCatalog != null) {\r\n      catalog.parentCatalog = {\r\n        catalogId: catalog.parentCatalog.catalogId,\r\n        catalogName: catalog.parentCatalog.catalogName,\r\n        image: catalog.parentCatalog.image\r\n      }\r\n    }\r\n    console.log(catalog);\r\n    \r\n    this.catalogService.insert(catalog, this.uploadedFile).subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.reset()\r\n          this.catalogService.notifyCatalogChange();\r\n          this.utilsService.updateToastState(new ToastState('Add Catalog Successfully!', \"success\"))\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  reset() {\r\n    this.addCatalogFormGroup.reset();\r\n    this.uploadedFile = null;\r\n  }\r\n}\r\n","<nb-card [formGroup]=\"addCatalogFormGroup\">\r\n    <nb-card-header>\r\n        Add A New Catalog\r\n    </nb-card-header>\r\n    <nb-card-body>\r\n        <div class=\"row\">\r\n            <div class=\"col-12 no-gutters px-0\">\r\n                <input type=\"text\" nbInput fullWidth placeholder=\"Catalog Name\" formControlName=\"name\" class=\"mb-1\">\r\n                <div class=\"alert alert-danger mt-0 mb-3\"\r\n                    *ngIf=\"addCatalogFormGroup.get('name').invalid && (addCatalogFormGroup.get('name').dirty || addCatalogFormGroup.get('name').touched)\">\r\n                    <div *ngIf=\"addCatalogFormGroup.get('name').errors['notblank']\">\r\n                        Catalog Name is required\r\n                    </div>\r\n                    <div *ngIf=\"addCatalogFormGroup.get('name').errors['maxlength']\">\r\n                        Catalog Name must not exceed 100 characters\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 no-gutters px-0 mt-3\">\r\n                <textarea rows=\"3\" nbInput fullWidth placeholder=\"Short Description\" formControlName=\"description\"\r\n                    style=\"resize: none\"></textarea>\r\n                <div class=\"alert alert-danger mt-0 mb-3\"\r\n                    *ngIf=\"addCatalogFormGroup.get('description').invalid && (addCatalogFormGroup.get('description').dirty || addCatalogFormGroup.get('description').touched)\">\r\n                    <div *ngIf=\"addCatalogFormGroup.get('description').errors['notblank']\">\r\n                        Catalog description is required\r\n                    </div>\r\n                    <div *ngIf=\"addCatalogFormGroup.get('description').errors['maxlength']\">\r\n                        Catalog description must not exceed 500 characters\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 no-gutters px-0 mt-3\">\r\n                <nb-select fullWidth selected=\"1\" placeholder=\"Parent\" formControlName=\"parent\">\r\n                    <nb-select-label>\r\n                        Parent: {{ addCatalogFormGroup.get('parent').value !== null ? addCatalogFormGroup.get('parent').value['catalogName'] : null}}\r\n                    </nb-select-label>\r\n                    <nb-option>Reset</nb-option>\r\n                    <nb-option *ngFor=\"let cata of catalogs\" [value]=\"cata\">{{cata.catalogName}}</nb-option>\r\n                </nb-select>\r\n            </div>\r\n            <div class=\"col-12 no-gutters px-0 mt-3\">\r\n                <div class=\"input-group\">\r\n                    <div class=\"input-group-prepend\">\r\n                        <span class=\"input-group-text\">Upload</span>\r\n                    </div>\r\n                    <div class=\"custom-file\">\r\n                        <input type=\"file\" mutliple class=\"custom-file-input\" accept=\"image/png, image/jpeg\"\r\n                            (change)=\"selectFile($event)\">\r\n                        <label class=\"custom-file-label\">Choose images</label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"alert alert-danger mt-1 mb-3\"\r\n                    *ngIf=\"addCatalogFormGroup.get('image').invalid && (addCatalogFormGroup.get('image').dirty || addCatalogFormGroup.get('image').touched)\">\r\n                    <div *ngIf=\"addCatalogFormGroup.get('image').errors['required']\">\r\n                        Catalog Image is required\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 mt-2\">\r\n                <div class=\"row d-flex justify-content-center align-item-center\">\r\n                    <div class=\"col-12 d-flex justify-content-center align-item-center border border-primary\"\r\n                        style=\"height: 275px\">\r\n                        <ng-container *ngIf=\"uploadedFile\">\r\n                            <img [src]=\"uploadedFile?.dataUrl\" class=\"d-block w-100\"\r\n                                alt=\"Slide Image\" style=\"max-height: 300px; object-fit: contain;\">\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </nb-card-body>\r\n    <nb-card-footer>\r\n        <div class=\"d-flex justify-content-between\">\r\n            <button nbButton status=\"success\" (click)=\"createCatalog()\">Create</button>\r\n        </div>\r\n    </nb-card-footer>\r\n</nb-card>","import { CATALOG_IMAGE_DIRECTORY } from '../../../../@core/utils/image-storing-directory';\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ToastState, UtilsService } from \"../../../../@core/services/utils.service\";\r\nimport { CustomValidator } from \"../../../../@core/validators/custom-validator\";\r\nimport { CatalogService } from \"../../../../@core/services/product/product-catalog.service\";\r\nimport { Catalog } from \"../../../../@core/models/product/catalog.model\";\r\nimport { forkJoin } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"ngx-product-catalog-edit\",\r\n  templateUrl: \"./product-catalog-edit.component.html\",\r\n  styleUrls: [\"./product-catalog-edit.component.scss\"],\r\n})\r\nexport class ProductCatalogEditComponent implements OnInit {\r\n\r\n  editCatalogFormGroup: FormGroup;\r\n  uploadedFile: File = null\r\n  isSelectedFile: boolean = false;\r\n  catalogs = []\r\n  isShowParent: boolean = false;\r\n\r\n  constructor(\r\n    private catalogService: CatalogService,\r\n    private formBuilder: FormBuilder,\r\n    private utilsService: UtilsService,\r\n  ) {\r\n    this.editCatalogFormGroup = this.formBuilder.group({\r\n      id: [],\r\n      name: ['', [CustomValidator.notBlank, Validators.maxLength(100)]],\r\n      description: ['', [CustomValidator.notBlank, Validators.maxLength(500)]],\r\n      parent: [null],\r\n      image: [, [Validators.required]]\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log(\"init\");\r\n\r\n    this.catalogService.rowData$.subscribe((catalogId) => {\r\n      if (catalogId) {\r\n        this.editCatalogFormGroup.get('id').setValue(catalogId);\r\n        const catalogs$ = this.catalogService.findAll();\r\n        const catalog$ = this.catalogService.findById(+catalogId);\r\n\r\n        forkJoin([catalogs$, catalog$]).subscribe(\r\n          ([catalogsData, catalogData]) => {\r\n            if (this.catalogs.length == 0) {\r\n              this.catalogs = catalogsData.filter(cata => !cata.hasParent)\r\n            }\r\n\r\n            if (catalogData.parentCatalog != null) {\r\n              const parentCata = this.catalogs.find(cata => cata.catalogId == catalogData.parentCatalog.catalogId)\r\n              this.editCatalogFormGroup.get('parent').setValue(parentCata)\r\n\r\n              this.isShowParent = true\r\n            } else {\r\n              this.editCatalogFormGroup.get('parent').setValue(null)\r\n              this.isShowParent = (catalogData.childCatalogs.length == 0)\r\n            }\r\n\r\n            this.editCatalogFormGroup.get('name').setValue(catalogData.catalogName)\r\n            this.editCatalogFormGroup.get('description').setValue(catalogData.description)\r\n            this.editCatalogFormGroup.get('image').setValue(CATALOG_IMAGE_DIRECTORY + catalogData.image.imageUrl)\r\n            console.log(this.editCatalogFormGroup.get('image').value);\r\n            \r\n          }\r\n        )\r\n      }\r\n    });\r\n  }\r\n\r\n  fillFormValues() { }\r\n\r\n  selectFile(event: any) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n\r\n    if (inputElement.files && inputElement.files.length > 0) {\r\n      this.isSelectedFile = true\r\n\r\n      this.uploadedFile = inputElement.files[0];\r\n      this.editCatalogFormGroup.get('image').setValue('uploaded')\r\n      const reader = new FileReader();\r\n      reader.onload = (event: any) => {\r\n        this.uploadedFile['dataUrl'] = event.target.result;\r\n      };\r\n      reader.readAsDataURL(this.uploadedFile);\r\n    }\r\n  }\r\n\r\n  editCatalog() {\r\n    if (this.editCatalogFormGroup.invalid) {\r\n      this.editCatalogFormGroup.markAllAsTouched();\r\n      this.utilsService.updateToastState(new ToastState('Edit Catalog Failed!', 'danger'))\r\n      return;\r\n    }\r\n\r\n    let catalog: Catalog = new Catalog()\r\n    catalog.catalogId = this.editCatalogFormGroup.get('id').value\r\n    catalog.catalogName = this.editCatalogFormGroup.get('name').value\r\n    catalog.description = this.editCatalogFormGroup.get('description').value\r\n    catalog.parentCatalog = this.editCatalogFormGroup.get('parent').value\r\n    console.log(catalog);\r\n\r\n    this.catalogService.update(catalog, this.uploadedFile).subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.utilsService.updateToastState(new ToastState('Edit Catalog Successfully!', \"success\"))\r\n          this.catalogService.updateHandleAndRowData('add');\r\n          this.catalogService.notifyCatalogChange();\r\n        }\r\n      },\r\n      error => {\r\n        console.log(error)\r\n        this.utilsService.updateToastState(new ToastState('Edit Catalog Failed!', \"danger\"))\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<nb-card [formGroup]=\"editCatalogFormGroup\">\r\n    <nb-card-header>\r\n        Edit Catalog Id: {{this.editCatalogFormGroup.get('id').value !== null ? this.editCatalogFormGroup.get('id').value : ''}}\r\n    </nb-card-header>\r\n    <nb-card-body>\r\n        <div class=\"row\">\r\n            <div class=\"col-12 no-gutters px-0\">\r\n                <input type=\"text\" nbInput fullWidth placeholder=\"Catalog Name\" formControlName=\"name\" class=\"mb-1\">\r\n                <div class=\"alert alert-danger mt-0 mb-3\"\r\n                    *ngIf=\"editCatalogFormGroup.get('name').invalid && (editCatalogFormGroup.get('name').dirty || editCatalogFormGroup.get('name').touched)\">\r\n                    <div *ngIf=\"editCatalogFormGroup.get('name').errors['notblank']\">\r\n                        Catalog Name is required\r\n                    </div>\r\n                    <div *ngIf=\"editCatalogFormGroup.get('name').errors['maxlength']\">\r\n                        Catalog Name must not exceed 100 characters\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 no-gutters px-0 mt-3\">\r\n                <textarea rows=\"3\" nbInput fullWidth placeholder=\"Short Description\" formControlName=\"description\"\r\n                    style=\"resize: none\"></textarea>\r\n                <div class=\"alert alert-danger mt-0 mb-3\"\r\n                    *ngIf=\"editCatalogFormGroup.get('description').invalid && (editCatalogFormGroup.get('description').dirty || editCatalogFormGroup.get('description').touched)\">\r\n                    <div *ngIf=\"editCatalogFormGroup.get('description').errors['notblank']\">\r\n                        Catalog description is required\r\n                    </div>\r\n                    <div *ngIf=\"editCatalogFormGroup.get('description').errors['maxlength']\">\r\n                        Catalog description must not exceed 500 characters\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngIf=\"isShowParent\">\r\n                <div class=\"col-12 no-gutters px-0 mt-3\">\r\n                    <nb-select fullWidth selected=\"1\" placeholder=\"Parent\" formControlName=\"parent\">\r\n                        <nb-select-label>\r\n                            Parent: {{ editCatalogFormGroup.get('parent').value !== null ? editCatalogFormGroup.get('parent').value['catalogName'] : null}}\r\n                        </nb-select-label>\r\n                        <nb-option *ngFor=\"let cata of catalogs\" [value]=\"cata\">{{cata.catalogName}}</nb-option>\r\n                    </nb-select>\r\n                </div>\r\n            </ng-container>\r\n            <div class=\"col-12 no-gutters px-0 mt-3\">\r\n                <div class=\"input-group\">\r\n                    <div class=\"input-group-prepend\">\r\n                        <span class=\"input-group-text\">Upload</span>\r\n                    </div>\r\n                    <div class=\"custom-file\">\r\n                        <input type=\"file\" mutliple class=\"custom-file-input\" accept=\"image/png, image/jpeg\"\r\n                            (change)=\"selectFile($event)\">\r\n                        <label class=\"custom-file-label\">Choose images</label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"alert alert-danger mt-1 mb-3\"\r\n                    *ngIf=\"editCatalogFormGroup.get('image').invalid && (editCatalogFormGroup.get('image').dirty || editCatalogFormGroup.get('image').touched)\">\r\n                    <div *ngIf=\"editCatalogFormGroup.get('image').errors['required']\">\r\n                        Catalog Image is required\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 mt-1\">\r\n                <img [src]=\"isSelectedFile ? (uploadedFile ? uploadedFile['dataUrl'] : '' ) : editCatalogFormGroup.get('image').value\" class=\"d-block w-50 mx-auto mt-3\" alt=\"Slide Image\">\r\n            </div>\r\n        </div>\r\n    </nb-card-body>\r\n    <nb-card-footer>\r\n        <div class=\"d-flex justify-content-between\">\r\n            <button nbButton status=\"success\" (click)=\"editCatalog()\">SAVE</button>\r\n        </div>\r\n    </nb-card-footer>\r\n</nb-card>","import { CATALOG_IMAGE_DIRECTORY } from '../../../@core/utils/image-storing-directory';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs'\r\nimport { Component, Input, OnInit, TemplateRef, ViewChild } from \"@angular/core\";\r\nimport { LocalDataSource } from \"ng2-smart-table\";\r\nimport { Catalog } from \"../../../@core/models/product/catalog.model\";\r\nimport { CatalogService } from \"../../../@core/services/product/product-catalog.service\";\r\nimport { ToastState, UtilsService } from \"../../../@core/services/utils.service\";\r\nimport { NbSortDirection, NbSortRequest, NbTreeGridDataSource, NbTreeGridDataSourceBuilder, NbWindowRef, NbWindowService } from '@nebular/theme';\r\nimport { CapitalizePipe } from '../../../@theme/pipes';\r\n\r\n\r\ninterface TreeNode<T> {\r\n  data: T;\r\n  children?: TreeNode<T>[];\r\n  expanded?: boolean;\r\n}\r\n\r\ninterface FSEntry {\r\n  catalogId: number;\r\n  catalogName: string;\r\n  image: string;\r\n  description: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: \"ngx-product-catalog\",\r\n  templateUrl: \"./product-catalog.component.html\",\r\n  styleUrls: [\"./product-catalog.component.scss\"],\r\n})\r\nexport class ProductCatalogComponent implements OnInit {\r\n  private unsubscribe = new Subject<void>();\r\n  state: string = \"add\"; // default\r\n\r\n  // for deleting multi catalog\r\n  @ViewChild('onDeleteTemplate') deleteWindow: TemplateRef<any>;\r\n  selectedCatalogs: Catalog[] = []\r\n  deleteWindowRef: NbWindowRef;\r\n  loadedCatalogs: boolean = false;\r\n\r\n  // for loading table\r\n  numberOfItem: number = localStorage.getItem('itemPerPage') != null ? +localStorage.getItem('itemPerPage') : 10; // default\r\n  \r\n  // table\r\n  customColumn = 'Image';\r\n  defaultColumns = [ 'catalogId', 'catalogName', 'description' ];\r\n  actionColumn = 'Action'\r\n  allColumns = [ this.customColumn, ...this.defaultColumns, this.actionColumn ];\r\n  sortColumn: string;\r\n  sortDirection: NbSortDirection = NbSortDirection.NONE;\r\n  dataSource: NbTreeGridDataSource<FSEntry>;\r\n\r\n  constructor(\r\n    private dataSourceBuilder: NbTreeGridDataSourceBuilder<FSEntry>,\r\n    private catalogService: CatalogService,\r\n    private utilsService: UtilsService,\r\n    private windowService: NbWindowService,\r\n  ) { \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.catalogService.catalogChange$\r\n      .pipe(takeUntil(this.unsubscribe))\r\n      .subscribe(() => {\r\n        this.loadCatalogs();\r\n      });\r\n    this.loadCatalogs()\r\n\r\n    this.catalogService.state$.subscribe((state) => {\r\n      this.state = state;\r\n    })\r\n  }\r\n\r\n  loadCatalogs() {\r\n    this.catalogService.findAll().subscribe(\r\n      data => {\r\n        const mappedCatalogs: TreeNode<FSEntry>[] = this.mapTableValue(data);\r\n        this.dataSource = this.dataSourceBuilder.create(mappedCatalogs);\r\n        this.loadedCatalogs = true\r\n      }\r\n    )\r\n  }\r\n\r\n  updateSort(sortRequest: NbSortRequest): void {\r\n    this.sortColumn = sortRequest.column;\r\n    this.sortDirection = sortRequest.direction;\r\n  }\r\n\r\n  getSortDirection(column: string): NbSortDirection {\r\n    if (this.sortColumn === column) {\r\n      return this.sortDirection;\r\n    }\r\n    return NbSortDirection.NONE;\r\n  }\r\n\r\n  getShowOn(index: number) {\r\n    const minWithForMultipleColumns = 400;\r\n    const nextColumnStep = 100;\r\n    return minWithForMultipleColumns + (nextColumnStep * index);\r\n  }\r\n\r\n  mapTableValue(catalogs: Catalog[]): TreeNode<FSEntry>[] {\r\n    let treeNodes: TreeNode<FSEntry>[] = []\r\n    for(let catalog of catalogs) {\r\n      if(catalog.childCatalogs.length == 0) {\r\n        treeNodes.push(this.mapSingleCatalogToNode(catalog))\r\n      } else {\r\n        let childrenTreeNodes: TreeNode<FSEntry>[] = []\r\n        for(let subCatalog of catalog.childCatalogs) {\r\n          childrenTreeNodes.push(this.mapSingleCatalogToNode(subCatalog))\r\n        }\r\n        treeNodes.push(this.mapSingleCatalogToNode(catalog, childrenTreeNodes, true))\r\n      }\r\n    }\r\n    return treeNodes;\r\n  }\r\n\r\n  mapSingleCatalogToNode(catalog: Catalog, children?: TreeNode<FSEntry>[], expanded?: boolean): TreeNode<FSEntry> {\r\n    return {\r\n      data: {\r\n        catalogId: catalog.catalogId,\r\n        image: (catalog.image == null) ? \"\" : CATALOG_IMAGE_DIRECTORY + catalog.image.imageUrl,\r\n        description: catalog.description.length <= 75 ? catalog.description : catalog.description.substring(0, 75) + '...',\r\n        catalogName: catalog.catalogName\r\n      },\r\n      children: children != null ? children : null,\r\n      expanded: expanded != null\r\n    }\r\n  }\r\n\r\n  numberOfItemsChange() {\r\n    localStorage.setItem('itemPerPage', this.numberOfItem.toString())\r\n  }\r\n\r\n  onRowSelect(event: any): void {\r\n    this.selectedCatalogs = (event.selected) as Catalog[]\r\n  }\r\n\r\n  openDeleteWindow() {\r\n    this.deleteWindowRef = this.windowService\r\n      .open(this.deleteWindow, { title: `Delete Catalogs` });\r\n  }\r\n\r\n  onDeleteCatalogs() {\r\n    this.catalogService.deleteCatalogs(this.selectedCatalogs).subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.selectedCatalogs = []\r\n          this.deleteWindowRef.close()\r\n          this.catalogService.notifyCatalogChange();\r\n          this.utilsService.updateToastState(new ToastState('Delete The Catalogs Successfully!', \"success\"))\r\n        } else {\r\n          this.utilsService.updateToastState(new ToastState('Delete The Catalogs Failed!', \"danger\"))\r\n        }\r\n      },\r\n      error => {\r\n        this.utilsService.updateToastState(new ToastState('Delete The Catalogs Failed!', \"danger\"))\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n}\r\n\r\n","<div class=\"row\">\r\n    <div class=\"col-lg-7 col-md-12\">\r\n        <ng-container *ngIf=\"loadedCatalogs; else loadingBlock\">\r\n            <nb-card>\r\n                <nb-card-header class=\"d-flex justify-content-between align-items-center\">\r\n                    <h6>\r\n                        Catalog List\r\n                    </h6>\r\n                </nb-card-header>\r\n                <nb-card-body class=\"mt-3\">\r\n                    <table [nbTreeGrid]=\"dataSource\" [nbSort]=\"dataSource\" (sort)=\"updateSort($event)\">\r\n                        <tr nbTreeGridHeaderRow *nbTreeGridHeaderRowDef=\"allColumns\"></tr>\r\n                        <tr nbTreeGridRow *nbTreeGridRowDef=\"let row; columns: allColumns\"></tr>\r\n\r\n                        <ng-container [nbTreeGridColumnDef]=\"customColumn\">\r\n                            <th nbTreeGridHeaderCell *nbTreeGridHeaderCellDef width=\"20%\">{{customColumn}}</th>\r\n                            <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-12 d-flex justify-content-between align-items-center\">\r\n                                        <nb-tree-grid-row-toggle *ngIf=\"row.children !== undefined\"\r\n                                            [expanded]=\"row.expanded\"> </nb-tree-grid-row-toggle>\r\n                                        <img [src]=\"row.data.image\" alt=\"\" [class]=\"'d-block w-100'\"\r\n                                            [class.mt-3]=\"row.children !== undefined\">\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                        </ng-container>\r\n\r\n                        <ng-container *ngFor=\"let column of defaultColumns; let index = index\"\r\n                            [nbTreeGridColumnDef]=\"column\" [showOn]=\"getShowOn(index)\">\r\n                            <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(column)\" *nbTreeGridHeaderCellDef\r\n                                [width]=\"index !== 2 ? '20%' : '30%'\">\r\n                                {{column}}\r\n                            </th>\r\n                            <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{row.data[column] || '-'}}</td>\r\n                        </ng-container>\r\n\r\n                        <ng-container [nbTreeGridColumnDef]=\"actionColumn\">\r\n                            <th nbTreeGridHeaderCell *nbTreeGridHeaderCellDef width=\"15%\">\r\n                                <ngx-custom-catalog-filter-actions></ngx-custom-catalog-filter-actions>\r\n                            </th>\r\n                            <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">\r\n                                <ngx-catalog-custom-action [catalogId]=\"row.data.catalogId\"></ngx-catalog-custom-action>\r\n                            </td>\r\n                        </ng-container>\r\n                    </table>\r\n                </nb-card-body>\r\n            </nb-card>\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"col-lg-5 col-md-12\">\r\n        <ng-container *ngIf=\"state === 'add'\">\r\n            <ngx-product-catalog-add></ngx-product-catalog-add>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"state === 'edit'\">\r\n            <ngx-product-catalog-edit></ngx-product-catalog-edit>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #loadingBlock>\r\n    <nb-card [size]=\"'small'\" [nbSpinner]=\"!loadedCatalogs\" nbSpinnerSize=\"large\" nbSpinnerStatus=\"primary\">\r\n    </nb-card>\r\n</ng-template>","import { NbWindowRef, NbWindowService } from '@nebular/theme';\r\nimport { Component, ViewChild, OnInit, Input, TemplateRef } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ViewCell } from \"ng2-smart-table\";\r\nimport { ProductCouponService } from \"../../../../@core/services/product/product-coupon.service\";\r\nimport { ToastState, UtilsService } from '../../../../@core/services/utils.service';\r\n\r\n@Component({\r\n    selector: 'ngx-custom-action',\r\n    template: `\r\n        <div class=\"row no-gutters\">\r\n            <div class=\"col-lg-6  d-flex justify-content-center\">\r\n                <button nbButton status=\"warning\" (click)=\"onEdit()\">\r\n                    <nb-icon icon=\"edit-2-outline\"></nb-icon>\r\n                </button>\r\n            </div>\r\n            <div class=\"col-lg-6  d-flex justify-content-center\">\r\n                <button nbButton status=\"danger\" (click)=\"onDelete($event)\">\r\n                    <nb-icon icon=\"trash-outline\"></nb-icon>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <ng-template #onDeleteTemplate let-data>\r\n            <nb-card>\r\n                <nb-card-header>\r\n                        Are you sure you want to delete this coupon?\r\n                </nb-card-header>\r\n                <nb-card-body>\r\n                    <button nbButton status=\"success\" class=\"mt-3\" (click)=\"deleteCoupon()\">\r\n                        CONFIRM\r\n                    </button>\r\n                </nb-card-body>\r\n            </nb-card>\r\n        </ng-template>\r\n    `,\r\n})\r\n\r\nexport class CustomCouponActionComponent implements ViewCell {\r\n    renderValue: string;\r\n\r\n    @Input() value: string | number;\r\n    @Input() rowData: any;\r\n\r\n    @ViewChild('onDeleteTemplate') deleteWindow: TemplateRef<any>;\r\n    deleteWindowRef: NbWindowRef;\r\n\r\n    constructor(\r\n        private couponService: ProductCouponService,\r\n        private windowService: NbWindowService,\r\n        private utilsService: UtilsService,\r\n    ) {\r\n    }\r\n\r\n    onEdit() {\r\n        this.couponService.updateHandleAndRowData('edit', this.rowData);\r\n    }\r\n\r\n    onDelete(event: any) {\r\n        this.deleteWindowRef = this.windowService\r\n            .open(this.deleteWindow, { title: `Delete Coupon` });\r\n    }\r\n\r\n    deleteCoupon() {\r\n        this.couponService.delete(this.rowData.couponId).subscribe(\r\n            data => {\r\n                this.deleteWindowRef.close()\r\n                this.couponService.notifyCouponChange();\r\n                this.utilsService.updateToastState(new ToastState('Delete Coupon Successfully!', \"success\"))\r\n            },\r\n            error => {\r\n                this.utilsService.updateToastState(new ToastState('Delete Coupon Failed!', \"danger\"))\r\n                console.log(error);\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n}","import { Component, OnChanges, OnInit, SimpleChanges, Output, EventEmitter } from '@angular/core';\r\nimport { DefaultFilter } from 'ng2-smart-table';\r\nimport { ProductCouponService } from '../../../../@core/services/product/product-coupon.service';\r\n\r\n@Component({\r\n    template: `\r\n        <button nbButton fullWidth=\"\" status=\"primary\" \r\n            (click)=\"onAdd()\">\r\n            <nb-icon icon=\"plus-square-outline\"></nb-icon>\r\n        </button>\r\n    `,\r\n})\r\nexport class CustomCouponFilterActionsComponent extends DefaultFilter implements OnInit, OnChanges {\r\n\r\n    constructor(private couponService: ProductCouponService) {\r\n        super()\r\n    }\r\n\r\n    onAdd() {\r\n        this.couponService.updateHandleAndRowData('add');\r\n    }\r\n\r\n    ngOnInit() {let x}\r\n\r\n    ngOnChanges(changes: SimpleChanges) {let x}\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ProductCouponService } from \"../../../../@core/services/product/product-coupon.service\";\r\nimport { ToastState, UtilsService } from \"../../../../@core/services/utils.service\";\r\nimport { CustomValidator } from \"../../../../@core/validators/custom-validator\";\r\nimport { Coupon } from \"../../../../@core/models/coupon/coupon.model\";\r\n\r\n@Component({\r\n  selector: \"ngx-products-coupon-add\",\r\n  templateUrl: \"./product-coupon-add.component.html\",\r\n  styleUrls: [\"./product-coupon-add.component.scss\"],\r\n})\r\nexport class ProductCouponAddComponent implements OnInit {\r\n  selectedDiscountType;\r\n  addCouponFormGroup: FormGroup;\r\n\r\n  constructor(\r\n    private couponService: ProductCouponService,\r\n    private formBuilder: FormBuilder,\r\n    private utilsService: UtilsService,\r\n  ) {\r\n    this.addCouponFormGroup = this.formBuilder.group({\r\n      code: ['', [CustomValidator.notBlank, Validators.maxLength(20)]],\r\n      description: ['', [CustomValidator.notBlank, Validators.maxLength(50)]],\r\n      discountType: ['', [Validators.required]],\r\n      discountValue: [, [Validators.required, CustomValidator.maxCouponValue]],\r\n      startedDate: [, Validators.required],\r\n      expiredDate: [, Validators.required]\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    let x\r\n  }\r\n\r\n  submitAddCoupon() {\r\n    if (this.addCouponFormGroup.invalid) {\r\n      this.addCouponFormGroup.markAllAsTouched();\r\n      this.utilsService.updateToastState(new ToastState('Add Coupon Failed!', \"danger\"))\r\n      return;\r\n    }\r\n\r\n    const coupon = this.mapFormValue()\r\n    console.log(coupon);\r\n\r\n    this.couponService.insert(coupon).subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.utilsService.updateToastState(new ToastState('Add Coupon Successfully!', \"success\"))\r\n          this.couponService.notifyCouponChange()\r\n          this.addCouponFormGroup.reset()\r\n        }\r\n      },\r\n      error => {\r\n        console.log(error.error.message)\r\n        this.utilsService.updateToastState(new ToastState('Add Coupon Failed!', \"danger\"))\r\n      }\r\n    )\r\n  }\r\n\r\n  mapFormValue(): Coupon {\r\n    let coupon: any = new Coupon();\r\n    coupon.code = this.addCouponFormGroup.get('code').value\r\n    coupon.discount = this.addCouponFormGroup.get('discountValue').value\r\n    coupon.description = this.addCouponFormGroup.get('description').value\r\n    coupon.couponType = this.couponService.findCouponTypeById(this.addCouponFormGroup.get('discountType').value == 'Fixed' ? 1 : 2);\r\n    coupon.startedAt = this.addCouponFormGroup.get('startedDate').value\r\n    coupon.expiredAt = this.addCouponFormGroup.get('expiredDate').value\r\n    return coupon;\r\n  }\r\n}","<form [formGroup]=\"addCouponFormGroup\" (ngSubmit)=\"submitAddCoupon()\">\r\n    <nb-card>\r\n        <nb-card-header>\r\n            Add A New Coupon\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <input type=\"text\" nbInput fullWidth placeholder=\"Coupon Code\" formControlName=\"code\">\r\n            <div class=\"alert alert-danger mt-0 mb-3\"\r\n                *ngIf=\"addCouponFormGroup.get('code').invalid && (addCouponFormGroup.get('code').dirty || addCouponFormGroup.get('code').touched)\">\r\n                <div *ngIf=\"addCouponFormGroup.get('code').errors['notblank']\">\r\n                    Coupon code is required\r\n                </div>\r\n\r\n                <div *ngIf=\"addCouponFormGroup.get('code').errors['maxlength']\">\r\n                    Coupon Name must not exceed 20 characters\r\n                </div>\r\n            </div>\r\n\r\n            <textarea rows=\"3\" nbInput fullWidth placeholder=\"Short Description\" formControlName=\"description\"\r\n                style=\"resize: none\"></textarea>\r\n            <div class=\"alert alert-danger mt-0 mb-3\"\r\n                *ngIf=\"addCouponFormGroup.get('description').invalid && (addCouponFormGroup.get('description').dirty || addCouponFormGroup.get('description').touched)\">\r\n                <div *ngIf=\"addCouponFormGroup.get('description').errors['notblank']\">\r\n                    Coupon description is required\r\n                </div>\r\n\r\n                <div *ngIf=\"addCouponFormGroup.get('description').errors['maxlength']\">\r\n                    Coupon description must not exceed 50 characters\r\n                </div>\r\n            </div>\r\n\r\n            <nb-select fullWidth selected=\"1\" placeholder=\"Discount Type\" formControlName=\"discountType\">\r\n                <nb-select-label>\r\n                    Type: {{ addCouponFormGroup.get('discountType').value }}\r\n                </nb-select-label>\r\n                <nb-option value=\"Fixed\">Fixed</nb-option>\r\n                <nb-option value=\"Percent\">Percent</nb-option>\r\n            </nb-select>\r\n            <div class=\"alert alert-danger mt-0 mb-3\"\r\n                *ngIf=\"addCouponFormGroup.get('discountType').invalid && (addCouponFormGroup.get('discountType').dirty || addCouponFormGroup.get('discountType').touched)\">\r\n                <div *ngIf=\"addCouponFormGroup.get('discountType').errors['required']\">\r\n                    Discount Type is required\r\n                </div>\r\n            </div>\r\n\r\n            <input type=\"number\" nbInput fullWidth placeholder=\"Discount Value\" formControlName=\"discountValue\">\r\n            <div class=\"alert alert-danger mt-0 mb-3\"\r\n                *ngIf=\"addCouponFormGroup.get('discountValue').invalid && (addCouponFormGroup.get('discountValue').dirty || addCouponFormGroup.get('discountValue').touched)\">\r\n                <div *ngIf=\"addCouponFormGroup.get('discountValue').errors['required']\">\r\n                    Discount Value is required\r\n                </div>\r\n\r\n                <div *ngIf=\"addCouponFormGroup.get('discountValue').errors['max']\">\r\n                    Discount Value must not be larger than 100%\r\n                </div>\r\n            </div>\r\n\r\n            <input nbInput fullWidth placeholder=\"Start Date\" [nbDatepicker]=\"startDate\" formControlName=\"startedDate\">\r\n            <nb-datepicker #startDate></nb-datepicker>\r\n            <div class=\"alert alert-danger mt-2 mb-3\"\r\n                *ngIf=\"addCouponFormGroup.get('startedDate').invalid && (addCouponFormGroup.get('startedDate').dirty || addCouponFormGroup.get('startedDate').touched)\">\r\n                <div *ngIf=\"addCouponFormGroup.get('startedDate').errors['required']\">\r\n                    Start Date is required\r\n                </div>\r\n            </div>\r\n            <input nbInput fullWidth placeholder=\"Expire Date\" [nbDatepicker]=\"expireDate\" formControlName=\"expiredDate\">\r\n            <nb-datepicker #expireDate></nb-datepicker>\r\n            <div class=\"alert alert-danger mt-2 mb-3\"\r\n                *ngIf=\"addCouponFormGroup.get('expiredDate').invalid && (addCouponFormGroup.get('expiredDate').dirty || addCouponFormGroup.get('expiredDate').touched)\">\r\n                <div *ngIf=\"addCouponFormGroup.get('expiredDate').errors['required']\">\r\n                    Expire Date is required\r\n                </div>\r\n            </div>\r\n        </nb-card-body>\r\n        <nb-card-footer>\r\n            <div class=\"d-flex justify-content-between\">\r\n                <button nbButton status=\"success\">Create</button>\r\n            </div>\r\n        </nb-card-footer>\r\n    </nb-card>\r\n</form>","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ProductCouponService } from \"../../../../@core/services/product/product-coupon.service\";\r\nimport { ToastState, UtilsService } from \"../../../../@core/services/utils.service\";\r\nimport { CustomValidator } from \"../../../../@core/validators/custom-validator\";\r\nimport { Coupon } from \"../../../../@core/models/coupon/coupon.model\";\r\n\r\n@Component({\r\n  selector: \"ngx-products-coupon-edit\",\r\n  templateUrl: \"./product-coupon-edit.component.html\",\r\n  styleUrls: [\"./product-coupon-edit.component.scss\"],\r\n})\r\nexport class ProductCouponEditComponent implements OnInit {\r\n  editCouponFormGroup: FormGroup;\r\n\r\n  // Setting for List layout\r\n\r\n\r\n  constructor(\r\n    private couponService: ProductCouponService,\r\n    private formBuilder: FormBuilder,\r\n    private utilsService: UtilsService,\r\n    private router: Router\r\n  ) {\r\n    this.editCouponFormGroup = this.formBuilder.group({\r\n      id: [],\r\n      code: ['', [CustomValidator.notBlank, Validators.maxLength(20)]],\r\n      description: ['', [CustomValidator.notBlank, Validators.maxLength(50)]],\r\n      discountType: ['', [Validators.required]],\r\n      discountValue: [, [Validators.required, CustomValidator.maxCouponValue]],\r\n      startedDate: [, Validators.required],\r\n      expiredDate: [, Validators.required]\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.couponService.rowData$.subscribe((rowData) => {\r\n      if (rowData) {\r\n        this.editCouponFormGroup.get('id').setValue(rowData.couponId)\r\n        this.editCouponFormGroup.get('code').setValue(rowData.code)\r\n        this.editCouponFormGroup.get('description').setValue(rowData.description)\r\n        if (rowData.discount.toString().indexOf('%') > -1) {\r\n          this.editCouponFormGroup.get('discountType').setValue('Percent')\r\n          this.editCouponFormGroup.get('discountValue').setValue(+rowData.discount.toString().slice(0, -1))\r\n        } else {\r\n          this.editCouponFormGroup.get('discountType').setValue('Fixed')\r\n          this.editCouponFormGroup.get('discountValue').setValue(+rowData.discount.toString().slice(1))\r\n        }\r\n        this.editCouponFormGroup.get('startedDate')\r\n          .setValue(this.utilsService.parseStringToDate(rowData.startedAt.toString()))\r\n        this.editCouponFormGroup.get('expiredDate')\r\n          .setValue(this.utilsService.parseStringToDate(rowData.expiredAt.toString()))\r\n      }\r\n    });\r\n  }\r\n\r\n  submitEditCoupon() {\r\n    if (this.editCouponFormGroup.invalid) {\r\n      this.editCouponFormGroup.markAllAsTouched();\r\n      this.utilsService.updateToastState(new ToastState('Edit Coupon Failed!', \"danger\"))\r\n      return;\r\n    }\r\n\r\n    const coupon = this.mapFormValue();\r\n    console.log(coupon);\r\n    \r\n    this.couponService.update(coupon).subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.utilsService.updateToastState(new ToastState('Edit Coupon Successfully!', \"success\"))\r\n          this.couponService.updateHandleAndRowData('add');\r\n          this.couponService.notifyCouponChange();\r\n        } else {\r\n          this.utilsService.updateToastState(new ToastState('Edit Coupon Failed!', \"danger\"))\r\n        }\r\n      },\r\n      error => {\r\n        this.utilsService.updateToastState(new ToastState('Edit Coupon Failed!', \"danger\"))\r\n        console.log(error)\r\n      }\r\n    )\r\n  }\r\n\r\n  mapFormValue(): Coupon {\r\n    let coupon: any = new Coupon();\r\n    coupon.couponId = this.editCouponFormGroup.get('id').value\r\n    coupon.code = this.editCouponFormGroup.get('code').value\r\n    coupon.discount = this.editCouponFormGroup.get('discountValue').value\r\n    coupon.description = this.editCouponFormGroup.get('description').value\r\n    coupon.couponType = this.couponService.findCouponTypeById(this.editCouponFormGroup.get('discountType').value == 'Fixed' ? 1 : 2);\r\n    coupon.startedAt = this.editCouponFormGroup.get('startedDate').value\r\n    coupon.expiredAt = this.editCouponFormGroup.get('expiredDate').value\r\n    return coupon\r\n  }\r\n}\r\n","<nb-card [formGroup]=\"editCouponFormGroup\">\r\n    <nb-card-header>\r\n        Edit Coupon Id: {{editCouponFormGroup.get('id').value}}\r\n    </nb-card-header>\r\n    <nb-card-body>\r\n        <input type=\"text\" nbInput fullWidth placeholder=\"Coupon Code\" formControlName=\"code\">\r\n        <div class=\"alert alert-danger mt-0 mb-3\"\r\n            *ngIf=\"editCouponFormGroup.get('code').invalid && (editCouponFormGroup.get('code').dirty || editCouponFormGroup.get('code').touched)\">\r\n            <div *ngIf=\"editCouponFormGroup.get('code').errors['notblank']\">\r\n                Coupon code is required\r\n            </div>\r\n\r\n            <div *ngIf=\"editCouponFormGroup.get('code').errors['maxlength']\">\r\n                Coupon Name must not exceed 20 characters\r\n            </div>\r\n        </div>\r\n\r\n        <textarea rows=\"3\" nbInput fullWidth placeholder=\"Short Description\" formControlName=\"description\"\r\n            style=\"resize: none\"></textarea>\r\n        <div class=\"alert alert-danger mt-0 mb-3\"\r\n            *ngIf=\"editCouponFormGroup.get('description').invalid && (editCouponFormGroup.get('description').dirty || editCouponFormGroup.get('description').touched)\">\r\n            <div *ngIf=\"editCouponFormGroup.get('description').errors['notblank']\">\r\n                Coupon description is required\r\n            </div>\r\n\r\n            <div *ngIf=\"editCouponFormGroup.get('description').errors['maxlength']\">\r\n                Coupon description must not exceed 50 characters\r\n            </div>\r\n        </div>\r\n\r\n        <nb-select fullWidth selected=\"1\" placeholder=\"Discount Type\" formControlName=\"discountType\">\r\n            <nb-select-label>\r\n                Type: {{ editCouponFormGroup.get('discountType').value }}\r\n            </nb-select-label>\r\n            <nb-option value=\"Fixed\">Fixed</nb-option>\r\n            <nb-option value=\"Percent\">Percent</nb-option>\r\n        </nb-select>\r\n        <div class=\"alert alert-danger mt-0 mb-3\"\r\n            *ngIf=\"editCouponFormGroup.get('discountType').invalid && (editCouponFormGroup.get('discountType').dirty || editCouponFormGroup.get('discountType').touched)\">\r\n            <div *ngIf=\"editCouponFormGroup.get('discountType').errors['required']\">\r\n                Discount Type is required\r\n            </div>\r\n        </div>\r\n\r\n        <input type=\"number\" nbInput fullWidth placeholder=\"Discount Value\" formControlName=\"discountValue\">\r\n        <div class=\"alert alert-danger mt-0 mb-3\"\r\n            *ngIf=\"editCouponFormGroup.get('discountValue').invalid && (editCouponFormGroup.get('discountValue').dirty || editCouponFormGroup.get('discountValue').touched)\">\r\n            <div *ngIf=\"editCouponFormGroup.get('discountValue').errors['required']\">\r\n                Discount Value is required\r\n            </div>\r\n\r\n            <div *ngIf=\"editCouponFormGroup.get('discountValue').errors['max']\">\r\n                Discount Value must not be larger than 100%\r\n            </div>\r\n        </div>\r\n\r\n        <input nbInput fullWidth placeholder=\"Start Date\" [nbDatepicker]=\"startDate\" formControlName=\"startedDate\">\r\n        <nb-datepicker #startDate></nb-datepicker>\r\n        <div class=\"alert alert-danger mt-2 mb-3\"\r\n            *ngIf=\"editCouponFormGroup.get('startedDate').invalid && (editCouponFormGroup.get('startedDate').dirty || editCouponFormGroup.get('startedDate').touched)\">\r\n            <div *ngIf=\"editCouponFormGroup.get('startedDate').errors['required']\">\r\n                Start Date is required\r\n            </div>\r\n        </div>\r\n        <input nbInput fullWidth placeholder=\"Expire Date\" [nbDatepicker]=\"expireDate\" formControlName=\"expiredDate\">\r\n        <nb-datepicker #expireDate></nb-datepicker>\r\n        <div class=\"alert alert-danger mt-2 mb-3\"\r\n            *ngIf=\"editCouponFormGroup.get('expiredDate').invalid && (editCouponFormGroup.get('expiredDate').dirty || editCouponFormGroup.get('expiredDate').touched)\">\r\n            <div *ngIf=\"editCouponFormGroup.get('expiredDate').errors['required']\">\r\n                Expire Date is required\r\n            </div>\r\n        </div>\r\n    </nb-card-body>\r\n    <nb-card-footer>\r\n        <div class=\"d-flex justify-content-between\">\r\n            <button nbButton status=\"success\" (click)=\"submitEditCoupon()\">SAVE</button>\r\n        </div>\r\n    </nb-card-footer>\r\n</nb-card>","import { ProductCouponService } from './../../../@core/services/product/product-coupon.service';\r\nimport { Component, OnInit, ViewChild, TemplateRef } from \"@angular/core\";\r\nimport { LocalDataSource } from \"ng2-smart-table\";\r\nimport { CustomCouponFilterActionsComponent } from \"./custom/custom-coupon-filter-actions.component\";\r\nimport { CustomCouponActionComponent } from \"./custom/custom-coupon-action.component\";\r\nimport { ToastState, UtilsService } from '../../../@core/services/utils.service';\r\nimport { Coupon } from '../../../@core/models/coupon/coupon.model';\r\nimport { DatePipe } from '@angular/common';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { NbWindowRef, NbWindowService } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: \"ngx-products-coupon\",\r\n  templateUrl: \"./product-coupon.component.html\",\r\n  styleUrls: [\"./product-coupon.component.scss\"],\r\n})\r\nexport class ProductCouponComponent implements OnInit {\r\n  private unsubscribe = new Subject<void>();\r\n  state: string = \"add\"; // default\r\n  loadedCoupons: boolean = false;\r\n  \r\n  // for deleting multi coupon\r\n  @ViewChild('onDeleteTemplate') deleteWindow: TemplateRef<any>;\r\n  selectedCoupons: Coupon[] = []\r\n  deleteWindowRef: NbWindowRef;\r\n\r\n  numberOfItem: number = localStorage.getItem('itemPerPage') != null ? +localStorage.getItem('itemPerPage') : 10; // default\r\n  source: LocalDataSource = new LocalDataSource();\r\n  settings = {\r\n    selectMode: 'multi',\r\n    actions: {\r\n      edit: false,\r\n      delete: false,\r\n      add: false,\r\n      columnTitle: ''\r\n    },\r\n    mode: \"external\", // when add/edit -> navigate to another url\r\n    columns: {\r\n      couponId: {\r\n        title: \"ID\",\r\n        type: \"number\",\r\n        width: '3%'\r\n      },\r\n      code: {\r\n        title: \"Code\",\r\n        type: \"string\",\r\n      },\r\n      description: {\r\n        title: \"Description\",\r\n        type: \"string\",\r\n      },\r\n      discount: {\r\n        title: \"Discount\",\r\n        type: \"string\",\r\n      },\r\n      startedAt: {\r\n        title: 'Started Date',\r\n        type: 'string'\r\n      },\r\n      expiredAt: {\r\n        title: 'Expired Date',\r\n        type: 'string'\r\n      },\r\n      actions: {\r\n        title: 'Actions',\r\n        type: 'custom',\r\n        sort: false,\r\n        filter: {\r\n          type: 'custom',\r\n          component: CustomCouponFilterActionsComponent\r\n        },\r\n        renderComponent: CustomCouponActionComponent\r\n      }\r\n    },\r\n    pager: {\r\n      display: true,\r\n      perPage: this.numberOfItem\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    private couponService: ProductCouponService,\r\n    private utilsService: UtilsService,\r\n    private windowService: NbWindowService,\r\n  ) {\r\n    this.couponService.couponChange$\r\n      .pipe(takeUntil(this.unsubscribe))\r\n      .subscribe(() => {\r\n        this.loadCoupons();\r\n      });\r\n    this.loadCoupons()\r\n  }\r\n\r\n  loadCoupons() {\r\n    this.couponService.findAll().subscribe(\r\n      data => {\r\n        const mappedCoupons = data._embedded.coupons.map((coupon) => {\r\n          return {\r\n            couponId: coupon.couponId,\r\n            code: coupon.code,\r\n            description: coupon.description,\r\n            discount: coupon.couponType.couponTypeId == 1 ? '$' + coupon.discount : coupon.discount + '%',\r\n            startedAt: new DatePipe('en-US').transform(coupon.startedAt, 'dd/MM/yyyy').toString(),\r\n            expiredAt: new DatePipe('en-US').transform(coupon.expiredAt, 'dd/MM/yyyy').toString()\r\n          }\r\n        })\r\n        this.source.load(mappedCoupons)\r\n        this.loadedCoupons = true\r\n      }\r\n    )\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.couponService.state$.subscribe((state) => {\r\n      this.state = state;\r\n    });\r\n  }\r\n\r\n  onRowSelect(event: any): void {\r\n    this.selectedCoupons = (event.selected) as Coupon[]\r\n  }\r\n\r\n  openDeleteWindow() {\r\n    this.deleteWindowRef = this.windowService\r\n      .open(this.deleteWindow, { title: `Delete Coupons` });\r\n  }\r\n\r\n  onDeleteCoupons() {\r\n    this.couponService.deleteCoupons(this.selectedCoupons).subscribe(\r\n      data => {\r\n        this.selectedCoupons = []\r\n        this.deleteWindowRef.close()\r\n        this.couponService.notifyCouponChange();\r\n        this.utilsService.updateToastState(new ToastState('Delete The Coupons Successfully!', \"success\"))\r\n      },\r\n      error => {\r\n        this.utilsService.updateToastState(new ToastState('Delete The Coupons Failed!', \"danger\"))\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-lg-8 col-md-12\">\r\n        <ng-container *ngIf=\"loadedCoupons; else loadingBlock\">\r\n            <nb-card>\r\n                <nb-card-header class=\"d-flex justify-content-between align-items-center\">\r\n                    <h6>\r\n                        Coupon List\r\n                    </h6>\r\n                    <ngx-item-of-list (selectNumberOfItem)=\"source.setPaging(1, $event)\"></ngx-item-of-list>\r\n                </nb-card-header>\r\n                <nb-card-body>\r\n                    <ng2-smart-table \r\n                        [settings]=\"settings\" [source]=\"source\"\r\n                        [ngClass]=\"'smart-table'\"\r\n                        (userRowSelect)=\"onRowSelect($event)\">\r\n                    </ng2-smart-table>\r\n                </nb-card-body>\r\n                <nb-card-footer>\r\n                    <ng-container *ngIf=\"selectedCoupons.length > 0\">\r\n                        <button nbButton status=\"danger\" (click)=\"openDeleteWindow()\">\r\n                            <nb-icon icon=\"trash-outline\"></nb-icon>\r\n                        </button>\r\n                    </ng-container>\r\n                </nb-card-footer>\r\n            </nb-card>\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"col-lg-4 col-md-12\">\r\n        <ng-container *ngIf=\"state === 'add'\">\r\n            <ngx-products-coupon-add></ngx-products-coupon-add>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"state === 'edit'\">\r\n            <ngx-products-coupon-edit></ngx-products-coupon-edit>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #onDeleteTemplate let-data>\r\n    <nb-card>\r\n        <nb-card-header>\r\n                Are you sure you want to delete this coupons?\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <button nbButton status=\"success\" class=\"mt-3\" (click)=\"onDeleteCoupons()\">\r\n                CONFIRM\r\n            </button>\r\n        </nb-card-body>\r\n    </nb-card>\r\n</ng-template>\r\n\r\n<ng-template #loadingBlock>\r\n    <nb-card [size]=\"'small'\" [nbSpinner]=\"!loadedCatalogs\" nbSpinnerSize=\"large\" nbSpinnerStatus=\"primary\">\r\n    </nb-card>\r\n</ng-template>","import { Component, Input, OnChanges, SimpleChanges, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { Product } from '../../../../@core/models/product/product.model';\nimport { ImagesCarouselComponent } from '../../images-carousel.component';\n\n@Component({\n  selector: 'ngx-product-detail-basic',\n  templateUrl: './product-detail-basic.component.html',\n  styleUrls: ['./product-detail-basic.component.scss']\n})\nexport class ProductDetailBasicComponent implements OnChanges, AfterViewInit{\n  @ViewChild(ImagesCarouselComponent) carousel: ImagesCarouselComponent;\n  @Input() product: Product\n  isProductAvailable = false;\n  constructor() {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.product && this.product) {\n      this.isProductAvailable = true;\n    } else {\n      this.isProductAvailable = false;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.carousel.show(this.product.imageUrls)\n  }\n}\n","<ng-container *ngIf=\"isProductAvailable\">\n    <div class=\"row\">\n        <div class=\"col-lg-6 col-md-12\">\n            <div class=\"row\">\n                <div class=\"col-lg-5 d-flex align-items-center\">\n                    <ngx-images-carousel></ngx-images-carousel>\n                </div>\n                <div class=\"col-lg-7\">\n                    <h6>{{product.productName}}</h6>\n                    <p><span class=\"font-weight-bold\">Id: </span>{{product.productId}}</p>\n\n                    <p><span class=\"font-weight-bold\">Catalog: </span>{{product.catalog !== null ?\n                        product.catalog.catalogName : ''}}</p>\n                    <p><span class=\"font-weight-bold\">Sale: </span>{{product.productSale !== null ?\n                        product.productSale.saleName : ''}}</p>\n                    <p><span class=\"font-weight-bold\">Difficulty In Grow: </span>{{product.plantingDifficultyLevel !==\n                        null ? product.plantingDifficultyLevel.level : ''}}</p>\n\n                    <p><span class=\"font-weight-bold\">Total Sold: </span>{{product.totalSold}}</p>\n                    <p><span class=\"font-weight-bold\">Total Likes: </span>{{product.totalLikes}}</p>\n                    <p>\n                        <span class=\"font-weight-bold\">Rating Star: </span> {{product.totalRating}} |\n                        <span class=\"font-weight-bold\">Total Rating: </span> {{product.totalRating}}\n                    </p>\n                    <div class=\"row d-flex pl-3\">\n                        <p class=\"font-weight-bold\">Status:</p>\n                        <div class=\"d-flex\">\n                            <div *ngIf=\"product.new === true\">\n                                <h6><span class=\"badge badge-pill badge-success\">NEW</span></h6>\n                            </div>\n                            <div *ngIf=\"product.top === true\" class=\"ml-1\">\n                                <h6><span class=\"badge badge-pill badge-danger\">TOP</span></h6>\n                            </div>\n                            <div *ngIf=\"product.active === true\" class=\"ml-1\">\n                                <h6><span class=\"badge badge-pill text-white badge-warning\">ACTIVE</span></h6>\n                            </div>\n                            <div *ngIf=\"product.sale === true\" class=\"ml-1\">\n                                <h6><span class=\"badge badge-pill badge-info\">SALE</span></h6>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-12 mt-3\">\n                    <h6>Description</h6>\n                    <p [innerHTML]=\"product.description\"></p>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-lg-6 col-md-12\">\n            <table class=\"table table-bordered\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\" style=\"width: 15%;\" class=\"align-middle text-center\">\n                            <p><span class=\"font-weight-bold\">Image</span></p>\n                        </th>\n                        <th scope=\"col\" style=\"width: 35%;\" class=\"align-middle text-center\">\n                            <p><span class=\"font-weight-bold\">Dimension</span></p>\n                        </th>\n                        <th scope=\"col\" style=\"width: 20%;\" class=\"align-middle text-center\">\n                            <p><span class=\"font-weight-bold\">Size</span></p>\n                        </th>\n                        <th scope=\"col\" style=\"width: 10%;\" class=\"align-middle text-center\">\n                            <p><span class=\"font-weight-bold\">Price</span></p>\n                        </th>\n                        <th scope=\"col\" style=\"width: 10%;\" class=\"align-middle text-center\">\n                            <p><span class=\"font-weight-bold\">Quantity</span></p>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let variant of product.productVariants\">\n                        <th class=\"d-flex justify-content-center\">\n                            <img [src]=\"\n                                variant.imageUrl !== 'http://localhost:9090/assets/upload/variant/null' ?\n                                variant.imageUrl :\n                                'assets/images/no-image.jpg'\" [height]=\"75\" class=\"d-block\">\n                        </th>\n                        <th class=\"align-middle text-center\">\n                            <p>{{\"h: \" + variant.height + \"cm * w: \" + variant.width + \"cm\"}}</p>\n                        </th>\n                        <th class=\"align-middle text-center\">\n                            <p>{{variant.productSize.sizeName | uppercase}}</p>\n                        </th>\n                        <th class=\"align-middle text-center\">\n                            <p>{{variant.price + \"$\"}}</p>\n                        </th>\n                        <th class=\"align-middle text-center\">\n                            <p>{{variant.quantity}}</p>\n                        </th>\n                    </tr>\n                </tbody>\n            </table>\n            <div class=\"row\">\n                <h6 class=\"ml-3\">Size Guide</h6>\n                <div class=\"col-12 d-flex justify-content-center\">\n                    <img [src]=\"'http://localhost:9090/assets/upload/size_guide/' + product.imageSizeGuideUrl\" alt=\"\"\n                        class=\"d-block w-75\">\n                </div>\n            </div>\n        </div>\n        <hr>\n    </div>\n</ng-container>\n\n\n<div *ngIf=\"!isProductAvailable\">\n    <p>Loading...</p>\n</div>","import { Component, Input, OnChanges, SimpleChanges, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { ImagesCarouselComponent } from '../../images-carousel.component';\nimport { ProductReview } from '../../../../@core/models/product/product-review.model';\nimport { ACCOUNT_IMAGE_DIRECTORY } from '../../../../@core/utils/image-storing-directory';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ProductCareGuide } from '../../../../@core/models/product/product-care-guide.model';\n\n@Component({\n  selector: 'ngx-product-detail-care-guide',\n  templateUrl: './product-detail-care-guide.component.html',\n})\nexport class ProductDetailCareGuideComponent implements OnChanges {\n  @ViewChild(ImagesCarouselComponent) carousel: ImagesCarouselComponent;\n\n  @Input() careGuide\n  isCareGuideAvailable = false;\n  constructor( ) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.careGuide && this.careGuide) {\n      this.isCareGuideAvailable = true;\n      this.careGuide = Object.entries(this.careGuide)\n        .filter(([key, value]) => key !== 'productId' && (value !== '' || value === null))\n        .map(([key, value]) => ({ key, value }));\n      console.log(this.careGuide);\n        \n    } else {\n      this.isCareGuideAvailable = false;\n    }\n  }\n}\n","<ng-container *ngIf=\"isCareGuideAvailable\">\n    <div class=\"container\">\n        <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-6\">\n                <nb-accordion>\n                    <nb-accordion-item #item *ngFor=\"let guide of careGuide\">\n                        <nb-accordion-item-header>\n                            {{ guide.key | uppercase }}\n                        </nb-accordion-item-header>\n                        <nb-accordion-item-body>\n                            {{ guide.value }}\n                        </nb-accordion-item-body>\n                    </nb-accordion-item>\n                </nb-accordion>\n            </div>\n        </div>\n    </div>\n</ng-container>","import { map, startWith } from 'rxjs/operators';\nimport { Component, Input, OnChanges, SimpleChanges, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { Product } from '../../../../@core/models/product/product.model';\nimport { ImagesCarouselComponent } from '../../images-carousel.component';\nimport { ProductReview } from '../../../../@core/models/product/product-review.model';\nimport { ACCOUNT_IMAGE_DIRECTORY } from '../../../../@core/utils/image-storing-directory';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'ngx-product-detail-comments',\n  templateUrl: './product-detail-comments.component.html',\n  styles: [\n    `\n\t\t\ti {\n\t\t\t\tfont-size: 2rem;\n\t\t\t\tpadding-right: 0.1rem;\n\t\t\t\tcolor: #b0c4de;\n\t\t\t}\n\t\t\t.filled {\n\t\t\t\tcolor: #FFD700;\n\t\t\t}\n\t\t\t.low {\n\t\t\t\tcolor: #deb0b0;\n\t\t\t}\n\t\t\t.filled.low {\n\t\t\t\tcolor: #ff1e1e;\n\t\t\t}\n\t\t`,\n  ],\n})\nexport class ProductDetailCommentsComponent implements OnChanges {\n  @ViewChild(ImagesCarouselComponent) carousel: ImagesCarouselComponent;\n\n  @Input() comments: ProductReview[]\n  filteredComments: ProductReview[]\n  filterMode: boolean\n\n  isCommentAvailable = false;\n  searchFormGroup: FormGroup\n  constructor(\n    private formBuilder: FormBuilder\n  ) {\n    this.searchFormGroup = formBuilder.group({\n      email: [''],\n      sort: [null],\n      filter: [null]\n    })\n    this.onEmailChanges()\n  }\n\n  onFilterAny(controlChangeName: string) {\n    (controlChangeName != 'email') ? this.searchFormGroup.get('email').reset() : 1;\n    (controlChangeName != 'sort') ? this.searchFormGroup.get('sort').reset() : 1;\n    (controlChangeName != 'filter') ? this.searchFormGroup.get('filter').reset() : 1;\n  }\n\n  onEmailChanges() {\n    this.searchFormGroup.get('email').valueChanges.subscribe(data => {\n      this.onFilterAny('email')\n      if (data == '') {\n        this.filterMode = false\n      } else {\n        this.filterMode = true\n        this.filteredComments = [...this.comments].filter(cmt => cmt.accountEmail.startsWith(data))\n      }\n    })\n  }\n\n  onSort(event: any) {\n    this.onFilterAny('sort')\n    this.searchFormGroup.get('sort').setValue(event)\n    if (event == null) {\n      this.filterMode = false\n    } else {\n      this.filterMode = true\n      if (event == 'Newest') {\n        this.filteredComments = [...this.comments].sort((cmt1, cmt2) =>\n          (new Date(cmt1.createdAt).getTime() < new Date(cmt2.createdAt).getTime()) ? 1 : -1)\n      } else if (event == 'Rating Star') {\n        this.filteredComments = [...this.comments].sort((cmt1, cmt2) => {\n          return (cmt2.rating > cmt1.rating) ? 1 : -1\n        })\n      }\n    }\n  }\n\n  onFilter(event: any) {\n    this.onFilterAny('filter')\n    this.searchFormGroup.get('filter').setValue(event)\n    if (event == null) {\n      this.filterMode = false\n    } else {\n      this.filterMode = true\n      this.filteredComments = [...this.comments].filter((cmt1) => {\n        return cmt1.rating == event\n      })\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.comments && this.comments) {\n      this.isCommentAvailable = true;\n      this.comments.map((comment: ProductReview) => {\n        comment.imageUrl = ACCOUNT_IMAGE_DIRECTORY + comment.imageUrl\n      })\n\n    } else {\n      this.isCommentAvailable = false;\n    }\n  }\n}\n","<ng-container *ngIf=\"isCommentAvailable\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-2\"></div>\n            <div class=\"col-lg-8 col-md-12\">\n                <nb-card>\n                    <nb-card-body>\n                        <div class=\"row\">\n                            <div class=\"col-12 mb-4 d-flex\" [formGroup]=\"searchFormGroup\">\n                                <nb-form-field>\n                                    <input type=\"text\" nbInput status=\"primary\" placeholder=\"Search by email\" formControlName=\"email\">\n                                    <nb-icon nbSuffix icon=\"search-outline\" pack=\"eva\"></nb-icon>\n                                </nb-form-field>\n                                <nb-select placeholder=\"Sort\" formControlName=\"sort\" class=\"ml-3\"\n                                    (selectedChange)=\"onSort($event)\">\n                                    <nb-select-label>\n                                        Sort: {{ searchFormGroup.get('sort').value }}\n                                    </nb-select-label>\n                                    <nb-option>Reset</nb-option>\n                                    <nb-option value=\"Newest\">Newest</nb-option>\n                                    <nb-option value=\"Rating Star\">Rating Star</nb-option>\n                                </nb-select>\n                                <nb-select placeholder=\"Filter\" formControlName=\"filter\" class=\"ml-3\"\n                                    (selectedChange)=\"onFilter($event)\">\n                                    <nb-select-label>\n                                        Filter: <ngb-rating [max]=\"searchFormGroup.get('filter').value\" [rate]=\"searchFormGroup.get('filter').value\" [readonly]=\"true\">\n                                            <ng-template let-fill=\"fill\" let-index=\"index\">\n                                                <span class=\"star\" [class.filled]=\"fill === 100\">&#9733;</span>\n                                            </ng-template>\n                                        </ngb-rating>\n                                    </nb-select-label>\n                                    <nb-option>Reset</nb-option>\n                                    <nb-option [value]=\"item\" *ngFor=\"let item of [1,2,3,4,5]\">\n                                        <ngb-rating [max]=\"item\" [rate]=\"item\" [readonly]=\"true\">\n                                            <ng-template let-fill=\"fill\" let-index=\"index\">\n                                                <span class=\"star\" [class.filled]=\"fill === 100\">&#9733;</span>\n                                            </ng-template>\n                                        </ngb-rating>\n                                    </nb-option>\n                                </nb-select>\n                            </div>\n                            \n                            <ng-container *ngIf=\"filterMode\">\n                                <div class=\"col-12 mb-4\" *ngFor=\"let comment of filteredComments\">\n                                    <div class=\"row\">\n                                        <div class=\"col-2 d-flex\">\n                                            <img [src]=\"comment.imageUrl\" alt=\"\" class=\"d-block w-100\" [height]=\"75\">\n                                        </div>\n                                        <div class=\"col-10\">\n                                            <p class=\"mb-0\">\n                                                <span class=\"font-weight-bold\">{{comment.accountEmail + \" \"}}</span>\n                                                <span>\n                                                    <ngb-rating [max]=\"5\" [rate]=\"comment.rating\" [readonly]=\"true\">\n                                                        <ng-template let-fill=\"fill\" let-index=\"index\">\n                                                            <span class=\"star\" [class.filled]=\"fill === 100\">&#9733;</span>\n                                                        </ng-template>\n                                                    </ngb-rating>\n                                                </span>\n                                            </p>\n                                            <p>{{comment.content}}</p>\n                                            <p>\n                                                <span class=\"text-monospace\">{{comment.createdAt | date:'hh:mma dd/MM/yy'}}</span>\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </ng-container>\n                            <ng-container *ngIf=\"!filterMode\">\n                                <div class=\"col-12 mb-4\" *ngFor=\"let comment of comments\">\n                                    <div class=\"row\">\n                                        <div class=\"col-2 d-flex\">\n                                            <img [src]=\"comment.imageUrl\" alt=\"\" class=\"d-block w-100\" [height]=\"75\">\n                                        </div>\n                                        <div class=\"col-10\">\n                                            <p class=\"mb-0\">\n                                                <span class=\"font-weight-bold\">{{comment.accountEmail + \" \"}}</span>\n                                                <span>\n                                                    <ngb-rating [max]=\"5\" [rate]=\"comment.rating\" [readonly]=\"true\">\n                                                        <ng-template let-fill=\"fill\" let-index=\"index\">\n                                                            <span class=\"star\" [class.filled]=\"fill === 100\">&#9733;</span>\n                                                        </ng-template>\n                                                    </ngb-rating>\n                                                </span>\n                                            </p>\n                                            <p>{{comment.content}}</p>\n                                            <p>\n                                                <span class=\"text-monospace\">{{comment.createdAt | date:'hh:mma dd/MM/yy'}}</span>\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </ng-container>\n                        </div>\n                    </nb-card-body>\n                </nb-card>\n            </div>\n        </div>\n\n    </div>\n</ng-container>","import { Component, QueryList, ViewChildren, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ProductService } from '../../../@core/services/product/product.service';\r\nimport { NbAccordionItemComponent, NbTabComponent } from '@nebular/theme';\r\nimport { PRODUCT_IMAGE_DIRECTORY, VARIANT_IMAGE_DIRECTORY } from '../../../@core/utils/image-storing-directory';\r\nimport { ProductReviewService } from '../../../@core/services/product/product-review.service';\r\nimport { ProductReview } from '../../../@core/models/product/product-review.model';\r\nimport { Product } from '../../../@core/models/product/product.model';\r\n\r\n@Component({\r\n  selector: 'ngx-product-detail',\r\n  templateUrl: './product-detail.component.html',\r\n  styleUrls: ['./product-detail.component.scss']\r\n})\r\nexport class ProductDetailComponent implements OnInit {\r\n  @ViewChildren(NbAccordionItemComponent) accordions: QueryList<NbAccordionItemComponent>;\r\n\r\n  product: Product;\r\n  loaded: boolean = false\r\n  comments: ProductReview[];\r\n  numberOfComments: string;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private productService: ProductService,\r\n    private productReviewService: ProductReviewService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.loaded = false;\r\n      this.productService.findById(params['id'])\r\n        .subscribe(data => {\r\n          this.product = data\r\n          this.product.imageUrls = this.product.imageUrls.map(img => PRODUCT_IMAGE_DIRECTORY + img)\r\n          this.product.productVariants.map(variant => {\r\n            variant.imageUrl = VARIANT_IMAGE_DIRECTORY + variant.imageUrl\r\n          })\r\n          this.loaded = true\r\n          \r\n          this.productService.countTotalComments(this.product.productId).subscribe(data => {\r\n            if(data > 99) {\r\n              this.numberOfComments = '99+'\r\n            } else {\r\n              this.numberOfComments = data + ''\r\n            }\r\n          })\r\n        })\r\n    })\r\n  }\r\n\r\n  changeTab(event: NbTabComponent) {\r\n    if(event.tabTitle === \"Comments\" && this.comments == undefined) {\r\n      this.productReviewService.findByProductId(this.product.productId)\r\n        .subscribe(data => {\r\n          this.comments = data\r\n        })\r\n    } \r\n  }\r\n}\r\n","<nb-card>\r\n    <nb-card-body>\r\n        <nb-tabset fullWidth (changeTab)=\"changeTab($event)\">\r\n            <nb-tab tabTitle=\"Basic Information\" tabIcon=\"list-outline\">\r\n                <ngx-product-detail-basic *ngIf=\"loaded\" [product]=\"product\"></ngx-product-detail-basic>\r\n                <nb-card *ngIf=\"!loaded\" [size]=\"'large'\" [nbSpinner]=\"true\" \r\n                    nbSpinnerSize=\"large\" nbSpinnerStatus=\"primary\" >\r\n                </nb-card>\r\n            </nb-tab>\r\n            <nb-tab tabTitle=\"Care Guide\" tabIcon=\"calendar-outline\">\r\n                <ngx-product-detail-care-guide *ngIf=\"loaded\" [careGuide]=\"product.productCareGuide\" ></ngx-product-detail-care-guide>\r\n            </nb-tab>\r\n            <nb-tab tabTitle=\"Comments\" tabIcon=\"message-square-outline\"\r\n                [badgeText]=\"numberOfComments\" badgeStatus=\"success\">\r\n                <ngx-product-detail-comments *ngIf=\"comments\" [comments]=\"comments\"></ngx-product-detail-comments>\r\n            </nb-tab>\r\n        </nb-tabset>\r\n    </nb-card-body>\r\n</nb-card>","import { CATALOG_IMAGE_DIRECTORY, PRODUCT_IMAGE_DIRECTORY, SIDE_GUIDE_IMAGE_DIRECTORY, VARIANT_IMAGE_DIRECTORY } from './../../../@core/utils/image-storing-directory';\r\nimport { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { NbAccordionItemComponent, NbStepChangeEvent, NbStepperComponent } from '@nebular/theme';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ProductService } from '../../../@core/services/product/product.service';\r\nimport { Product } from '../../../@core/models/product/product.model';\r\nimport { CustomValidator } from '../../../@core/validators/custom-validator';\r\nimport { ImagesCarouselComponent } from '../images-carousel.component';\r\nimport { ProductVariant } from '../../../@core/models/product/product-variant.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastState, UtilsService } from '../../../@core/services/utils.service';\r\nimport { ProductSale } from '../../../@core/models/sale/product-sale.model';\r\nimport { ProductSize } from '../../../@core/models/product/product-size.model';\r\nimport { Catalog } from '../../../@core/models/product/catalog.model';\r\nimport { PlantingDifficultyLevel } from '../../../@core/models/product/planting-difficulty-level.model';\r\nimport { FormBasicInformationComponent } from '../shared/form-basic-information/form-basic-information.component';\r\nimport { FormVariantsComponent } from '../shared/form-variants/form-variants.component';\r\nimport { FormCareGuideComponent } from '../shared/form-care-guide/form-care-guide.component';\r\n\r\n@Component({\r\n  selector: 'ngx-product-edit',\r\n  templateUrl: './product-edit.component.html',\r\n  styleUrls: ['./product-edit.component.scss']\r\n})\r\nexport class ProductEditComponent {\r\n  @ViewChild(NbStepperComponent) stepper: NbStepperComponent;\r\n  @ViewChild(FormBasicInformationComponent) basicInformationCpn: FormBasicInformationComponent;\r\n  @ViewChild(FormVariantsComponent) variantCpn: FormVariantsComponent;\r\n  @ViewChild(FormCareGuideComponent) careGuideCpn: FormCareGuideComponent;\r\n\r\n  edittingProduct;\r\n  edittingProductId: string;\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private utilsService: UtilsService,\r\n    private router: Router,\r\n\r\n  ) {\r\n    this.activatedRoute.params.subscribe(\r\n      params => {\r\n        this.edittingProductId = params['id']\r\n        this.productService.findById(+this.edittingProductId).subscribe(\r\n          (data: Product) => {\r\n            this.edittingProduct = data\r\n            this.edittingProduct.imageUrls = this.edittingProduct.imageUrls\r\n              .map(img => PRODUCT_IMAGE_DIRECTORY + img)\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  onSubmit() {\r\n    if(!this.validate()) return;\r\n\r\n    const product: Product = this.mapFormValue()\r\n    console.log(product)\r\n\r\n    this.productService.update(product).subscribe(data => {\r\n      if (data) {\r\n        this.utilsService.updateToastState(new ToastState('Edit Product Successfully!', \"success\"))\r\n        this.router.navigate(['/admin/products/list'])\r\n      } else {\r\n        this.utilsService.updateToastState(new ToastState('Edit Product Failed!', \"danger\"))\r\n      }\r\n    })\r\n  }\r\n\r\n  validate(): boolean {\r\n    if (this.basicInformationCpn.productForm.invalid ||\r\n        this.variantCpn.variantsForm.invalid || \r\n        this.careGuideCpn.careGuideForm.invalid   \r\n    ) {\r\n      this.basicInformationCpn.productForm.markAllAsTouched();\r\n      this.variantCpn.variantsForm.markAllAsTouched();\r\n      this.careGuideCpn.careGuideForm.markAllAsTouched();\r\n      this.utilsService.updateToastState(new ToastState('Add Product Failed!', 'danger'))\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  mapFormValue(): Product {\r\n    let product: Product = this.basicInformationCpn.getFormValue();\r\n    product.productCareGuide = this.careGuideCpn.getFormValue();\r\n    product.productVariants = this.variantCpn.getVariantsValue();\r\n    product.imageSizeGuide = this.variantCpn.getImgSizeGuideValue();\r\n    return product;\r\n  }\r\n\r\n  stepChange(event: NbStepChangeEvent) {\r\n    if(event.index == 1 && event.previouslySelectedIndex == 0) {\r\n      if (this.basicInformationCpn.productForm.invalid) {\r\n        this.basicInformationCpn.productForm.markAllAsTouched()\r\n        this.stepper.previous()\r\n        return;\r\n      }\r\n    } else if(event.index == 2 && event.previouslySelectedIndex == 1) {\r\n      if (this.variantCpn.variantsForm.invalid) {\r\n        this.variantCpn.variantsForm.markAllAsTouched()\r\n        this.stepper.previous()\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n","<nb-card>\r\n    <nb-card-body style=\"padding: 50px;\">\r\n        <nb-stepper orientation=\"horizontal\" >\r\n            <nb-step label=\"Basic Information\" class=\"d-flex flex-column align-item-center\">\r\n                <ngx-form-basic-information [mode]=\"'edit'\" [product]=\"edittingProduct\">\r\n                </ngx-form-basic-information>\r\n\r\n                <div class=\"col-12  d-flex justify-content-center mt-3\">\r\n                    <button nbButton disabled nbStepperNext>prev</button>\r\n                    <button nbButton nbStepperNext class=\"ml-3\">next</button>\r\n                </div>\r\n            </nb-step>\r\n            <nb-step label=\"Variants\">\r\n                <ngx-form-variants [mode]=\"'edit'\" [product]=\"edittingProduct\"></ngx-form-variants>\r\n\r\n                <div class=\"col-12 d-flex justify-content-center mt-3\">\r\n                    <button nbButton nbStepperPrevious>prev</button>\r\n                    <button nbButton nbStepperNext class=\"ml-3\">next</button>\r\n                </div>\r\n            </nb-step>\r\n            <nb-step label=\"Care Guide\">\r\n                <ngx-form-care-guide [mode]=\"'edit'\" [product]=\"edittingProduct\"></ngx-form-care-guide>\r\n\r\n                <div class=\"col-12 d-flex justify-content-center mt-3\">\r\n                    <button nbButton nbStepperPrevious>prev</button>\r\n                    <button nbButton status=\"success\" type=\"submit\" class=\"ml-3\" (click)=\"onSubmit()\">PUBLISH</button>\r\n                </div>\r\n            </nb-step>\r\n        </nb-stepper>\r\n    </nb-card-body>\r\n</nb-card>","import { Component, OnInit, Input, ViewChild, TemplateRef } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { NbDataRowOutletDirective, NbWindowRef, NbWindowService } from \"@nebular/theme\";\r\nimport { ViewCell } from \"ng2-smart-table\";\r\nimport { ProductService } from \"../../../../@core/services/product/product.service\";\r\nimport { ToastState, UtilsService } from \"../../../../@core/services/utils.service\";\r\n\r\n@Component({\r\n    selector: 'ngx-custom-action',\r\n    templateUrl: 'custom-product-action.component.html',\r\n    styles: [\r\n        `\r\n            button {\r\n                padding: 0.5rem 0.7rem;\r\n            }\r\n            i {\r\n                font-size: 1.2rem;\r\n            }\r\n        `\r\n    ]\r\n})\r\n\r\nexport class CustomProductActionComponent implements ViewCell, OnInit {\r\n    renderValue: string;\r\n\r\n    @Input() value: string | number;\r\n    @Input() rowData: any;\r\n\r\n    productId: number;\r\n\r\n    @ViewChild('onHideTemplate') hideWindow: TemplateRef<any>;\r\n    hideWindowRef: NbWindowRef;\r\n\r\n    @ViewChild('onDeleteTemplate') deleteWindow: TemplateRef<any>;\r\n    deleteWindowRef: NbWindowRef;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private windowService: NbWindowService,\r\n        private productService: ProductService,\r\n        private utilsService: UtilsService\r\n    ) {\r\n        \r\n    }\r\n    \r\n    ngOnInit(): void {\r\n        this.productId = this.rowData.productId\r\n    }\r\n\r\n    isHide(): boolean {\r\n        return this.rowData.isHide === 1;\r\n    }\r\n\r\n    onGetDetail() {\r\n        this.router.navigate(['/admin/products', 'detail', this.rowData.productId])\r\n    }\r\n\r\n    onEdit() {\r\n        this.router.navigate(['/admin/products', 'edit', this.rowData.productId])\r\n    }\r\n\r\n    onDelete(event: any) {\r\n        this.deleteWindowRef = this.windowService\r\n            .open(this.deleteWindow, { title: `Delete Product` }); \r\n    }\r\n\r\n    deleteProduct() {\r\n        this.productService.delete(this.productId).subscribe(\r\n            data => {\r\n                if (data) {\r\n                    this.utilsService.updateToastState(new ToastState('Delete Product Successfully!', \"success\"))\r\n                    this.deleteWindowRef.close()\r\n                    this.productService.notifyProductChange();\r\n                } else {\r\n                    this.utilsService.updateToastState(new ToastState('Delete Product Failed!', \"danger\"))\r\n                }\r\n            }, \r\n            error => {\r\n                this.utilsService.updateToastState(new ToastState('Delete Product Failed!', \"danger\"))\r\n            }\r\n        )\r\n    }\r\n}","<div class=\"row \">\r\n    <div class=\"col-lg-4 col-md-6 d-flex justify-content-center\">\r\n        <button nbButton status=\"primary\" (click)=\"onGetDetail()\">\r\n            <nb-icon icon=\"folder-outline\"></nb-icon>\r\n        </button>\r\n    </div>\r\n    <div class=\"col-lg-4 col-md-6  d-flex justify-content-center\">\r\n        <button nbButton status=\"warning\" (click)=\"onEdit()\">\r\n            <nb-icon icon=\"edit-2-outline\"></nb-icon>\r\n        </button>\r\n    </div>\r\n    <div class=\"col-lg-4 col-md-6  d-flex justify-content-center\">\r\n        <button nbButton status=\"danger\" (click)=\"onDelete($event)\">\r\n            <nb-icon icon=\"trash-outline\"></nb-icon>\r\n        </button>\r\n    </div>\r\n</div>\r\n<ng-template #onDeleteTemplate let-data>\r\n    <nb-card>\r\n        <nb-card-header>\r\n                Are you sure you want to delete this product?\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <button nbButton status=\"success\" class=\"mt-3\" (click)=\"deleteProduct()\">\r\n                CONFIRM\r\n            </button>\r\n        </nb-card-body>\r\n    </nb-card>\r\n</ng-template>","import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DefaultFilter } from 'ng2-smart-table';\r\n\r\n@Component({\r\n    template: `\r\n        <button nbButton fullWidth=\"\" status=\"primary\" (click)=\"onAdd()\">\r\n            <nb-icon icon=\"plus-square-outline\"></nb-icon>\r\n        </button>\r\n    `,\r\n})\r\nexport class CustomProductFilterActionsComponent extends DefaultFilter implements OnInit, OnChanges {\r\n\r\n    inputControl = new FormControl();\r\n\r\n    constructor(private router: Router) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        let x        \r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        let x        \r\n    }\r\n\r\n    onAdd(){\r\n        this.router.navigate(['/admin/products', 'add'])\r\n    }\r\n\r\n}","import { Component, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { DefaultFilter } from 'ng2-smart-table';\r\nimport { debounceTime } from 'rxjs-compat/operator/debounceTime';\r\nimport { distinctUntilChanged } from 'rxjs-compat/operator/distinctUntilChanged';\r\n\r\n@Component({\r\n    template: `\r\n        <div class=\"\" [formGroup]=\"form\">\r\n            <nb-select fullWidth multiple placeholder=\"Status...\" formControlName=\"selectedItems\">\r\n                <nb-option value=\"new\">NEW</nb-option>\r\n                <nb-option value=\"top\">TOP</nb-option>\r\n                <nb-option value=\"active\">ACTIVE</nb-option>\r\n                <nb-option value=\"sale\">SALE</nb-option>\r\n            </nb-select>\r\n        </div>\r\n    `,\r\n})\r\nexport class CustomProductStatusFilterComponent extends DefaultFilter implements OnInit, OnChanges {\r\n    form: FormGroup;\r\n    inputControl = new FormControl();\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder\r\n    ) {\r\n        super();\r\n        this.form = this.formBuilder.group({\r\n            selectedItems: []\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.form.get('selectedItems').valueChanges\r\n            .subscribe((value: string[]) => {\r\n                this.query = (value.length > 0) ? JSON.stringify(value) : '';\r\n\r\n                this.setFilter();\r\n            });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.query) {\r\n            this.query = changes.query.currentValue;\r\n            this.inputControl.setValue(this.query);\r\n        }\r\n    }\r\n\r\n}","import { NbWindowRef } from '@nebular/theme';\r\nimport { Component, ViewChild, OnInit, Input, TemplateRef } from \"@angular/core\";\r\nimport { ViewCell } from \"ng2-smart-table\";\r\n\r\n@Component({\r\n    selector: 'ngx-custom-action',\r\n    template: `\r\n        <div class=\"row d-flex align-items-center justify-content-center\">\r\n            <div *ngIf=\"value.new === true\">\r\n                <h6><span class=\"badge badge-pill badge-success\">NEW</span></h6>\r\n            </div>\r\n            <div *ngIf=\"value.top === true\" class=\"ml-1\">\r\n                <h6><span class=\"badge badge-pill badge-danger\">TOP</span></h6>\r\n            </div>\r\n            <div *ngIf=\"value.active === true\" class=\"ml-1\">\r\n                <h6><span class=\"badge badge-pill text-white badge-warning\">ACTIVE</span></h6>\r\n            </div>\r\n            <div *ngIf=\"value.sale === true\" class=\"ml-1\">\r\n                <h6><span class=\"badge badge-pill badge-info\">SALE</span></h6>\r\n            </div>\r\n        </div>\r\n    `,\r\n})\r\nexport class CustomProductStatusComponent implements ViewCell, OnInit {\r\n    renderValue: string;\r\n\r\n    @Input() value: string | number | any;\r\n    @Input() rowData: any;\r\n\r\n    @ViewChild('onDeleteTemplate') deleteWindow: TemplateRef<any>;\r\n    deleteWindowRef: NbWindowRef;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void {\r\n        this.value = JSON.parse(this.value);\r\n        this.renderValue = JSON.stringify(this.value);\r\n    }\r\n\r\n}","import { Component, OnInit, Input, ViewChild, TemplateRef, Output, EventEmitter } from \"@angular/core\";\r\nimport { NbWindowRef, NbWindowService } from \"@nebular/theme\";\r\nimport { ProductSaleService } from \"../../../../@core/services/product/product-sale.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ProductService } from \"../../../../@core/services/product/product.service\";\r\nimport { ProductSale } from \"../../../../@core/models/sale/product-sale.model\";\r\n\r\n@Component({\r\n  selector: \"ngx-products-list-multi\",\r\n  templateUrl: \"./product-list-multi.component.html\",\r\n  styleUrls: [\"./product-list-multi.component.scss\"],\r\n})\r\nexport class ProductListMultiComponent {\r\n\r\n  @Input() selectedProducts: any[]\r\n  @Output() isDeleted = new EventEmitter<boolean>();\r\n  @Output() isUpdatedNewStatus = new EventEmitter<boolean>();\r\n  @Output() isUpdatedTopStatus = new EventEmitter<boolean>();\r\n  @Output() isUpdatedActiveStatus = new EventEmitter<boolean>();\r\n  @Output() isUpdatedStatuses = new EventEmitter<boolean>();\r\n\r\n  @Output() isAppliedSale = new EventEmitter<boolean>();\r\n\r\n  @ViewChild('onDeleteTemplate') deleteWindow: TemplateRef<any>;\r\n  deleteWindowRef: NbWindowRef;\r\n\r\n  @ViewChild('onUpdateNewStatusTemplate') updateNewStatusWindow: TemplateRef<any>;\r\n  updateNewStatusWindowRef: NbWindowRef;\r\n\r\n  @ViewChild('onUpdateTopStatusTemplate') updateTopStatusWindow: TemplateRef<any>;\r\n  updateTopStatusWindowRef: NbWindowRef;\r\n\r\n  @ViewChild('onUpdateActiveStatusTemplate') updateActiveStatusWindow: TemplateRef<any>;\r\n  updateActiveStatusWindowRef: NbWindowRef;\r\n\r\n  @ViewChild('onAppliedSaleTemplate') appliedSaleWindow: TemplateRef<any>;\r\n  appliedSaleWindowRef: NbWindowRef;\r\n\r\n  @ViewChild('updateStatusesTemplate') updateStatusesWindow: TemplateRef<any>;\r\n  updateStatusesWindowRef: NbWindowRef;\r\n\r\n  productSales: ProductSale[]\r\n\r\n  newFormGroup: FormGroup\r\n  topFormGroup: FormGroup\r\n  activeFormGroup: FormGroup\r\n  saleFormGroup: FormGroup\r\n  statusesFormGroup: FormGroup\r\n  constructor(\r\n    private productService: ProductService,\r\n    private saleService: ProductSaleService,\r\n    private windowService: NbWindowService,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    this.newFormGroup = formBuilder.group({\r\n      new_: [, Validators.required]\r\n    })\r\n    this.topFormGroup = formBuilder.group({\r\n      top: [, Validators.required]\r\n    })\r\n    this.activeFormGroup = formBuilder.group({\r\n      active: [, Validators.required]\r\n    })\r\n    this.saleFormGroup = formBuilder.group({\r\n      productSale: [null],\r\n    })\r\n    this.statusesFormGroup = formBuilder.group({\r\n      new_: [false],\r\n      top: [false],\r\n      active: [false],\r\n      productSale: [null],\r\n    })\r\n    this.saleService.findAll().subscribe(data => {\r\n      this.productSales = data._embedded.productSales.filter(sale => sale.active != false)\r\n    })\r\n  }\r\n\r\n  openDeleteWindow() {\r\n    this.deleteWindowRef = this.windowService\r\n      .open(this.deleteWindow, { title: `Delete Products` });\r\n  }\r\n  onDelete() {\r\n    this.productService.deleteProducts(this.selectedProducts).subscribe(\r\n      () => {\r\n        this.selectedProducts = []\r\n        this.deleteWindowRef.close()\r\n        this.isDeleted.emit(true);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.isDeleted.emit(false);\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n\r\n  openNewStatusWindow() {\r\n    this.updateNewStatusWindowRef = this.windowService\r\n      .open(this.updateNewStatusWindow, { title: `Update Status New` });\r\n  }\r\n  onUpdateNewStatus() {\r\n    this.productService.updateStatusNew(this.selectedProducts, this.newFormGroup.get('new_').value)\r\n      .subscribe(\r\n        () => {\r\n          this.selectedProducts = []\r\n          this.newFormGroup.reset()\r\n          this.updateNewStatusWindowRef.close()\r\n          this.isUpdatedNewStatus.emit(true);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.isUpdatedNewStatus.emit(false);\r\n        }\r\n      )\r\n  }\r\n\r\n\r\n\r\n  openTopStatusWindow() {\r\n    this.updateTopStatusWindowRef = this.windowService\r\n      .open(this.updateTopStatusWindow, { title: `Update Status Top` });\r\n  }\r\n  onUpdateTopStatus() {\r\n    this.productService.updateStatusTop(this.selectedProducts, this.topFormGroup.get('top').value)\r\n      .subscribe(\r\n        () => {\r\n          this.selectedProducts = []\r\n          this.topFormGroup.reset()\r\n          this.updateTopStatusWindowRef.close()\r\n          this.isUpdatedTopStatus.emit(true);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.isUpdatedTopStatus.emit(false);\r\n        }\r\n      )\r\n  }\r\n\r\n\r\n\r\n\r\n  openActiveStatusWindow() {\r\n    this.updateActiveStatusWindowRef = this.windowService\r\n      .open(this.updateActiveStatusWindow, { title: `Update Status Active` });\r\n  }\r\n  onUpdateActiveStatus() {\r\n    this.productService.updateStatusActive(this.selectedProducts, this.activeFormGroup.get('active').value)\r\n      .subscribe(\r\n        () => {\r\n          this.selectedProducts = []\r\n          this.updateActiveStatusWindowRef.close()\r\n          this.isUpdatedActiveStatus.emit(true);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.isUpdatedActiveStatus.emit(false);\r\n        }\r\n      )\r\n  }\r\n\r\n\r\n\r\n\r\n  openSaleStatusWindow() {\r\n    this.appliedSaleWindowRef = this.windowService\r\n      .open(this.appliedSaleWindow, { title: `Update Product Sale` });\r\n  }\r\n  onAppliedSale() {\r\n    this.productService.appliedProductSale(this.selectedProducts, this.saleFormGroup.get('productSale').value)\r\n      .subscribe(\r\n        (data) => {\r\n          if (data) {\r\n            this.selectedProducts = []\r\n            this.appliedSaleWindowRef.close()\r\n            this.isAppliedSale.emit(true);\r\n          }\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.isAppliedSale.emit(false);\r\n        }\r\n      )\r\n  }\r\n\r\n\r\n\r\n  openUpdateStatusesWindow() {\r\n    this.updateStatusesWindowRef = this.windowService\r\n      .open(this.updateStatusesWindow, { title: `Update Product Status` });\r\n  }\r\n  onUpdateStatuses() {\r\n    this.productService.updateStatuses(this.selectedProducts,\r\n      this.statusesFormGroup.get('new_').value,\r\n      this.statusesFormGroup.get('top').value,\r\n      this.statusesFormGroup.get('active').value,\r\n      this.statusesFormGroup.get('productSale').value)\r\n      .subscribe(\r\n        (data) => {\r\n          if (data) {\r\n            this.selectedProducts = []\r\n            this.updateStatusesWindowRef.close()\r\n            this.isUpdatedStatuses.emit(true);\r\n          }\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.isUpdatedStatuses.emit(false);\r\n        }\r\n      )\r\n  }\r\n\r\n}","<button nbButton status=\"success\" (click)=\"openNewStatusWindow()\" class=\"ml-3\">\r\n    <nb-icon icon=\"edit-outline\"></nb-icon>\r\n    Status New\r\n</button>\r\n\r\n<button nbButton status=\"danger\" (click)=\"openTopStatusWindow()\" class=\"ml-3\">\r\n    <nb-icon icon=\"edit-outline\"></nb-icon>\r\n    Status Top\r\n</button>\r\n\r\n<button nbButton status=\"warning\" (click)=\"openActiveStatusWindow()\" class=\"ml-3\">\r\n    <nb-icon icon=\"edit-outline\"></nb-icon>\r\n    Status Active\r\n</button>\r\n\r\n<button nbButton status=\"info\" (click)=\"openSaleStatusWindow()\" class=\"ml-3\">\r\n    <nb-icon icon=\"edit-outline\"></nb-icon>\r\n    Apply Sale\r\n</button>\r\n\r\n<button nbButton status=\"primary\" (click)=\"openUpdateStatusesWindow()\" class=\"ml-3\">\r\n    <nb-icon icon=\"edit-outline\"></nb-icon>\r\n    Statuses\r\n</button>\r\n\r\n<button nbButton status=\"danger\" (click)=\"openDeleteWindow()\" class=\"ml-3\">\r\n    <nb-icon icon=\"trash-outline\"></nb-icon>\r\n</button>\r\n\r\n<ng-template #onDeleteTemplate let-data>\r\n    <nb-card>\r\n        <nb-card-header>\r\n            Are you sure you want to delete the products?\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <button nbButton status=\"success\" class=\"mt-3\" (click)=\"onDelete()\">\r\n                CONFIRM\r\n            </button>\r\n        </nb-card-body>\r\n    </nb-card>\r\n</ng-template>\r\n\r\n<ng-template #onUpdateNewStatusTemplate let-data>\r\n    <nb-card>\r\n        <nb-card-header [formGroup]=\"newFormGroup\">\r\n            <nb-select fullWidth placeholder=\"Status New\" formControlName=\"new_\">\r\n                <nb-select-label>\r\n                    Status New: {{ newFormGroup.get('new_').value ? 'Enable' : 'Disabled'}}\r\n                </nb-select-label>\r\n                <nb-option [value]=\"true\">Enable</nb-option>\r\n                <nb-option [value]=\"false\">Disabled</nb-option>\r\n            </nb-select>\r\n\r\n            <div class=\"alert alert-danger mt-1\"\r\n                *ngIf=\"newFormGroup.get('new_').invalid && (newFormGroup.get('new_').dirty || newFormGroup.get('new_').touched)\">\r\n                <div *ngIf=\"newFormGroup.get('new_').errors['required']\">\r\n                    Status New is required\r\n                </div>\r\n            </div>\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <button nbButton status=\"success\" class=\"mt-3\" (click)=\"onUpdateNewStatus()\">\r\n                CONFIRM\r\n            </button>\r\n        </nb-card-body>\r\n    </nb-card>\r\n</ng-template>\r\n\r\n<ng-template #onUpdateTopStatusTemplate let-data>\r\n    <nb-card>\r\n        <nb-card-header [formGroup]=\"topFormGroup\">\r\n            <nb-select fullWidth placeholder=\"Status Top\" formControlName=\"top\">\r\n                <nb-select-label>\r\n                    Status Top: {{ topFormGroup.get('top').value ? 'Enable' : 'Disabled'}}\r\n                </nb-select-label>\r\n                <nb-option [value]=\"true\">Enable</nb-option>\r\n                <nb-option [value]=\"false\">Disabled</nb-option>\r\n            </nb-select>\r\n\r\n            <div class=\"alert alert-danger mt-1\"\r\n                *ngIf=\"topFormGroup.get('top').invalid && (topFormGroup.get('top').dirty || topFormGroup.get('top').touched)\">\r\n                <div *ngIf=\"topFormGroup.get('top').errors['required']\">\r\n                    Status Top is required\r\n                </div>\r\n            </div>\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <button nbButton status=\"success\" class=\"mt-3\" (click)=\"onUpdateTopStatus()\">\r\n                CONFIRM\r\n            </button>\r\n        </nb-card-body>\r\n    </nb-card>\r\n</ng-template>\r\n\r\n<ng-template #onUpdateActiveStatusTemplate let-data>\r\n    <nb-card>\r\n        <nb-card-header [formGroup]=\"activeFormGroup\">\r\n            <nb-select fullWidth placeholder=\"Status Active\" formControlName=\"active\">\r\n                <nb-select-label>\r\n                    Status Active: {{ activeFormGroup.get('active').value ? 'Enable' : 'Disabled'}}\r\n                </nb-select-label>\r\n                <nb-option [value]=\"true\">Enable</nb-option>\r\n                <nb-option [value]=\"false\">Disabled</nb-option>\r\n            </nb-select>\r\n\r\n            <div class=\"alert alert-danger mt-1\"\r\n                *ngIf=\"activeFormGroup.get('active').invalid && (activeFormGroup.get('active').dirty || activeFormGroup.get('active').touched)\">\r\n                <div *ngIf=\"activeFormGroup.get('active').errors['required']\">\r\n                    Status Active is required\r\n                </div>\r\n            </div>\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <button nbButton status=\"success\" class=\"mt-3\" (click)=\"onUpdateActiveStatus()\">\r\n                CONFIRM\r\n            </button>\r\n        </nb-card-body>\r\n    </nb-card>\r\n</ng-template>\r\n\r\n<ng-template #onAppliedSaleTemplate let-data>\r\n    <nb-card>\r\n        <nb-card-header [formGroup]=\"saleFormGroup\">\r\n            <nb-select fullWidth placeholder=\"Product Sale\" formControlName=\"productSale\">\r\n                <nb-select-label>\r\n                    Sale: \r\n                    {{ saleFormGroup.get('productSale').value !== null ? saleFormGroup.get('productSale').value['saleName'] : null}}\r\n                </nb-select-label>\r\n                <nb-option>Reset</nb-option>\r\n                <nb-option *ngFor=\"let sale of productSales \" [value]=\"sale\">\r\n                    <div class=\"sale-item\">\r\n                        <div class=\"sale-info\">\r\n                            <p>\r\n                                <b>\r\n                                    {{ sale.saleName | uppercase }} -\r\n                                    {{(sale.productSaleType.typeName === 'Fixed') ? ('$' +\r\n                                    sale.discount) : (sale.discount + '%') }}\r\n                                </b>\r\n                            </p>\r\n                            <p>{{ sale.startedAt | date }} - {{ sale.expiredAt | date }}</p>\r\n                            <p>Desc: {{ sale.description }}</p>\r\n                        </div>\r\n                    </div>\r\n                </nb-option>\r\n            </nb-select>\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <button nbButton status=\"success\" class=\"mt-3\" (click)=\"onAppliedSale()\">\r\n                CONFIRM\r\n            </button>\r\n        </nb-card-body>\r\n    </nb-card>\r\n</ng-template>\r\n\r\n<ng-template #updateStatusesTemplate let-data>\r\n    <nb-card>\r\n        <nb-card-header [formGroup]=\"statusesFormGroup\">\r\n            <div class=\"row px-0\">\r\n                <div class=\"col-lg-6 col-md-12\">\r\n                    <nb-select fullWidth placeholder=\"New\" formControlName=\"new_\">\r\n                        <nb-select-label>\r\n                            New: {{ statusesFormGroup.get('new_').value ? 'Enable' : 'Disabled'}}\r\n                        </nb-select-label>\r\n                        <nb-option [value]=\"true\">Enable</nb-option>\r\n                        <nb-option [value]=\"false\">Disabled</nb-option>\r\n                    </nb-select>\r\n                </div>\r\n                <div class=\"col-lg-6 col-md-12\">\r\n                    <nb-select fullWidth placeholder=\"Top\" formControlName=\"top\">\r\n                        <nb-select-label>\r\n                            Top: {{ statusesFormGroup.get('top').value ? 'Enable' : 'Disabled'}}\r\n                        </nb-select-label>\r\n                        <nb-option [value]=\"true\">Enable</nb-option>\r\n                        <nb-option [value]=\"false\">Disabled</nb-option>\r\n                    </nb-select>\r\n                </div>\r\n                <div class=\"col-lg-6 col-md-12 mt-3\">\r\n                    <nb-select fullWidth placeholder=\"Active\" formControlName=\"active\">\r\n                        <nb-select-label>\r\n                            Active: {{ statusesFormGroup.get('active').value ? 'Enable' : 'Disabled'}}\r\n                        </nb-select-label>\r\n                        <nb-option [value]=\"true\">Enable</nb-option>\r\n                        <nb-option [value]=\"false\">Disabled</nb-option>\r\n                    </nb-select>\r\n                </div>\r\n                <div class=\"col-lg-6 col-md-12 mt-3\">\r\n                    <nb-select fullWidth placeholder=\"Product Sale\" formControlName=\"productSale\">\r\n                        <nb-select-label>\r\n                            Sale: \r\n                            {{ statusesFormGroup.get('productSale').value !== null ? statusesFormGroup.get('productSale').value['saleName'] : null}}\r\n                        </nb-select-label>\r\n                        <nb-option>Reset</nb-option>\r\n                        <nb-option *ngFor=\"let sale of productSales \" [value]=\"sale\">\r\n                            <div class=\"sale-item\">\r\n                                <div class=\"sale-info\">\r\n                                    <p>\r\n                                        <b>\r\n                                            {{ sale.saleName | uppercase }} -\r\n                                            {{(sale.productSaleType.typeName === 'Fixed') ? ('$' +\r\n                                            sale.discount) : (sale.discount + '%') }}\r\n                                        </b>\r\n                                    </p>\r\n                                    <p>{{ sale.startedAt | date }} - {{ sale.expiredAt | date }}</p>\r\n                                    <p>Desc: {{ sale.description }}</p>\r\n                                </div>\r\n                            </div>\r\n                        </nb-option>\r\n                    </nb-select>\r\n                </div>\r\n            </div>\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <button nbButton status=\"success\" class=\"mt-3\" (click)=\"onUpdateStatuses()\">\r\n                CONFIRM\r\n            </button>\r\n        </nb-card-body>\r\n    </nb-card>\r\n</ng-template>","import { takeUntil } from 'rxjs/operators';\r\nimport { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { CustomProductActionComponent } from './custom/custom-product-action.component';\r\nimport { CustomProductFilterActionsComponent } from './custom/custom-product-filter-actions.component';\r\nimport { ProductService } from '../../../@core/services/product/product.service';\r\nimport { CatalogService } from '../../../@core/services/product/product-catalog.service';\r\nimport { forkJoin, Subject } from 'rxjs';\r\nimport { PRODUCT_IMAGE_DIRECTORY } from '../../../@core/utils/image-storing-directory';\r\nimport { ProductSale } from '../../../@core/models/sale/product-sale.model';\r\nimport { ProductSaleService } from '../../../@core/services/product/product-sale.service';\r\nimport { CustomProductStatusComponent } from './custom/custom-product-status.component';\r\nimport { CustomProductStatusFilterComponent } from './custom/custom-product-status-filter.component';\r\nimport { ToastState, UtilsService } from '../../../@core/services/utils.service';\r\nimport { Catalog } from '../../../@core/models/product/catalog.model';\r\nimport { CustomCatalogImageComponent } from '../product-catalog/custom/custom-catalog-image.component';\r\nimport { PlantingDifficultyLevel } from '../../../@core/models/product/planting-difficulty-level.model';\r\nimport { PlantingDifficultyLevelService } from '../../../@core/services/product/planting-difficulty-level.service';\r\n\r\n@Component({\r\n  selector: 'ngx-product-list',\r\n  templateUrl: './product-list.component.html',\r\n  styleUrls: ['./product-list.component.scss']\r\n})\r\nexport class ProductListComponent implements OnInit, AfterViewInit {\r\n  private unsubscribe = new Subject<void>();\r\n  numberOfItem: number = localStorage.getItem('itemPerPage') != null ? +localStorage.getItem('itemPerPage') : 5;\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  loadedList: boolean = false;\r\n  // Setting for List layout\r\n  catalogs: Catalog[];\r\n  sales: ProductSale[];\r\n  levels: PlantingDifficultyLevel[]\r\n\r\n  // for select multi\r\n  selectedProducts: any[] = []\r\n  settings = {\r\n    selectMode: 'multi',\r\n    actions: {\r\n      position: 'right',\r\n      edit: false,\r\n      delete: false,\r\n      add: false,\r\n      columnTitle: ''\r\n    },\r\n    columns: {},\r\n    pager: {\r\n      display: true,\r\n      perPage: this.numberOfItem\r\n    },\r\n  };\r\n\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private catalogService: CatalogService,\r\n    private saleService: ProductSaleService,\r\n    private utilsService: UtilsService,\r\n    private levelService: PlantingDifficultyLevelService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const catalog$ = this.catalogService.findAll();\r\n    const sale$ = this.saleService.findAll();\r\n    const level$ = this.levelService.findAll();\r\n\r\n    forkJoin([catalog$, sale$, level$]).subscribe(\r\n      ([catalogData, saleData, levelData]) => {\r\n        this.catalogs = catalogData;\r\n        this.sales = saleData._embedded.productSales;\r\n        this.levels = levelData._embedded.plantingDifficultyLevels\r\n\r\n        this.settings = {\r\n          selectMode: 'multi',\r\n          actions: {\r\n            position: 'right',\r\n            edit: false,\r\n            delete: false,\r\n            add: false,\r\n            columnTitle: ''\r\n          },\r\n          columns: {\r\n            image: {\r\n              title: 'Image',\r\n              type: 'custom',\r\n              sort: false,\r\n              filter: false,\r\n              renderComponent: CustomCatalogImageComponent\r\n            },\r\n            productId: {\r\n              title: 'ID',\r\n              type: 'number',\r\n              width: '3%'\r\n            },\r\n            productName: {\r\n              title: 'Name',\r\n              type: 'string',\r\n            },\r\n            difficulty: {\r\n              title: 'Difficulty',\r\n              type: 'string',\r\n              width: \"8%\",\r\n              filter: {\r\n                type: 'list',\r\n                config: {\r\n                  selectText: 'Difficulty...',\r\n                  list: this.levels.map(level => {\r\n                    return { value: level.level, title: level.level }\r\n                  }),\r\n                },\r\n              },\r\n            },\r\n            catalog: {\r\n              title: 'Catalog',\r\n              type: 'string',\r\n              width: \"8%\",\r\n              filter: {\r\n                type: 'list',\r\n                config: {\r\n                  selectText: 'Catalog...',\r\n                  list: this.catalogs.map(cata => {\r\n                    return { value: cata.catalogName, title: cata.catalogName }\r\n                  }),\r\n                },\r\n              },\r\n            },\r\n            sale: {\r\n              title: 'Sale',\r\n              type: 'string',\r\n              width: \"8%\",\r\n              filter: {\r\n                type: 'list',\r\n                config: {\r\n                  selectText: 'Sale...',\r\n                  list: this.sales.map(sale => {\r\n                    return { value: sale.saleName, title: sale.saleName }\r\n                  })\r\n                },\r\n              },\r\n            },\r\n            totalSold: {\r\n              title: 'Sold',\r\n              type: 'number',\r\n              width: '5%'\r\n            },\r\n            totalLikes: {\r\n              title: 'Likes',\r\n              type: 'number',\r\n              width: '5%'\r\n            },\r\n            totalRating: {\r\n              title: 'Rating',\r\n              type: 'number',\r\n              width: '5%'\r\n            },\r\n            status: {\r\n              title: 'Status',\r\n              type: 'custom',\r\n              sort: false,\r\n              width: \"7%\",\r\n              filter: {\r\n                type: 'custom',\r\n                component: CustomProductStatusFilterComponent,\r\n              },\r\n              renderComponent: CustomProductStatusComponent,\r\n              filterFunction: (value, query) => {\r\n                value = JSON.parse(value)\r\n                query = JSON.parse(query)\r\n                const result: boolean = query.every((status) => value[status] === true);\r\n                value = JSON.stringify(value);\r\n                query = JSON.stringify(query);\r\n\r\n                return result\r\n              }\r\n            },\r\n            actions: {\r\n              title: 'Actions',\r\n              type: 'custom',\r\n              sort: false,\r\n              filter: {\r\n                type: 'custom',\r\n                component: CustomProductFilterActionsComponent,\r\n              },\r\n              renderComponent: CustomProductActionComponent\r\n            }\r\n          },\r\n          pager: {\r\n            display: true,\r\n            perPage: this.numberOfItem\r\n          },\r\n        };\r\n\r\n        this.productService.productChange$\r\n          .pipe(takeUntil(this.unsubscribe))\r\n          .subscribe(() => {\r\n            this.loadProducts();\r\n          });\r\n        this.loadProducts();\r\n        this.loadedList = true\r\n      },\r\n      (error: any) => {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    );\r\n  }\r\n\r\n  loadProducts() {\r\n    this.productService.findAll().subscribe(\r\n      data => {\r\n        const mappedProducts: any[] = data.reverse().map(pro => {\r\n          return {\r\n            productId: pro.productId,\r\n            productName: pro.productName,\r\n            catalog: pro.catalog != null ? pro.catalog.catalogName : null,\r\n            sale: pro.productSale != null ? pro.productSale.saleName : null,\r\n            difficulty: pro.plantingDifficultyLevel != null ? pro.plantingDifficultyLevel.level : null,\r\n            image: PRODUCT_IMAGE_DIRECTORY + pro.imageUrl,\r\n            status: JSON.stringify({\r\n              new: pro.new_,\r\n              top: pro.top,\r\n              active: pro.active,\r\n              sale: pro.sale,\r\n            }),\r\n            totalSold: pro.totalSold,\r\n            totalLikes: pro.totalLikes,\r\n            totalRating: pro.totalRating,\r\n          }\r\n        })\r\n        this.source.load(mappedProducts)\r\n      })\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const pager = document.querySelector('ng2-smart-table-pager');\r\n    if (pager != null) {\r\n      pager.classList.add('d-block')\r\n    }\r\n  }\r\n\r\n  onRowSelect(event: any): void {\r\n    this.selectedProducts = (event.selected)\r\n\r\n  }\r\n\r\n  onDelete(isDeleted: boolean) {\r\n    if (isDeleted) {\r\n      this.loadProducts();\r\n      this.selectedProducts = []\r\n      this.utilsService.updateToastState(new ToastState('Delete The Product\\'s Status Successfully!', \"success\"))\r\n    } else {\r\n      this.utilsService.updateToastState(new ToastState('Delete The Product\\'s Status Failed!', \"danger\"))\r\n    }\r\n  }\r\n\r\n  onUpdateNewStatus(isUpdated: boolean) {\r\n    if (isUpdated) {\r\n      this.selectedProducts = []\r\n      this.loadProducts();\r\n      this.utilsService.updateToastState(new ToastState(\"Updated The Product's Status New Successfully!\", \"success\"))\r\n    } else {\r\n      this.utilsService.updateToastState(new ToastState(\"Updated The Product's Status New Failed!\", \"danger\"))\r\n    }\r\n  }\r\n\r\n  onUpdateTopStatus(isUpdated: boolean) {\r\n    if (isUpdated) {\r\n      this.selectedProducts = []\r\n      this.loadProducts();\r\n      this.utilsService.updateToastState(new ToastState(\"Updated The Product's Status Top Successfully!\", \"success\"))\r\n    } else {\r\n      this.utilsService.updateToastState(new ToastState(\"Updated The Product's Status Top Failed!\", \"danger\"))\r\n    }\r\n  }\r\n\r\n  onUpdateActiveStatus(isUpdated: boolean) {\r\n    if (isUpdated) {\r\n      this.selectedProducts = []\r\n      this.loadProducts();\r\n      this.utilsService.updateToastState(new ToastState(\"Updated The Product's Status Active Successfully!\", \"success\"))\r\n    } else {\r\n      this.utilsService.updateToastState(new ToastState(\"Updated The Product's Status Active Failed!\", \"danger\"))\r\n    }\r\n  }\r\n\r\n  onAppliedSale(isAppliedSale: boolean) {\r\n    if (isAppliedSale) {\r\n      this.selectedProducts = []\r\n      this.loadProducts();\r\n      this.utilsService.updateToastState(new ToastState(\"Updated The Product's Sale Successfully!\", \"success\"))\r\n    } else {\r\n      this.utilsService.updateToastState(new ToastState(\"Updated The Product's Sale Failed!\", \"danger\"))\r\n    }\r\n  }\r\n\r\n  onUpdateStatuses(isUpdated: boolean) {\r\n    if (isUpdated) {\r\n      this.selectedProducts = []\r\n      this.loadProducts();\r\n      this.utilsService.updateToastState(new ToastState(\"Updated Statuses Successfully!\", \"success\"))\r\n    } else {\r\n      this.utilsService.updateToastState(new ToastState(\"Updated Statuses Failed!\", \"danger\"))\r\n    }\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadedList; else loadingBlock\">\n    <nb-card>\n        <nb-card-header class=\"d-flex justify-content-between align-items-center\">\n            <h6>\n                Product List\n            </h6>\n            <ngx-item-of-list (selectNumberOfItem)=\"source.setPaging(1, $event)\"></ngx-item-of-list>\n        </nb-card-header>\n        <nb-card-body>\n            <ng2-smart-table \n                id=\"product-table\" [settings]=\"settings\"\n                [source]=\"source\" [ngClass]=\"'smart-table'\"\n                (userRowSelect)=\"onRowSelect($event)\">\n            </ng2-smart-table>\n        </nb-card-body>\n        <nb-card-footer>\n            <ng-container *ngIf=\"selectedProducts.length > 0\">\n                <ngx-products-list-multi \n                    [selectedProducts]=\"selectedProducts\"\n                    (isDeleted)=\"onDelete($event)\"\n                    (isUpdatedNewStatus)=\"onUpdateNewStatus($event)\"\n                    (isUpdatedTopStatus)=\"onUpdateTopStatus($event)\"\n                    (isUpdatedActiveStatus)=\"onUpdateActiveStatus($event)\"\n                    (isAppliedSale)=\"onAppliedSale($event)\"\n                    (isUpdatedStatuses)=\"onUpdateStatuses($event)\">\n                </ngx-products-list-multi>\n            </ng-container>\n        </nb-card-footer>\n    </nb-card>\n</ng-container>\n\n<ng-template #loadingBlock>\n    <nb-card [size]=\"'large'\" [nbSpinner]=\"!loadedList\" nbSpinnerSize=\"large\" nbSpinnerStatus=\"primary\" >\n    </nb-card>\n</ng-template>\n","import { NbWindowRef, NbWindowService } from '@nebular/theme';\r\nimport { Component, ViewChild, OnInit, Input, TemplateRef } from \"@angular/core\";\r\nimport { ViewCell } from \"ng2-smart-table\";\r\nimport { ToastState, UtilsService } from '../../../../@core/services/utils.service';\r\nimport { ProductSaleService } from '../../../../@core/services/product/product-sale.service';\r\n\r\n@Component({\r\n    selector: 'ngx-custom-action',\r\n    template: `\r\n        <div class=\"row no-gutters\">\r\n            <div class=\"col-lg-6 d-flex justify-content-center\">\r\n                <button nbButton status=\"warning\" (click)=\"onEdit()\">\r\n                    <nb-icon icon=\"edit-2-outline\"></nb-icon>\r\n                </button>\r\n            </div>\r\n            <div class=\"col-lg-6 d-flex justify-content-center\">\r\n                <button nbButton status=\"danger\" (click)=\"onDelete($event)\">\r\n                    <nb-icon icon=\"trash-outline\"></nb-icon>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <ng-template #onDeleteTemplate let-data>\r\n            <nb-card>\r\n                <nb-card-header>\r\n                        Are you sure you want to delete this sale?\r\n                </nb-card-header>\r\n                <nb-card-body>\r\n                    <button nbButton status=\"success\" class=\"mt-3\" (click)=\"deleteSale()\">\r\n                        CONFIRM\r\n                    </button>\r\n                </nb-card-body>\r\n            </nb-card>\r\n        </ng-template>\r\n    `,\r\n})\r\n\r\nexport class CustomSaleActionComponent implements ViewCell {\r\n    renderValue: string;\r\n\r\n    @Input() value: string | number;\r\n    @Input() rowData: any;\r\n\r\n    @ViewChild('onDeleteTemplate') deleteWindow: TemplateRef<any>;\r\n    deleteWindowRef: NbWindowRef;\r\n\r\n    constructor(\r\n        private saleService: ProductSaleService,\r\n        private windowService: NbWindowService,\r\n        private utilsService: UtilsService,\r\n    ) {\r\n    }\r\n\r\n    onEdit() {\r\n        this.saleService.updateHandleAndRowData('edit', this.rowData);\r\n    }\r\n\r\n    onDelete(event: any) {\r\n        this.deleteWindowRef = this.windowService\r\n            .open(this.deleteWindow, { title: `Delete Product Sale` });\r\n    }\r\n\r\n    deleteSale() {\r\n        this.saleService.delete(this.rowData.productSaleId).subscribe(\r\n            data => {\r\n                this.deleteWindowRef.close()\r\n                this.saleService.notifyProductSaleChange();\r\n                this.utilsService.updateToastState(new ToastState('Delete Sale Successfully!', \"success\"))\r\n            },\r\n            error => {\r\n                this.utilsService.updateToastState(new ToastState('Delete Sale Failed!', \"danger\"))\r\n                console.log(error);\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n}","import { NbWindowRef } from '@nebular/theme';\r\nimport { Component, ViewChild, OnInit, Input, TemplateRef } from \"@angular/core\";\r\nimport { ViewCell } from \"ng2-smart-table\";\r\n\r\n@Component({\r\n    selector: 'ngx-custom-action',\r\n    template: `\r\n        <div *ngIf=\"renderValue==='true'\">\r\n            <h6><span class=\"badge badge-pill badge-success\">Active</span></h6>\r\n        </div>\r\n        <div *ngIf=\"renderValue==='false'\">\r\n            <h6><span class=\"badge badge-pill badge-danger\">Inactive</span></h6>\r\n        </div>\r\n    `,\r\n})\r\nexport class CustomSaleActiveActionComponent implements ViewCell, OnInit {\r\n    renderValue: string;\r\n\r\n    @Input() value: string | number;\r\n    @Input() rowData: any;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void {\r\n        this.renderValue = this.rowData.active.toString()\r\n    }\r\n\r\n}","import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { DefaultFilter } from 'ng2-smart-table';\r\nimport { ProductSaleService } from '../../../../@core/services/product/product-sale.service';\r\n\r\n@Component({\r\n    template: `\r\n        <button nbButton fullWidth=\"\" status=\"primary\" \r\n            (click)=\"onAdd()\">\r\n            <nb-icon icon=\"plus-square-outline\"></nb-icon>\r\n        </button>\r\n    `,\r\n})\r\nexport class CustomSaleFilterActionsComponent extends DefaultFilter implements OnInit, OnChanges {\r\n\r\n    constructor(private saleService: ProductSaleService) {\r\n        super()\r\n    }\r\n\r\n    onAdd() {\r\n        this.saleService.updateHandleAndRowData('add');\r\n    }\r\n\r\n    ngOnInit() {let x}\r\n\r\n    ngOnChanges(changes: SimpleChanges) {let x}\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ToastState, UtilsService } from \"../../../../@core/services/utils.service\";\r\nimport { CustomValidator } from \"../../../../@core/validators/custom-validator\";\r\nimport { ProductSaleService } from \"../../../../@core/services/product/product-sale.service\";\r\nimport { ProductSale } from \"../../../../@core/models/sale/product-sale.model\";\r\n\r\n@Component({\r\n  selector: \"ngx-products-sale-add\",\r\n  templateUrl: \"./product-sale-add.component.html\",\r\n  styleUrls: [\"./product-sale-add.component.scss\"],\r\n})\r\nexport class ProductSaleAddComponent implements OnInit {\r\n  addSaleFormGroup: FormGroup;\r\n\r\n  constructor(\r\n    private saleService: ProductSaleService,\r\n    private formBuilder: FormBuilder,\r\n    private utilsService: UtilsService,\r\n  ) {\r\n    this.addSaleFormGroup = this.formBuilder.group({\r\n      name: ['', [CustomValidator.notBlank, Validators.maxLength(50)]],\r\n      description: ['', [CustomValidator.notBlank, Validators.maxLength(50)]],\r\n      discountType: ['', [Validators.required]],\r\n      active: [false],\r\n      discountValue: [, [Validators.required, CustomValidator.maxCouponValue]],\r\n      startedAt: [, Validators.required],\r\n      expiredAt: [, Validators.required]\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    let x\r\n  }\r\n\r\n  submitAddSale() {\r\n    if (this.addSaleFormGroup.invalid) {\r\n      this.addSaleFormGroup.markAllAsTouched();\r\n      this.utilsService.updateToastState(new ToastState('Add Product Sale Failed!', \"danger\"))\r\n      return;\r\n    }\r\n\r\n    const sale = this.mapFormValue()\r\n    console.log(sale);\r\n\r\n    this.saleService.insert(sale).subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.utilsService.updateToastState(new ToastState('Add Product Sale Successfully!', \"success\"))\r\n          this.saleService.notifyProductSaleChange()\r\n          this.addSaleFormGroup.reset()\r\n\r\n        }\r\n      },\r\n      error => {\r\n        console.log(error.error.message)\r\n        this.utilsService.updateToastState(new ToastState('Add Product Sale Failed!', \"danger\"))\r\n      }\r\n    )\r\n  }\r\n\r\n  mapFormValue(): ProductSale {\r\n    let sale = new ProductSale();\r\n    sale.saleName = this.addSaleFormGroup.get('name').value\r\n    sale.discount = this.addSaleFormGroup.get('discountValue').value\r\n    sale.description = this.addSaleFormGroup.get('description').value\r\n    sale.productSaleType = this.saleService.findProductSaleTypeById(this.addSaleFormGroup.get('discountType').value == 'Fixed' ? 1 : 2);\r\n    sale.active = this.addSaleFormGroup.get('active').value\r\n    sale.startedAt = this.addSaleFormGroup.get('startedAt').value\r\n    sale.expiredAt = this.addSaleFormGroup.get('expiredAt').value\r\n    return sale;\r\n  }\r\n\r\n}","<form [formGroup]=\"addSaleFormGroup\" (ngSubmit)=\"submitAddSale()\">\r\n    <nb-card>\r\n        <nb-card-header>\r\n            Add A New Product Sale\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <input type=\"text\" nbInput fullWidth placeholder=\"Sale Name\" formControlName=\"name\">\r\n            <div class=\"alert alert-danger mt-0 mb-3\"\r\n                *ngIf=\"addSaleFormGroup.get('name').invalid && (addSaleFormGroup.get('name').dirty || addSaleFormGroup.get('name').touched)\">\r\n                <div *ngIf=\"addSaleFormGroup.get('name').errors['notblank']\">\r\n                    Sale name is required\r\n                </div>\r\n\r\n                <div *ngIf=\"addSaleFormGroup.get('name').errors['maxlength']\">\r\n                    Sale Name must not exceed 50 characters\r\n                </div>\r\n            </div>\r\n\r\n            <textarea rows=\"3\" nbInput fullWidth placeholder=\"Short Description\" formControlName=\"description\"\r\n                style=\"resize: none\"></textarea>\r\n            <div class=\"alert alert-danger mt-0 mb-3\"\r\n                *ngIf=\"addSaleFormGroup.get('description').invalid && (addSaleFormGroup.get('description').dirty || addSaleFormGroup.get('description').touched)\">\r\n                <div *ngIf=\"addSaleFormGroup.get('description').errors['notblank']\">\r\n                    Sale description is required\r\n                </div>\r\n\r\n                <div *ngIf=\"addSaleFormGroup.get('description').errors['maxlength']\">\r\n                    Sale description must not exceed 50 characters\r\n                </div>\r\n            </div>\r\n\r\n            <nb-select fullWidth selected=\"1\" placeholder=\"Discount Type\" formControlName=\"discountType\">\r\n                <nb-select-label>\r\n                    Type: {{ addSaleFormGroup.get('discountType').value }}\r\n                </nb-select-label>\r\n                <nb-option value=\"Fixed\">Fixed</nb-option>\r\n                <nb-option value=\"Percent\">Percent</nb-option>\r\n            </nb-select>\r\n            <div class=\"alert alert-danger mt-0 mb-3\"\r\n                *ngIf=\"addSaleFormGroup.get('discountType').invalid && (addSaleFormGroup.get('discountType').dirty || addSaleFormGroup.get('discountType').touched)\">\r\n                <div *ngIf=\"addSaleFormGroup.get('discountType').errors['required']\">\r\n                    Discount Type is required\r\n                </div>\r\n            </div>\r\n\r\n            <input type=\"number\" nbInput fullWidth placeholder=\"Discount Value\" formControlName=\"discountValue\">\r\n            <div class=\"alert alert-danger mt-0 mb-3\"\r\n                *ngIf=\"addSaleFormGroup.get('discountValue').invalid && (addSaleFormGroup.get('discountValue').dirty || addSaleFormGroup.get('discountValue').touched)\">\r\n                <div *ngIf=\"addSaleFormGroup.get('discountValue').errors['required']\">\r\n                    Discount Value is required\r\n                </div>\r\n\r\n                <div *ngIf=\"addSaleFormGroup.get('discountValue').errors['max']\">\r\n                    Discount Value must not be larger than 100%\r\n                </div>\r\n            </div>\r\n\r\n            <input nbInput fullWidth placeholder=\"Start Date\" [nbDatepicker]=\"startDate\" formControlName=\"startedAt\">\r\n            <nb-datepicker #startDate></nb-datepicker>\r\n            <div class=\"alert alert-danger mt-2 mb-3\"\r\n                *ngIf=\"addSaleFormGroup.get('startedAt').invalid && (addSaleFormGroup.get('startedAt').dirty || addSaleFormGroup.get('startedAt').touched)\">\r\n                <div *ngIf=\"addSaleFormGroup.get('startedAt').errors['required']\">\r\n                    Start Date is required\r\n                </div>\r\n            </div>\r\n            <input nbInput fullWidth placeholder=\"Expire Date\" [nbDatepicker]=\"expireDate\" formControlName=\"expiredAt\">\r\n            <nb-datepicker #expireDate></nb-datepicker>\r\n            <div class=\"alert alert-danger mt-2 mb-3\"\r\n                *ngIf=\"addSaleFormGroup.get('expiredAt').invalid && (addSaleFormGroup.get('expiredAt').dirty || addSaleFormGroup.get('expiredAt').touched)\">\r\n                <div *ngIf=\"addSaleFormGroup.get('expiredAt').errors['required']\">\r\n                    Expire Date is required\r\n                </div>\r\n            </div>\r\n\r\n            <nb-checkbox (checkedChange)=\"addSaleFormGroup.get('active').setValue($event)\" status=\"success\"\r\n                [checked]=\"addSaleFormGroup.get('active').value\">\r\n                Active\r\n            </nb-checkbox>\r\n\r\n        </nb-card-body>\r\n        <nb-card-footer>\r\n            <div class=\"d-flex justify-content-between\">\r\n                <button nbButton status=\"success\">Create</button>\r\n            </div>\r\n        </nb-card-footer>\r\n    </nb-card>\r\n</form>","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ToastState, UtilsService } from \"../../../../@core/services/utils.service\";\r\nimport { CustomValidator } from \"../../../../@core/validators/custom-validator\";\r\nimport { ProductSale } from \"../../../../@core/models/sale/product-sale.model\";\r\nimport { ProductSaleService } from \"../../../../@core/services/product/product-sale.service\";\r\n\r\n@Component({\r\n  selector: \"ngx-products-sale-edit\",\r\n  templateUrl: \"./product-sale-edit.component.html\",\r\n  styleUrls: [\"./product-sale-edit.component.scss\"],\r\n})\r\nexport class ProductSaleEditComponent implements OnInit {\r\n  editSaleFormGroup: FormGroup;\r\n\r\n  constructor(\r\n    private saleService: ProductSaleService,\r\n    private formBuilder: FormBuilder,\r\n    private utilsService: UtilsService,\r\n  ) {\r\n    this.editSaleFormGroup = this.formBuilder.group({\r\n      id: [],\r\n      name: ['', [CustomValidator.notBlank, Validators.maxLength(50)]],\r\n      description: ['', [CustomValidator.notBlank, Validators.maxLength(50)]],\r\n      discountType: ['', [Validators.required]],\r\n      active: [false],\r\n      discountValue: [, [Validators.required, CustomValidator.maxCouponValue]],\r\n      startedAt: [, Validators.required],\r\n      expiredAt: [, Validators.required]\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.saleService.rowData$.subscribe((rowData) => {\r\n      if (rowData) {\r\n        this.editSaleFormGroup.get('id').setValue(rowData.productSaleId)\r\n        this.editSaleFormGroup.get('name').setValue(rowData.saleName)\r\n        this.editSaleFormGroup.get('description').setValue(rowData.description)\r\n        if (rowData.discount.toString().indexOf('%') > -1) {\r\n          this.editSaleFormGroup.get('discountType').setValue('Percent')\r\n          this.editSaleFormGroup.get('discountValue').setValue(+rowData.discount.toString().slice(0, -1))\r\n        } else {\r\n          this.editSaleFormGroup.get('discountType').setValue('Fixed')\r\n          this.editSaleFormGroup.get('discountValue').setValue(+rowData.discount.toString().slice(1))\r\n        }\r\n        this.editSaleFormGroup.get('startedAt')\r\n          .setValue(this.utilsService.parseStringToDate(rowData.startedAt.toString()))\r\n        this.editSaleFormGroup.get('expiredAt')\r\n          .setValue(this.utilsService.parseStringToDate(rowData.expiredAt.toString()))\r\n        this.editSaleFormGroup.get('active').setValue(rowData.active)\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  submitEditSale() {\r\n    if (this.editSaleFormGroup.invalid) {\r\n      this.editSaleFormGroup.markAllAsTouched();\r\n      this.utilsService.updateToastState(new ToastState('Edit Product Sale Failed!', \"danger\"))\r\n      return;\r\n    }\r\n\r\n    const sale = this.mapFormValue();\r\n    console.log(sale);\r\n\r\n    this.saleService.update(sale).subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.utilsService.updateToastState(new ToastState('Edit Product Sale Successfully!', \"success\"))\r\n          this.saleService.updateHandleAndRowData('add');\r\n          this.saleService.notifyProductSaleChange();\r\n        } else {\r\n          this.utilsService.updateToastState(new ToastState('Edit Product Sale Failed!', \"danger\"))\r\n        }\r\n      },\r\n      error => {\r\n        this.utilsService.updateToastState(new ToastState('Edit Product Sale Failed!', \"danger\"))\r\n        console.log(error)\r\n      }\r\n    )\r\n  }\r\n\r\n  mapFormValue(): ProductSale {\r\n    let sale: ProductSale = new ProductSale();\r\n    sale.productSaleId = this.editSaleFormGroup.get('id').value\r\n    sale.saleName = this.editSaleFormGroup.get('name').value\r\n    sale.discount = this.editSaleFormGroup.get('discountValue').value\r\n    sale.description = this.editSaleFormGroup.get('description').value\r\n    sale.productSaleType = this.saleService.findProductSaleTypeById(this.editSaleFormGroup.get('discountType').value == 'Fixed' ? 1 : 2);\r\n    sale.active = this.editSaleFormGroup.get('active').value\r\n    sale.startedAt = this.editSaleFormGroup.get('startedAt').value\r\n    sale.expiredAt = this.editSaleFormGroup.get('expiredAt').value\r\n    return sale\r\n  }\r\n}\r\n","<nb-card [formGroup]=\"editSaleFormGroup\">\r\n    <nb-card-header>\r\n        Edit Product Sale Id: {{editSaleFormGroup.get('id').value}}\r\n    </nb-card-header>\r\n    <nb-card-body>\r\n        <input type=\"text\" nbInput fullWidth placeholder=\"Sale Name\" formControlName=\"name\">\r\n        <div class=\"alert alert-danger mt-0 mb-3\"\r\n            *ngIf=\"editSaleFormGroup.get('name').invalid && (editSaleFormGroup.get('name').dirty || editSaleFormGroup.get('name').touched)\">\r\n            <div *ngIf=\"editSaleFormGroup.get('name').errors['notblank']\">\r\n                Product Sale name is required\r\n            </div>\r\n\r\n            <div *ngIf=\"editSaleFormGroup.get('name').errors['maxlength']\">\r\n                Product Sale name must not exceed 50 characters\r\n            </div>\r\n        </div>\r\n\r\n        <textarea rows=\"3\" nbInput fullWidth placeholder=\"Short Description\" formControlName=\"description\"\r\n            style=\"resize: none\"></textarea>\r\n        <div class=\"alert alert-danger mt-0 mb-3\"\r\n            *ngIf=\"editSaleFormGroup.get('description').invalid && (editSaleFormGroup.get('description').dirty || editSaleFormGroup.get('description').touched)\">\r\n            <div *ngIf=\"editSaleFormGroup.get('description').errors['notblank']\">\r\n                Product Sale description is required\r\n            </div>\r\n\r\n            <div *ngIf=\"editSaleFormGroup.get('description').errors['maxlength']\">\r\n                Product Sale description must not exceed 50 characters\r\n            </div>\r\n        </div>\r\n\r\n        <nb-select fullWidth selected=\"1\" placeholder=\"Discount Type\" formControlName=\"discountType\">\r\n            <nb-select-label>\r\n                Type: {{ editSaleFormGroup.get('discountType').value }}\r\n            </nb-select-label>\r\n            <nb-option value=\"Fixed\">Fixed</nb-option>\r\n            <nb-option value=\"Percent\">Percent</nb-option>\r\n        </nb-select>\r\n        <div class=\"alert alert-danger mt-0 mb-3\"\r\n            *ngIf=\"editSaleFormGroup.get('discountType').invalid && (editSaleFormGroup.get('discountType').dirty || editSaleFormGroup.get('discountType').touched)\">\r\n            <div *ngIf=\"editSaleFormGroup.get('discountType').errors['required']\">\r\n                Discount Type is required\r\n            </div>\r\n        </div>\r\n\r\n        <input type=\"number\" nbInput fullWidth placeholder=\"Discount Value\" formControlName=\"discountValue\">\r\n        <div class=\"alert alert-danger mt-0 mb-3\"\r\n            *ngIf=\"editSaleFormGroup.get('discountValue').invalid && (editSaleFormGroup.get('discountValue').dirty || editSaleFormGroup.get('discountValue').touched)\">\r\n            <div *ngIf=\"editSaleFormGroup.get('discountValue').errors['required']\">\r\n                Discount Value is required\r\n            </div>\r\n\r\n            <div *ngIf=\"editSaleFormGroup.get('discountValue').errors['max']\">\r\n                Discount Value must not be larger than 100%\r\n            </div>\r\n        </div>\r\n\r\n        <input nbInput fullWidth placeholder=\"Start Date\" [nbDatepicker]=\"startDate\" formControlName=\"startedAt\">\r\n        <nb-datepicker #startDate></nb-datepicker>\r\n        <div class=\"alert alert-danger mt-2 mb-3\"\r\n            *ngIf=\"editSaleFormGroup.get('startedAt').invalid && (editSaleFormGroup.get('startedAt').dirty || editSaleFormGroup.get('startedAt').touched)\">\r\n            <div *ngIf=\"editSaleFormGroup.get('startedAt').errors['required']\">\r\n                Start Date is required\r\n            </div>\r\n        </div>\r\n        <input nbInput fullWidth placeholder=\"Expire Date\" [nbDatepicker]=\"expireDate\" formControlName=\"expiredAt\">\r\n        <nb-datepicker #expireDate></nb-datepicker>\r\n        <div class=\"alert alert-danger mt-2 mb-3\"\r\n            *ngIf=\"editSaleFormGroup.get('expiredAt').invalid && (editSaleFormGroup.get('expiredAt').dirty || editSaleFormGroup.get('expiredAt').touched)\">\r\n            <div *ngIf=\"editSaleFormGroup.get('expiredAt').errors['required']\">\r\n                Expire Date is required\r\n            </div>\r\n        </div>\r\n\r\n        <nb-checkbox (checkedChange)=\"editSaleFormGroup.get('active').setValue($event)\" status=\"success\"\r\n            [checked]=\"editSaleFormGroup.get('active').value\">\r\n            Active\r\n        </nb-checkbox>\r\n    </nb-card-body>\r\n    <nb-card-footer>\r\n        <div class=\"d-flex justify-content-between\">\r\n            <button nbButton status=\"success\" (click)=\"submitEditSale()\">SAVE</button>\r\n        </div>\r\n    </nb-card-footer>\r\n</nb-card>","import { Component, OnInit, Input, ViewChild, TemplateRef, Output, EventEmitter } from \"@angular/core\";\r\nimport { ProductSale } from \"../../../../@core/models/sale/product-sale.model\";\r\nimport { ToastState, UtilsService } from \"../../../../@core/services/utils.service\";\r\nimport { NbWindowRef, NbWindowService } from \"@nebular/theme\";\r\nimport { ProductSaleService } from \"../../../../@core/services/product/product-sale.service\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"ngx-products-sale-multi\",\r\n  templateUrl: \"./product-sale-multi.component.html\",\r\n  styleUrls: [\"./product-sale-multi.component.scss\"],\r\n})\r\nexport class ProductSaleMultiComponent implements OnInit {\r\n\r\n  @Input() selectedSales: ProductSale[]\r\n  @Output() isDeleted = new EventEmitter<boolean>();\r\n  @Output() isUpdated = new EventEmitter<boolean>();\r\n  @ViewChild('onDeleteTemplate') deleteWindow: TemplateRef<any>;\r\n  deleteWindowRef: NbWindowRef;\r\n\r\n  @ViewChild('onUpdateStatusTemplate') updateStatusWindow: TemplateRef<any>;\r\n  updateStatusWindowRef: NbWindowRef;\r\n  statusFormGroup: FormGroup\r\n\r\n  constructor(    \r\n    private saleService: ProductSaleService,\r\n    private windowService: NbWindowService,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    this.statusFormGroup = formBuilder.group({\r\n      active: [, Validators.required]\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    1\r\n  }\r\n\r\n  openDeleteWindow() {\r\n    this.deleteWindowRef = this.windowService\r\n      .open(this.deleteWindow, { title: `Delete Sales` });\r\n  }\r\n\r\n  openEditWindow() {\r\n    this.updateStatusWindowRef = this.windowService\r\n      .open(this.updateStatusWindow, { title: `Update Sales's Status` });\r\n  }\r\n\r\n  onDelete() {\r\n    this.saleService.deleteProductSales(this.selectedSales).subscribe(\r\n      () => {\r\n        this.selectedSales = []\r\n        this.deleteWindowRef.close()\r\n        this.isDeleted.emit(true);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.isDeleted.emit(false);\r\n      }\r\n    )\r\n  }\r\n\r\n  onUpdateStatus() {\r\n    if (this.statusFormGroup.invalid) {\r\n      this.statusFormGroup.markAllAsTouched();\r\n      return;\r\n    }\r\n    \r\n    this.saleService.updateStatus(this.selectedSales, this.statusFormGroup.get('active').value).subscribe(\r\n      () => {\r\n        this.selectedSales = []\r\n        this.updateStatusWindowRef.close()\r\n        this.isUpdated.emit(true);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.isUpdated.emit(false);\r\n      }\r\n    )\r\n  }\r\n\r\n}","<button nbButton status=\"danger\" (click)=\"openDeleteWindow()\">\r\n    <nb-icon icon=\"trash-outline\"></nb-icon>\r\n</button>\r\n\r\n<button nbButton status=\"warning\" (click)=\"openEditWindow()\" class=\"ml-3\">\r\n    <nb-icon icon=\"edit-2-outline\"></nb-icon>\r\n</button>\r\n\r\n<ng-template #onDeleteTemplate let-data>\r\n    <nb-card>\r\n        <nb-card-header>\r\n            Are you sure you want to delete this sales?\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <button nbButton status=\"success\" class=\"mt-3\" (click)=\"onDelete()\">\r\n                CONFIRM\r\n            </button>\r\n        </nb-card-body>\r\n    </nb-card>\r\n</ng-template>\r\n\r\n<ng-template #onUpdateStatusTemplate let-data>\r\n    <nb-card>\r\n        <nb-card-header [formGroup]=\"statusFormGroup\">\r\n            <nb-select fullWidth placeholder=\"Status\" formControlName=\"active\">\r\n                <nb-select-label>\r\n                    Status: {{ statusFormGroup.get('active').value ? 'Active' : 'Inactive'}}\r\n                </nb-select-label>\r\n                <nb-option [value]=\"true\">Active</nb-option>\r\n                <nb-option [value]=\"false\">Inactive</nb-option>\r\n            </nb-select>\r\n            <div class=\"alert alert-danger mt-2\"\r\n                *ngIf=\"statusFormGroup.get('active').invalid && (statusFormGroup.get('active').dirty || statusFormGroup.get('active').touched)\">\r\n                <div *ngIf=\"statusFormGroup.get('active').errors['required']\">\r\n                    Active is required\r\n                </div>\r\n            </div>\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <button nbButton status=\"success\" class=\"mt-3\" (click)=\"onUpdateStatus()\">\r\n                CONFIRM\r\n            </button>\r\n        </nb-card-body>\r\n    </nb-card>\r\n</ng-template>","import { Component, OnInit, ViewChild, TemplateRef } from \"@angular/core\";\r\nimport { LocalDataSource } from \"ng2-smart-table\";\r\nimport { ToastState, UtilsService } from '../../../@core/services/utils.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { CustomSaleFilterActionsComponent } from './custom/custom-sale-filter-actions.component';\r\nimport { ProductSale } from \"../../../@core/models/sale/product-sale.model\";\r\nimport { ProductSaleService } from \"../../../@core/services/product/product-sale.service\";\r\nimport { CustomSaleActionComponent } from \"./custom/custom-sale-action.component\";\r\nimport { CustomSaleActiveActionComponent } from \"./custom/custom-sale-active-action.component\";\r\n\r\n@Component({\r\n  selector: \"ngx-products-sale\",\r\n  templateUrl: \"./product-sale.component.html\",\r\n  styleUrls: [\"./product-sale.component.scss\"],\r\n})\r\nexport class ProductSaleComponent implements OnInit {\r\n  state: string = \"add\"; // default\r\n  private unsubscribe = new Subject<void>();\r\n  loadedSales: boolean = false;\r\n  selectedSales: ProductSale[] = []\r\n\r\n  numberOfItem: number = localStorage.getItem('itemPerPage') != null ? +localStorage.getItem('itemPerPage') : 10; // default\r\n  source: LocalDataSource = new LocalDataSource();\r\n  settings = {\r\n    selectMode: 'multi',\r\n    actions: {\r\n      edit: false,\r\n      delete: false,\r\n      add: false,\r\n      columnTitle: ''\r\n    },\r\n    mode: \"external\", // when add/edit -> navigate to another url\r\n    columns: {\r\n      productSaleId: {\r\n        title: \"ID\",\r\n        type: \"number\",\r\n        width: '3%'\r\n      },\r\n      saleName: {\r\n        title: \"Name\",\r\n        type: \"string\",\r\n      },\r\n      description: {\r\n        title: \"Description\",\r\n        type: \"string\",\r\n      },\r\n      discount: {\r\n        title: \"Discount\",\r\n        type: \"string\",\r\n      },\r\n      startedAt: {\r\n        title: 'Started Date',\r\n        type: 'string'\r\n      },\r\n      expiredAt: {\r\n        title: 'Expired Date',\r\n        type: 'string'\r\n      },\r\n      active: {\r\n        title: 'Status',\r\n        sort: false,\r\n        width: \"10%\",\r\n        filter: {\r\n          type: 'list',\r\n          config: {\r\n            selectText: 'Status...',\r\n            list: [ \r\n              { value: 'true', title: 'Active' },\r\n              { value: 'false', title: 'Inactive' },\r\n            ]\r\n          },\r\n        },\r\n        type: 'custom',\r\n        renderComponent: CustomSaleActiveActionComponent\r\n      },\r\n      actions: {\r\n        title: 'Actions',\r\n        type: 'custom',\r\n        sort: false,\r\n        filter: {\r\n          type: 'custom',\r\n          component: CustomSaleFilterActionsComponent\r\n        },\r\n        renderComponent: CustomSaleActionComponent\r\n      }\r\n    },\r\n    pager: {\r\n      display: true,\r\n      perPage: this.numberOfItem\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    private saleService: ProductSaleService,\r\n    private utilsService: UtilsService\r\n  ) {\r\n    this.saleService.saleChange$\r\n      .pipe(takeUntil(this.unsubscribe))\r\n      .subscribe(() => {\r\n        this.loadSales();\r\n      });\r\n    this.loadSales()\r\n  }\r\n\r\n  loadSales() {\r\n    this.saleService.findAll().subscribe(\r\n      data => {\r\n        const mappedSalesupons = data._embedded.productSales.map((sale) => {\r\n          return {\r\n            productSaleId: sale.productSaleId,\r\n            saleName: sale.saleName,\r\n            description: sale.description,\r\n            active: sale.active,\r\n            discount: sale.productSaleType.productSaleTypeId == 1 ? '$' + sale.discount : sale.discount + '%',\r\n            startedAt: new DatePipe('en-US').transform(sale.startedAt, 'dd/MM/yyyy').toString(),\r\n            expiredAt: new DatePipe('en-US').transform(sale.expiredAt, 'dd/MM/yyyy').toString()\r\n          }\r\n        })\r\n        this.source.load(mappedSalesupons)\r\n        this.loadedSales = true\r\n      }\r\n    )\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.saleService.state$.subscribe((state) => {\r\n      this.state = state;\r\n    });\r\n  }\r\n\r\n  onRowSelect(event: any): void {\r\n    this.selectedSales = (event.selected) as ProductSale[]\r\n  }\r\n\r\n  onDelete(isDeleted: boolean) {\r\n    if(isDeleted) {\r\n      this.loadSales();\r\n      this.selectedSales = []\r\n      this.utilsService.updateToastState(new ToastState('Delete The Sales Successfully!', \"success\"))\r\n    } else {\r\n      this.utilsService.updateToastState(new ToastState('Delete The Sales Failed!', \"danger\"))\r\n    }\r\n  }\r\n\r\n  onUpdateStatus(isUpdated: boolean) {\r\n    if(isUpdated) {\r\n      this.loadSales();\r\n      this.selectedSales = []\r\n      this.utilsService.updateToastState(new ToastState(\"Updated The Product Sales's Status Successfully!\", \"success\"))\r\n    } else {\r\n      this.utilsService.updateToastState(new ToastState(\"Updated The Product Sales's Status Failed!\", \"danger\"))\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-lg-8 col-md-12\">\r\n        <ng-container *ngIf=\"loadedSales; else loadingBlock\">\r\n\r\n            <nb-card>\r\n                <nb-card-header class=\"d-flex justify-content-between align-items-center\">\r\n                    <h6>\r\n                        Sale List\r\n                    </h6>\r\n                    <ngx-item-of-list (selectNumberOfItem)=\"source.setPaging(1, $event)\"></ngx-item-of-list>\r\n                </nb-card-header>\r\n                <nb-card-body>\r\n                    <ng2-smart-table [settings]=\"settings\" [source]=\"source\" [ngClass]=\"'smart-table'\"\r\n                        (userRowSelect)=\"onRowSelect($event)\">\r\n                    </ng2-smart-table>\r\n                </nb-card-body>\r\n                <nb-card-footer>\r\n                    <ng-container *ngIf=\"selectedSales.length > 0\">\r\n                        <ngx-products-sale-multi [selectedSales]=\"selectedSales\" (isDeleted)=\"onDelete($event)\"\r\n                            (isUpdated)=\"onUpdateStatus($event)\">\r\n                        </ngx-products-sale-multi>\r\n                    </ng-container>\r\n                </nb-card-footer>\r\n            </nb-card>\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"col-lg-4 col-md-12\">\r\n        <ng-container *ngIf=\"state === 'add'\">\r\n            <ngx-products-sale-add></ngx-products-sale-add>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"state === 'edit'\">\r\n            <ngx-products-sale-edit></ngx-products-sale-edit>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #loadingBlock>\r\n    <nb-card [size]=\"'small'\" [nbSpinner]=\"!loadedCatalogs\" nbSpinnerSize=\"large\" nbSpinnerStatus=\"primary\">\r\n    </nb-card>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ProductsComponent } from './products.component';\r\nimport { ProductAddComponent } from './product-add/product-add.component';\r\nimport { ProductEditComponent } from './product-edit/product-edit.component';\r\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\nimport { ProductCouponComponent } from './product-coupon/product-coupon.component';\r\nimport { ProductSaleComponent } from './product-sale/product-sale.component';\r\nimport { ProductCatalogComponent } from './product-catalog/product-catalog.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: ProductsComponent,\r\n  children: [\r\n    {\r\n      path: 'list',\r\n      component: ProductListComponent,\r\n    },\r\n    {\r\n      path: 'add',\r\n      component: ProductAddComponent,\r\n    },\r\n    {\r\n      path: 'edit/:id',\r\n      component: ProductEditComponent,\r\n    },\r\n    {\r\n      path: 'detail/:id',\r\n      component: ProductDetailComponent,\r\n    },\r\n    {\r\n      path: 'catalog',\r\n      component: ProductCatalogComponent,\r\n    },\r\n    {\r\n      path: 'coupon',\r\n      component: ProductCouponComponent,\r\n    },\r\n    {\r\n      path: 'product-sale',\r\n      component: ProductSaleComponent,\r\n    },\r\n  ],\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ProductsRoutingModule { }\r\n\r\nexport const routedComponents = [\r\n  ProductsComponent,\r\n  ProductListComponent,\r\n  ProductAddComponent,\r\n  ProductEditComponent,\r\n  ProductDetailComponent,\r\n  ProductCatalogComponent,\r\n  ProductCouponComponent,\r\n  ProductSaleComponent\r\n];\r\n","import { Component } from '@angular/core';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n@Component({\n  selector: 'ngx-products',\n  template: `<router-outlet></router-outlet>`,\n})\nexport class ProductsComponent {\n}\n","import { NgModule } from '@angular/core';\r\nimport { NbAccordionModule, NbActionsModule, NbAlertModule, NbButtonModule, NbCardModule, NbCheckboxModule, NbDatepickerModule, NbFormFieldModule, NbIconModule, NbInputModule, NbListModule, NbRadioModule, NbSelectModule, NbSpinnerModule, NbStepperComponent, NbStepperModule, NbTreeGridModule, NbUserModule } from '@nebular/theme';\r\nimport { NbTabsetModule } from '@nebular/theme';\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { ProductsRoutingModule, routedComponents } from './products-routing.module';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CustomProductActionComponent } from './product-list/custom/custom-product-action.component';\r\nimport { CustomProductFilterActionsComponent } from './product-list/custom/custom-product-filter-actions.component';\r\nimport { ImagesCarouselComponent } from './images-carousel.component';\r\nimport { CustomCouponActionComponent } from './product-coupon/custom/custom-coupon-action.component';\r\nimport { CustomCouponFilterActionsComponent } from './product-coupon/custom/custom-coupon-filter-actions.component';\r\nimport { ProductCouponAddComponent } from './product-coupon/product-coupon-add/product-coupon-add.component';\r\nimport { ProductCouponEditComponent } from './product-coupon/product-coupon-edit/product-coupon-edit.component';\r\nimport { CustomSaleFilterActionsComponent } from './product-sale/custom/custom-sale-filter-actions.component';\r\nimport { ProductSaleAddComponent } from './product-sale/product-sale-add/product-sale-add.component';\r\nimport { ProductSaleEditComponent } from './product-sale/product-sale-edit/product-sale-edit.component';\r\nimport { CustomSaleActionComponent } from './product-sale/custom/custom-sale-action.component';\r\nimport { CustomSaleActiveActionComponent } from './product-sale/custom/custom-sale-active-action.component';\r\nimport { ProductSaleMultiComponent } from './product-sale/product-sale-multi/product-sale-multi.component';\r\nimport { CustomProductStatusComponent } from './product-list/custom/custom-product-status.component';\r\nimport { CustomProductStatusFilterComponent } from './product-list/custom/custom-product-status-filter.component';\r\nimport { ProductListMultiComponent } from './product-list/product-list-multi/product-list-multi.component';\r\nimport { ProductDetailBasicComponent } from './product-detail/product-detail-basic/product-detail-basic.component';\r\nimport { ProductDetailCommentsComponent } from './product-detail/product-detail-comments/product-detail-comments.component';\r\nimport { NgbModule, NgbRatingModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CustomCatalogActionComponent } from './product-catalog/custom/custom-catalog-action.component';\r\nimport { CustomCatalogFilterActionsComponent } from './product-catalog/custom/custom-catalog-filter-actions.component';\r\nimport { CustomCatalogImageComponent } from './product-catalog/custom/custom-catalog-image.component';\r\nimport { ProductCatalogAddComponent } from './product-catalog/product-catalog-add/product-catalog-add.component';\r\nimport { ProductCatalogEditComponent } from './product-catalog/product-catalog-edit/product-catalog-edit.component';\r\nimport { ProductDetailCareGuideComponent } from './product-detail/product-detail-care-guide/product-detail-care-guide.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { FormBasicInformationComponent } from './shared/form-basic-information/form-basic-information.component';\r\nimport { FormVariantsComponent } from './shared/form-variants/form-variants.component';\r\nimport { FormCareGuideComponent } from './shared/form-care-guide/form-care-guide.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    // for forms\r\n    NbInputModule,\r\n    NbCardModule,\r\n    NbButtonModule,\r\n    NbActionsModule,\r\n    NbCheckboxModule,\r\n    NbRadioModule,\r\n    NbDatepickerModule,\r\n    NbSelectModule,\r\n    NbAccordionModule,\r\n    // forlayout\r\n    NbCardModule,\r\n    NbTabsetModule,\r\n    ThemeModule,\r\n    Ng2SmartTableModule,\r\n    NbListModule,\r\n    ProductsRoutingModule,\r\n    CKEditorModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NbIconModule,\r\n    NbAlertModule,\r\n    NgbRatingModule,\r\n    NbFormFieldModule,\r\n    NbTreeGridModule,\r\n    NbStepperModule,\r\n    SharedModule,\r\n    NbSpinnerModule\r\n  ],\r\n  declarations: [\r\n    ...routedComponents,\r\n    CustomProductActionComponent,\r\n    CustomProductFilterActionsComponent,\r\n    CustomProductStatusComponent,\r\n    ImagesCarouselComponent,\r\n    CustomProductStatusFilterComponent,\r\n    ProductListMultiComponent,\r\n\r\n    CustomCatalogActionComponent,\r\n    CustomCatalogFilterActionsComponent,\r\n    CustomCatalogImageComponent,\r\n    ProductCatalogAddComponent,\r\n    ProductCatalogEditComponent,\r\n\r\n    CustomCouponActionComponent,\r\n    CustomCouponFilterActionsComponent,\r\n    ProductCouponAddComponent,\r\n    ProductCouponEditComponent,\r\n\r\n    CustomSaleActionComponent,\r\n    CustomSaleFilterActionsComponent,\r\n    CustomSaleActiveActionComponent,\r\n    ProductSaleAddComponent,\r\n    ProductSaleEditComponent,\r\n    ProductSaleMultiComponent,\r\n\r\n    ProductDetailBasicComponent,\r\n    ProductDetailCommentsComponent,\r\n    ProductDetailCareGuideComponent,\r\n    \r\n    FormBasicInformationComponent,\r\n    FormVariantsComponent,\r\n    FormCareGuideComponent\r\n  ],\r\n})\r\nexport class ProductsModule { }\r\n","import { PRODUCT_IMAGE_DIRECTORY } from './../../../../@core/utils/image-storing-directory';\nimport { forkJoin } from 'rxjs';\nimport { Component, OnInit, ViewChild, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CustomValidator } from '../../../../@core/validators/custom-validator';\nimport { Catalog } from '../../../../@core/models/product/catalog.model';\nimport { ProductSale } from '../../../../@core/models/sale/product-sale.model';\nimport { PlantingDifficultyLevel } from '../../../../@core/models/product/planting-difficulty-level.model';\nimport { CatalogService } from '../../../../@core/services/product/product-catalog.service';\nimport { ProductSaleService } from '../../../../@core/services/product/product-sale.service';\nimport { PlantingDifficultyLevelService } from '../../../../@core/services/product/planting-difficulty-level.service';\nimport { CATALOG_IMAGE_DIRECTORY } from '../../../../@core/utils/image-storing-directory';\nimport { ImagesCarouselComponent } from '../../images-carousel.component';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { Product } from '../../../../@core/models/product/product.model';\n\n@Component({\n  selector: 'ngx-form-basic-information',\n  templateUrl: './form-basic-information.component.html',\n  styleUrls: ['./form-basic-information.component.scss']\n})\nexport class FormBasicInformationComponent implements OnInit {\n  @ViewChild(ImagesCarouselComponent) carousel: ImagesCarouselComponent;\n  Editor = ClassicEditor;\n  editorConfig: any = { placeholder: 'Description' };\n\n  @Input() mode: string;\n  @Input() product: Product\n\n  productForm: FormGroup\n  images: string[] = []\n  catalogs: Catalog[];\n  sales: ProductSale[];\n  levels: PlantingDifficultyLevel[]\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private catalogService: CatalogService,\n    private saleService: ProductSaleService,\n    private levelService: PlantingDifficultyLevelService,\n  ) { }\n\n\n  ngOnInit(): void {\n    this.settingFormGroup()\n    this.loadData()\n  }\n  \n  settingFormGroup() {\n    this.productForm = this.formBuilder.group({\n      id: [],\n      name: ['', [CustomValidator.notBlank, Validators.maxLength(200)]],\n      catalog: [null],\n      productSale: [null],\n      level: [null],\n      new: [true],\n      top: [false],\n      active: [true],\n      sale: [false],\n      description: ['', [CustomValidator.notBlank, Validators.maxLength(1000)]],\n      images: [this.images, [Validators.required]]\n    }) \n  }\n\n  loadData() {\n    const catalog$ = this.catalogService.findAll();\n    const sale$ = this.saleService.findAll();\n    const level$ = this.levelService.findAll()\n\n    forkJoin([catalog$, sale$, level$]).subscribe(\n      ([catalogData, saleData, levelData]) => {\n        this.catalogs = this.catalogService.flattenCatalogs(catalogData).map(cata => {\n          return {\n            catalogId: cata.catalogId,\n            catalogName: cata.catalogName,\n            image: {\n              imageId: cata.image.imageId,\n              imageUrl: CATALOG_IMAGE_DIRECTORY + cata.image.imageUrl\n            }\n          }\n        })\n        this.sales = saleData._embedded.productSales.filter(sale => sale.active != false)\n        this.levels = levelData._embedded.plantingDifficultyLevels\n\n        if (this.mode === 'edit' && this.product != null) {\n          this.fillFormValue();\n        }\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  }\n\n  fillFormValue() {\n    this.productForm.get('id').setValue(this.product.productId);\n    this.productForm.get('name').setValue(this.product.productName);\n    this.productForm.get('description').setValue(this.product.description)\n    this.productForm.get('new').setValue(this.product.new_)\n    this.productForm.get('active').setValue(this.product.active)\n    this.productForm.get('top').setValue(this.product.top)\n    this.productForm.get('images').setValue(this.product.imageUrls)\n    if(this.product.catalog != null) {\n      const CATALOG = this.catalogs.find(cata => cata.catalogId == this.product.catalog.catalogId);\n      this.productForm.get('catalog').setValue(CATALOG)\n    }\n\n    if(this.product.productSale != null) {\n      const SALE = this.sales.find(s => s.productSaleId == this.product.productSale.productSaleId);\n      this.productForm.get('productSale').setValue(SALE)\n      this.productForm.get('sale').setValue(true)\n    } else {\n      this.productForm.get('sale').setValue(false)\n    }\n\n    if(this.product.plantingDifficultyLevel != null) {\n      const level = this.levels.find(l => l.plantingDifficultyLevelId == this.product.plantingDifficultyLevel.plantingDifficultyLevelId);\n      this.productForm.get('level').setValue(level)\n    }\n    this.carousel.show(this.product.imageUrls);\n  }\n\n\n\n  selectProductSale() {\n    if (this.productForm.get('productSale').value != null) {\n      this.productForm.get('sale').setValue(true);\n    } else {\n      this.productForm.get('sale').setValue(false);\n    }\n  }\n\n  selectFiles(event: any) {\n    this.images = []\n    if (event.target.files) {\n      for (let i = 0; i < event.target.files.length; i++) {\n        const reader = new FileReader();\n        reader.onload = (event: any) => {\n          this.images.push(event.target.result);\n        };\n        reader.readAsDataURL(event.target.files[i]);\n      }\n    }\n    this.productForm.get('images').setValue(this.images)\n    this.productForm.get('images').setErrors(null)\n    this.carousel.show(this.images);\n  }\n\n  getFormValue(): Product {\n    let product: Product = new Product();\n    product.productId = this.productForm.get('id').value ?? null\n    product.productName = this.productForm.get('name').value;\n    product.description = this.productForm.get('description').value;\n    product.catalog = this.productForm.get('catalog').value;\n    product.plantingDifficultyLevel = this.productForm.get('level').value != null ? \n    {\n      plantingDifficultyLevelId: this.productForm.get('level').value['plantingDifficultyLevelId'],\n      level: this.productForm.get('level').value['level']\n    } : \n    null\n    product.productSale = this.productForm.get('productSale').value;\n    product.active = this.productForm.get('active').value;\n    product.top = this.productForm.get('top').value;\n    product.new_ = this.productForm.get('new').value;\n    product.sale = this.productForm.get('sale').value;\n    product.images = this.productForm.get('images').value.map(imageStr => {\n      return {\n        imageId: null,\n        imageUrl: imageStr\n      }})\n      \n    return product;\n  }\n}\n","<div class=\"row d-flex justify-content-center\"  [formGroup]=\"productForm\">\n    <div class=\"col-12 d-flex justify-content-center\">\n        <h4>Basic Information #1</h4>\n    </div>\n    <div class=\"col-lg-6 col-md-12 mt-5\">\n        <div class=\"row px-0\">\n            <div class=\"col-12\">\n                <input type=\"text\" nbInput fullWidth placeholder=\"Product Name\"\n                    formControlName=\"name\" maxlength=\"200\">\n                <div class=\"alert alert-danger mt-1\"\n                    *ngIf=\"productForm.get('name').invalid && (productForm.get('name').dirty || productForm.get('name').touched)\">\n                    <div *ngIf=\"productForm.get('name').errors['notblank']\">\n                        Product Name is required\n                    </div>\n\n                    <div *ngIf=\"productForm.get('name').errors['maxlength']\">\n                        Product Name must not exceed 200 characters\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-lg-6 col-md-12 mt-3\">\n                <nb-select fullWidth placeholder=\"Catalog\" formControlName=\"catalog\">\n                    <nb-select-label>\n                        Catalog: {{ productForm.get('catalog').value !== null ?\n                        productForm.get('catalog').value['catalogName'] : null}}\n                    </nb-select-label>\n                    <ng-container *ngIf=\"mode !== 'edit'\">\n                        <nb-option>Reset</nb-option>\n                    </ng-container>\n                    <nb-option *ngFor=\"let cata of catalogs\" [value]=\"cata\">\n                        <div class=\"row no-gutter px-0\">\n                            <div class=\"col-5\">\n                                <img [src]=\"cata.image.imageUrl\" class=\"d-block w-100\">\n                            </div>\n                            <div class=\"col-7 d-flex justify-content-between align-items-center\">\n                                <p><b>{{cata.catalogName}}</b></p>\n                            </div>\n                        </div>\n                    </nb-option>\n                </nb-select>\n            </div>\n            <div class=\"col-lg-6 col-md-12 mt-3\">\n                <nb-select fullWidth placeholder=\"Product Sale\" formControlName=\"productSale\"\n                    (selectedChange)=\"selectProductSale()\">\n                    <nb-select-label>\n                        Sale: {{ productForm.get('productSale').value !== null ?\n                        productForm.get('productSale').value['saleName'] : null}}\n                    </nb-select-label>\n                    <ng-container *ngIf=\"mode !== 'edit'\">\n                        <nb-option>Reset</nb-option>\n                    </ng-container>\n                    <nb-option *ngFor=\"let sale of sales\" [value]=\"sale\">\n                        <div class=\"sale-item\">\n                            <div class=\"sale-info\">\n                                <p>\n                                    <b>\n                                        {{ sale.saleName | uppercase }} -\n                                        {{(sale.productSaleType.typeName === 'Fixed') ? ('$' +\n                                        sale.discount) : (sale.discount + '%') }}\n                                    </b>\n                                </p>\n                                <p>{{ sale.startedAt | date }} - {{ sale.expiredAt | date }}</p>\n                                <p>Desc: {{ sale.description }}</p>\n                            </div>\n                        </div>\n                    </nb-option>\n                </nb-select>\n            </div>\n            <div class=\"col-lg-6 col-md-12 mt-3\">\n                <nb-select fullWidth placeholder=\"Difficulty In Growing\" formControlName=\"level\">\n                    <nb-select-label>\n                        Difficulty: {{ productForm.get('level').value !== null ?\n                        productForm.get('level').value['level'] : null}}\n                    </nb-select-label>\n                    <ng-container *ngIf=\"mode !== 'edit'\">\n                        <nb-option>Reset</nb-option>\n                    </ng-container>\n                    <nb-option *ngFor=\"let level of levels\"\n                        [value]=\"level\">{{level.level}}</nb-option>\n                </nb-select>\n            </div>\n            <div class=\"col-6 mt-3\">\n                <div class=\"row\">\n                    <div class=\"col-6\">\n                        <nb-checkbox (checkedChange)=\"productForm.get('new').setValue($event)\"\n                            [checked]=\"productForm.get('new').value\" status=\"success\">\n                            New\n                        </nb-checkbox>\n                    </div>\n                    <div class=\"col-6\">\n                        <nb-checkbox (checkedChange)=\"productForm.get('active').setValue($event)\"\n                            [checked]=\"productForm.get('active').value\" status=\"warning\">\n                            Active\n                        </nb-checkbox>\n                    </div>\n                    <div class=\"col-6 mt-2\">\n                        <nb-checkbox (checkedChange)=\"productForm.get('top').setValue($event)\"\n                            [checked]=\"productForm.get('top').value\" status=\"danger\">\n                            Top\n                        </nb-checkbox>\n                    </div>\n                    <div class=\"col-6 mt-2\">\n                        <nb-checkbox (checkedChange)=\"productForm.get('sale').setValue($event)\"\n                            [checked]=\"productForm.get('sale').value\" status=\"info\"\n                            (click)=\"$event.preventDefault()\">\n                            Sale\n                        </nb-checkbox>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-12 mt-3\">\n                <div class=\"input-group mb-3\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\">Upload</span>\n                    </div>\n                    <div class=\"custom-file\">\n                        <input type=\"file\" mutliple class=\"custom-file-input\" multiple\n                            accept=\"image/png, image/jpeg\" (change)=\"selectFiles($event)\">\n                        <label class=\"custom-file-label\">Choose images</label>\n                    </div>\n                </div>\n                <div class=\"alert alert-danger mt-1\"\n                    *ngIf=\"productForm.get('images').invalid && (productForm.get('images').dirty || productForm.get('images').touched)\">\n                    <div *ngIf=\"productForm.get('images').errors['required']\">\n                        Must upload at least 1 image\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-12\">\n                <div class=\"row align-item-center justify-content-center\">\n                    <div class=\"col-8 align-item-center justify-content-center border border-primary\"\n                        style=\"height: 300px\">\n                        <ngx-images-carousel></ngx-images-carousel>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-6 col-md-12 mt-4\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <ckeditor class=\"ckeditor\" [editor]=\"Editor\" [config]=\"editorConfig\"\n                    formControlName=\"description\" maxlength=\"1000\"></ckeditor>\n                <div class=\"alert alert-danger mt-1\"\n                    *ngIf=\"productForm.get('description').invalid && (productForm.get('description').dirty || productForm.get('description').touched)\">\n                    <div *ngIf=\"productForm.get('description').errors['notblank']\">\n                        Product description is required\n                    </div>\n\n                    <div *ngIf=\"productForm.get('description').errors['maxlength']\">\n                        Product description must not exceed 1000 characters\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    \n</div>","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Product } from '../../../../@core/models/product/product.model';\n\n@Component({\n  selector: 'ngx-form-care-guide',\n  templateUrl: './form-care-guide.component.html',\n  styleUrls: ['./form-care-guide.component.scss']\n})\nexport class FormCareGuideComponent implements OnChanges{\n\n  careGuideForm: FormGroup\n  @Input() mode: string;\n  @Input() product: Product\n\n  constructor(\n    private formBuilder: FormBuilder,\n  ) {\n    this.careGuideForm = this.formBuilder.group({\n      productId: [],\n      watering: [null, [Validators.maxLength(500)]],\n      light: [null, [Validators.maxLength(500)]],\n      nutrition: [null, [Validators.maxLength(500)]],\n      cleaning: [null, [Validators.maxLength(500)]],\n      pruning: [null, [Validators.maxLength(500)]],\n      bugs: [null, [Validators.maxLength(500)]],\n      trouble: [null, [Validators.maxLength(500)]],\n      warning: [null, [Validators.maxLength(500)]],\n    })\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.mode === 'edit' && this.product != null) {\n      this.fillFormValue();\n    }\n  }\n\n  fillFormValue() {\n    this.careGuideForm.setValue(this.product.productCareGuide)\n  }\n\n  getFormValue() {\n    return this.careGuideForm.value\n  }\n\n}\n","<div class=\"col-12 d-flex justify-content-center\">\n    <h4>Care Guide #3</h4>\n</div>\n<div class=\"row mt-3\" [formGroup]=\"careGuideForm\">\n    <div class=\"col-lg-6 col-md-12\">\n        <label for=\"watering\" class=\"ml-1\">Watering</label>\n        <textarea rows=\"5\" nbInput fullWidth placeholder=\"Watering\" id=\"watering\"\n            formControlName=\"watering\" style=\"resize: none\"></textarea>\n        <div class=\"alert alert-danger mt-1\"\n            *ngIf=\"careGuideForm.get('watering').invalid && (careGuideForm.get('watering').dirty || careGuideForm.get('watering').touched)\">\n            <div *ngIf=\"careGuideForm.get('watering').errors['maxlength']\">\n                Watering guide must not exceed 500 characters\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-6 col-md-12\">\n        <label for=\"light\" class=\"ml-1\">Light</label>\n        <textarea rows=\"5\" nbInput fullWidth placeholder=\"Light\" id=\"light\" formControlName=\"light\"\n            style=\"resize: none\"></textarea>\n        <div class=\"alert alert-danger mt-1\"\n            *ngIf=\"careGuideForm.get('light').invalid && (careGuideForm.get('light').dirty || careGuideForm.get('light').touched)\">\n            <div *ngIf=\"careGuideForm.get('light').errors['maxlength']\">\n                Light guide must not exceed 500 characters\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-6 col-md-12 mt-3\">\n        <label for=\"nutrition\" class=\"ml-1\">Nutrition</label>\n        <textarea rows=\"5\" nbInput fullWidth placeholder=\"Nutrition\" id=\"nutrition\"\n            formControlName=\"nutrition\" style=\"resize: none\"></textarea>\n        <div class=\"alert alert-danger mt-1\"\n            *ngIf=\"careGuideForm.get('nutrition').invalid && (careGuideForm.get('nutrition').dirty || careGuideForm.get('nutrition').touched)\">\n            <div *ngIf=\"careGuideForm.get('nutrition').errors['maxlength']\">\n                Nutrition guide must not exceed 500 characters\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-6 col-md-12 mt-3\">\n        <label for=\"cleaning\" class=\"ml-1\">Cleaning</label>\n        <textarea rows=\"5\" nbInput fullWidth placeholder=\"Cleaning\" id=\"cleaning\"\n            formControlName=\"cleaning\" style=\"resize: none\"></textarea>\n        <div class=\"alert alert-danger mt-1\"\n            *ngIf=\"careGuideForm.get('cleaning').invalid && (careGuideForm.get('cleaning').dirty || careGuideForm.get('cleaning').touched)\">\n            <div *ngIf=\"careGuideForm.get('cleaning').errors['maxlength']\">\n                Cleaning guide must not exceed 500 characters\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-6 col-md-12 mt-3\">\n        <label for=\"pruning\" class=\"ml-1\">Pruning</label>\n        <textarea rows=\"5\" nbInput fullWidth placeholder=\"Pruning\" id=\"pruning\"\n            formControlName=\"pruning\" style=\"resize: none\"></textarea>\n        <div class=\"alert alert-danger mt-1\"\n            *ngIf=\"careGuideForm.get('pruning').invalid && (careGuideForm.get('pruning').dirty || careGuideForm.get('pruning').touched)\">\n            <div *ngIf=\"careGuideForm.get('pruning').errors['maxlength']\">\n                Pruning guide must not exceed 500 characters\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-6 col-md-12 mt-3\">\n        <label for=\"bugs\" class=\"ml-1\">Bugs</label>\n        <textarea rows=\"5\" nbInput fullWidth placeholder=\"Bugs\" id=\"bugs\" formControlName=\"bugs\"\n            style=\"resize: none\"></textarea>\n        <div class=\"alert alert-danger mt-1\"\n            *ngIf=\"careGuideForm.get('bugs').invalid && (careGuideForm.get('bugs').dirty || careGuideForm.get('bugs').touched)\">\n            <div *ngIf=\"careGuideForm.get('bugs').errors['maxlength']\">\n                Bugs guide must not exceed 500 characters\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-6 col-md-12 mt-3\">\n        <label for=\"trouble\" class=\"ml-1\">Trouble</label>\n        <textarea rows=\"5\" nbInput fullWidth placeholder=\"Trouble\" id=\"trouble\"\n            formControlName=\"trouble\" style=\"resize: none\"></textarea>\n        <div class=\"alert alert-danger mt-1\"\n            *ngIf=\"careGuideForm.get('trouble').invalid && (careGuideForm.get('trouble').dirty || careGuideForm.get('trouble').touched)\">\n            <div *ngIf=\"careGuideForm.get('trouble').errors['maxlength']\">\n                Trouble guide must not exceed 500 characters\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-6 col-md-12 mt-3\">\n        <label for=\"warning\" class=\"ml-1\">Warning</label>\n        <textarea rows=\"5\" nbInput fullWidth placeholder=\"Warning\" id=\"warning\"\n            formControlName=\"warning\" style=\"resize: none\"></textarea>\n        <div class=\"alert alert-danger mt-1\"\n            *ngIf=\"careGuideForm.get('warning').invalid && (careGuideForm.get('warning').dirty || careGuideForm.get('warning').touched)\">\n            <div *ngIf=\"careGuideForm.get('warning').errors['maxlength']\">\n                Warning guide must not exceed 500 characters\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChildren, QueryList, AfterViewInit, Input } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NbAccordionItemComponent, NbRouteTab, NbRouteTabsetComponent } from '@nebular/theme';\nimport { ProductVariant } from '../../../../@core/models/product/product-variant.model';\nimport { Image } from '../../../../@core/models/Image';\nimport { ProductSize } from '../../../../@core/models/product/product-size.model';\nimport { ProductSizeService } from '../../../../@core/services/product/product-size.service';\nimport { forkJoin } from 'rxjs';\nimport { Product } from '../../../../@core/models/product/product.model';\nimport { SIDE_GUIDE_IMAGE_DIRECTORY, VARIANT_IMAGE_DIRECTORY } from '../../../../@core/utils/image-storing-directory';\n\n@Component({\n  selector: 'ngx-form-variants',\n  templateUrl: './form-variants.component.html',\n  styleUrls: ['./form-variants.component.scss']\n})\nexport class FormVariantsComponent implements OnInit, AfterViewInit {\n  @ViewChildren(NbAccordionItemComponent) accordions: QueryList<NbAccordionItemComponent>;\n\n  variantsForm: FormGroup\n  sizes: ProductSize[]\n\n  @Input() mode: string;\n  @Input() product: Product\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private sizeService: ProductSizeService,\n  ) {\n    this.variantsForm = this.formBuilder.group({\n      variants: this.formBuilder.array([]),\n      imgSizeGuide: [null],\n    })\n  }\n\n  get variants() { return this.variantsForm.controls[\"variants\"] as FormArray }\n  get imgSizeGuide() { return this.variantsForm.controls[\"imgSizeGuide\"] }\n\n  ngOnInit(): void {\n    const size$ = this.sizeService.findAll();\n    forkJoin([size$]).subscribe(([sizeData]) => {\n      this.sizes = sizeData._embedded.productSizes.map(size => {\n        return {\n          productSizeId: size.productSizeId,\n          sizeName: size.sizeName\n        }\n      })\n      if(this.mode == 'edit' && this.product != null) {\n        this.fillFormValue()\n      } else {\n        this.addVariant()\n      }\n    })\n  }\n\n  fillFormValue() {\n    this.variantsForm.get('imgSizeGuide').setValue(SIDE_GUIDE_IMAGE_DIRECTORY + this.product.imageSizeGuideUrl)\n\n    if (this.product.productVariants.length == 0 ||\n      this.product.productVariants == null) {\n      this.addVariant();\n      return;\n    }\n\n    for (let i = 0; i < this.product.productVariants.length; i++) {\n      this.addVariant()\n      let variantForm: FormGroup = this.variants.at(i) as FormGroup\n      \n      const variant = this.product.productVariants[i];\n      variantForm.get('id').setValue(variant.productVariantId)\n      variantForm.get('height').setValue(variant.height)\n      variantForm.get('width').setValue(variant.width)\n      variantForm.get('quantity').setValue(variant.quantity)\n      variantForm.get('price').setValue(variant.price)\n      const SIZE = this.sizes.find(s => s.productSizeId == variant.productSize.productSizeId)\n      variantForm.get('size').setValue(SIZE)\n\n      if (variant.imageUrl != null) {\n        variantForm.get('image').setValue(VARIANT_IMAGE_DIRECTORY + variant.imageUrl);\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.accordions.first.toggle()\n    }, 1000);\n  }\n\n  addVariant(event?: Event): void {\n    event != undefined ? event.preventDefault() : \"\";\n    const variantForm = this.formBuilder.group({\n      id: [],\n      price: [, [Validators.required, Validators.min(1), Validators.max(10000)]],\n      quantity: [, [Validators.required, Validators.min(1), Validators.max(100000)]],\n      height: [, [Validators.required, Validators.min(1), Validators.max(100000)]],\n      width: [, [Validators.required, Validators.min(1), Validators.max(100000)]],\n      size: [null, [Validators.required]],\n      image: [null]\n    })\n    this.variants.push(variantForm)\n  }\n\n  removeVariant(variantIndex: number, event?: Event): void {\n    event.preventDefault()\n    this.variants.removeAt(variantIndex)\n  }\n\n  // for variants\n  selectFile(event: any, variantIndex: number) {\n    if (event.target.files) {\n      const reader = new FileReader();\n      reader.onload = (event: any) => {\n        this.variants.controls[variantIndex].get('image').setValue(event.target.result)\n      };\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  }\n\n  // for size guide\n  selectFileSizeGuide(event: any) {\n    if (event.target.files) {\n      const reader = new FileReader();\n      reader.onload = (event: any) => {\n        this.variantsForm.get('imgSizeGuide').setValue(event.target.result)\n      };\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  }\n\n  getVariantsValue(): ProductVariant[] {\n    const productVariants: ProductVariant[] = this.variants.controls.map(variantForm => {\n      return {\n        productVariantId: variantForm.get('id').value ?? null,\n        height: +variantForm.get('height').value,\n        width: +variantForm.get('width').value,\n        price: +variantForm.get('price').value,\n        quantity: +variantForm.get('quantity').value,\n        productSize: variantForm.get('size').value,\n        image: (variantForm.get('image').value != null)\n          ? { imageId: null, imageUrl: variantForm.get('image').value }\n          : null\n      };\n    });\n    return productVariants;\n  }\n\n  getImgSizeGuideValue(): Image {\n    return {\n      imageId: null,\n      imageUrl: this.variantsForm.get(\"imgSizeGuide\").value\n    }\n  }\n\n}\n","<div class=\"row d-flex justify-content-center\">\n    <div class=\"col-12 d-flex justify-content-center\">\n        <h4>Variants Information #2</h4>\n    </div>\n    <div class=\"row\" [formGroup]=\"variantsForm\">\n        <div class=\"col-lg-6 mt-5\">\n            <nb-accordion multi formArrayName=\"variants\">\n                <nb-accordion-item *ngFor=\"let variantForm of variants.controls; let i = index\">\n                    <nb-accordion-item-header class=\"d-flex justify-content-between align-items-center\">\n                        <p class=\"font-weight-bold\">Variant #{{i + 1}}</p>\n                        <ng-container *ngIf=\"i !== 0\">\n                            <button nbButton [size]=\"'small'\" [status]=\"'danger'\" class=\"mr-5\"\n                                (click)=\"removeVariant(i, $event)\">\n                                <nb-icon icon=\"trash-outline\"></nb-icon>\n                            </button>\n                        </ng-container>\n                        <ng-container *ngIf=\"i === 0\">\n                            <button nbButton [size]=\"'small'\" [status]=\"'danger'\" class=\"mr-5\"\n                                (click)=\"removeVariant(i, $event)\" style=\"visibility: hidden\">\n                                <nb-icon icon=\"trash-outline\"></nb-icon>\n                            </button>\n                        </ng-container>\n                    </nb-accordion-item-header>\n                    <nb-accordion-item-body [formGroup]=\"variantForm\">\n                        <div class=\"row\">\n                            <div class=\"col-lg-6 col-md-12 my-2\">\n                                <input type=\"number\" nbInput fullWidth placeholder=\"Height (cm)\"\n                                    formControlName=\"height\">\n                                <div class=\"alert alert-danger mt-1\"\n                                    *ngIf=\"variantForm.get('height').invalid && (variantForm.get('height').dirty || variantForm.get('height').touched)\">\n                                    <div *ngIf=\"variantForm.get('height').errors['required']\">\n                                        Height is required\n                                    </div>\n                                    <div *ngIf=\"variantForm.get('height').errors['min']\">\n                                        Min value is 1\n                                    </div>\n                                    <div *ngIf=\"variantForm.get('height').errors['max']\">\n                                        Max value is 10000\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-lg-6 col-md-12 my-2\">\n                                <input type=\"number\" nbInput fullWidth placeholder=\"Width (cm)\" formControlName=\"width\">\n                                <div class=\"alert alert-danger mt-1\"\n                                    *ngIf=\"variantForm.get('width').invalid && (variantForm.get('width').dirty || variantForm.get('width').touched)\">\n                                    <div *ngIf=\"variantForm.get('width').errors['required']\">\n                                        Width is required\n                                    </div>\n                                    <div *ngIf=\"variantForm.get('width').errors['min']\">\n                                        Min value is 1\n                                    </div>\n                                    <div *ngIf=\"variantForm.get('width').errors['max']\">\n                                        Max value is 10000\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"col-lg-6 col-md-12 my-2\">\n                                <input type=\"number\" nbInput fullWidth placeholder=\"Price ($)\" formControlName=\"price\">\n                                <div class=\"alert alert-danger mt-1\"\n                                    *ngIf=\"variantForm.get('price').invalid && (variantForm.get('price').dirty || variantForm.get('price').touched)\">\n                                    <div *ngIf=\"variantForm.get('price').errors['required']\">\n                                        Price is required\n                                    </div>\n                                    <div *ngIf=\"variantForm.get('price').errors['min']\">\n                                        Min value is 1\n                                    </div>\n                                    <div *ngIf=\"variantForm.get('price').errors['max']\">\n                                        Max value is 10000\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-lg-6 col-md-12 my-2\">\n                                <input type=\"number\" nbInput fullWidth placeholder=\"Quantity\"\n                                    formControlName=\"quantity\">\n                                <div class=\"alert alert-danger mt-1\"\n                                    *ngIf=\"variantForm.get('quantity').invalid && (variantForm.get('quantity').dirty || variantForm.get('quantity').touched)\">\n                                    <div *ngIf=\"variantForm.get('quantity').errors['required']\">\n                                        Quantity is required\n                                    </div>\n                                    <div *ngIf=\"variantForm.get('quantity').errors['min']\">\n                                        Min value is 1\n                                    </div>\n                                    <div *ngIf=\"variantForm.get('quantity').errors['max']\">\n                                        Max value is 10000\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"col-lg-12 my-2\">\n                                <nb-select fullWidth placeholder=\"Size\" formControlName=\"size\">\n                                    <nb-select-label>\n                                        Size: {{ variantForm.get('size').value !== null ?\n                                        variantForm.get('size').value['sizeName'] : null}}\n                                    </nb-select-label>\n                                    <ng-container *ngIf=\"mode !== 'edit'\">\n                                        <nb-option>Reset</nb-option>\n                                    </ng-container>\n                                    <nb-option *ngFor=\"let size of sizes\" [value]=\"size\">{{size.sizeName}}</nb-option>\n                                </nb-select>\n                                <div class=\"alert alert-danger mt-1\"\n                                    *ngIf=\"variantForm.get('size').invalid && (variantForm.get('size').dirty || variantForm.get('size').touched)\">\n                                    <div *ngIf=\"variantForm.get('size').errors['required']\">\n                                        Size is required\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"col-12\">\n                                <div class=\"row\">\n                                    <div class=\"col-lg-6 col-md-12 d-flex align-items-center\">\n                                        <div class=\"input-group mb-3\">\n                                            <div class=\"custom-file\">\n                                                <input type=\"file\" class=\"custom-file-input\"\n                                                    accept=\"image/png, image/jpeg\" (change)=\"selectFile($event, i)\">\n                                                <label class=\"custom-file-label\">Choose image</label>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-lg-6 col-md-12 d-flex justify-content-center align-items-center border border-primary\"\n                                        style=\"height: 200px\">\n                                        <ng-container *ngIf=\"variantForm.get('image').value !== null\">\n                                            <div style=\"width: 100%; height: 100%; display: flex; justify-content: center; align-items: center;\">\n                                                <img class=\"d-block\"[src]=\"variantForm.get('image').value\" alt=\"Slide Image\"\n                                                    style=\"max-width: 100%; max-height: 200px; width: auto; height: 100%;\">\n                                            </div>\n                                        </ng-container>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </nb-accordion-item-body>\n                </nb-accordion-item>\n            </nb-accordion>\n            <button nbButton [status]=\"'success'\" (click)=\"addVariant($event)\" class=\"mt-3\">\n                <nb-icon icon=\"plus-outline\"></nb-icon>\n            </button>\n        </div>\n        <div class=\"col-lg-6 col-md-12 mt-5\">\n            <div class=\"input-group mb-3\">\n                <div class=\"custom-file\">\n                    <input type=\"file\" class=\"custom-file-input\" accept=\"image/png, image/jpeg\"\n                        (change)=\"selectFileSizeGuide($event)\">\n                    <label class=\"custom-file-label\">Choose Size Guide Image</label>\n                </div>\n            </div>\n            <div class=\"row d-flex justify-content-center align-item-center\">\n                <div class=\"col-8 d-flex justify-content-center align-item-center border border-primary\"\n                    style=\"height: 275px\">\n                    <ng-container *ngIf=\"variantsForm.get('imgSizeGuide').value !== null\">\n                        <img [src]=\"variantsForm.get('imgSizeGuide').value\" class=\"d-block w-100\" alt=\"Slide Image\"\n                            style=\"max-height: 300px; object-fit: contain;\">\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'ngx-item-of-list',\n  templateUrl: './item-of-list.component.html',\n  styleUrls: ['./item-of-list.component.scss']\n})\nexport class ItemOfListComponent {\n\n  DEFAULT_OPTION = 10\n  options = [5, 10, 20, 50]\n  chosenOpt: number = localStorage.getItem('itemPerPage') != null ?\n    +localStorage.getItem('itemPerPage') : this.DEFAULT_OPTION\n\n  @Output() selectNumberOfItem: EventEmitter<number> = new EventEmitter<number>()\n  constructor() { }\n\n  numberOfItemsChange(event: any) {\n    this.selectNumberOfItem.emit(event)\n    this.chosenOpt = event\n    localStorage.setItem('itemPerPage', event.toString())\n  }\n\n}\n","<nb-select [placeholder]=\"'Items Per Page'\" \n    (selectedChange)=\"numberOfItemsChange($event)\">\n    <nb-select-label>\n        Number Of Item: {{ chosenOpt }}\n    </nb-select-label>\n    <nb-option *ngFor=\"let opt of options\" [value]=\"opt\">{{opt}}</nb-option>\n</nb-select>","import { NgModule } from \"@angular/core\";\r\nimport { NbSelectModule } from \"@nebular/theme\";\r\nimport { ItemOfListComponent } from \"./item-of-list/item-of-list.component\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        NbSelectModule,\r\n        FormsModule\r\n    ],\r\n    declarations: [\r\n        ItemOfListComponent\r\n    ],\r\n    exports: [\r\n        ItemOfListComponent\r\n    ]\r\n  })\r\n  export class SharedModule { }","export const environment = {\r\n  production: false,\r\n  // apiUrl: \"http://localhost:9090\"\r\n  apiUrl: \"https://techwizplantnest-production.up.railway.app\",\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","var map = {\n\t\"./af\": 58685,\n\t\"./af.js\": 58685,\n\t\"./ar\": 254,\n\t\"./ar-dz\": 4312,\n\t\"./ar-dz.js\": 4312,\n\t\"./ar-kw\": 32614,\n\t\"./ar-kw.js\": 32614,\n\t\"./ar-ly\": 18630,\n\t\"./ar-ly.js\": 18630,\n\t\"./ar-ma\": 28674,\n\t\"./ar-ma.js\": 28674,\n\t\"./ar-sa\": 49032,\n\t\"./ar-sa.js\": 49032,\n\t\"./ar-tn\": 24730,\n\t\"./ar-tn.js\": 24730,\n\t\"./ar.js\": 254,\n\t\"./az\": 53052,\n\t\"./az.js\": 53052,\n\t\"./be\": 60150,\n\t\"./be.js\": 60150,\n\t\"./bg\": 63069,\n\t\"./bg.js\": 63069,\n\t\"./bn\": 18516,\n\t\"./bn.js\": 18516,\n\t\"./bo\": 26273,\n\t\"./bo.js\": 26273,\n\t\"./br\": 9588,\n\t\"./br.js\": 9588,\n\t\"./bs\": 19815,\n\t\"./bs.js\": 19815,\n\t\"./ca\": 83331,\n\t\"./ca.js\": 83331,\n\t\"./cs\": 21320,\n\t\"./cs.js\": 21320,\n\t\"./cv\": 72219,\n\t\"./cv.js\": 72219,\n\t\"./cy\": 68266,\n\t\"./cy.js\": 68266,\n\t\"./da\": 66427,\n\t\"./da.js\": 66427,\n\t\"./de\": 67435,\n\t\"./de-at\": 52871,\n\t\"./de-at.js\": 52871,\n\t\"./de-ch\": 12994,\n\t\"./de-ch.js\": 12994,\n\t\"./de.js\": 67435,\n\t\"./dv\": 82357,\n\t\"./dv.js\": 82357,\n\t\"./el\": 95649,\n\t\"./el.js\": 95649,\n\t\"./en-au\": 59961,\n\t\"./en-au.js\": 59961,\n\t\"./en-ca\": 19878,\n\t\"./en-ca.js\": 19878,\n\t\"./en-gb\": 3924,\n\t\"./en-gb.js\": 3924,\n\t\"./en-ie\": 70864,\n\t\"./en-ie.js\": 70864,\n\t\"./en-nz\": 16181,\n\t\"./en-nz.js\": 16181,\n\t\"./eo\": 85291,\n\t\"./eo.js\": 85291,\n\t\"./es\": 54529,\n\t\"./es-do\": 53764,\n\t\"./es-do.js\": 53764,\n\t\"./es.js\": 54529,\n\t\"./et\": 35203,\n\t\"./et.js\": 35203,\n\t\"./eu\": 70678,\n\t\"./eu.js\": 70678,\n\t\"./fa\": 83483,\n\t\"./fa.js\": 83483,\n\t\"./fi\": 96262,\n\t\"./fi.js\": 96262,\n\t\"./fo\": 34555,\n\t\"./fo.js\": 34555,\n\t\"./fr\": 63131,\n\t\"./fr-ca\": 88239,\n\t\"./fr-ca.js\": 88239,\n\t\"./fr-ch\": 21702,\n\t\"./fr-ch.js\": 21702,\n\t\"./fr.js\": 63131,\n\t\"./fy\": 267,\n\t\"./fy.js\": 267,\n\t\"./gd\": 71753,\n\t\"./gd.js\": 71753,\n\t\"./gl\": 4074,\n\t\"./gl.js\": 4074,\n\t\"./gom-latn\": 5969,\n\t\"./gom-latn.js\": 5969,\n\t\"./he\": 45402,\n\t\"./he.js\": 45402,\n\t\"./hi\": 315,\n\t\"./hi.js\": 315,\n\t\"./hr\": 10410,\n\t\"./hr.js\": 10410,\n\t\"./hu\": 38288,\n\t\"./hu.js\": 38288,\n\t\"./hy-am\": 67928,\n\t\"./hy-am.js\": 67928,\n\t\"./id\": 71334,\n\t\"./id.js\": 71334,\n\t\"./is\": 86959,\n\t\"./is.js\": 86959,\n\t\"./it\": 34864,\n\t\"./it.js\": 34864,\n\t\"./ja\": 36141,\n\t\"./ja.js\": 36141,\n\t\"./jv\": 29187,\n\t\"./jv.js\": 29187,\n\t\"./ka\": 42136,\n\t\"./ka.js\": 42136,\n\t\"./kk\": 94332,\n\t\"./kk.js\": 94332,\n\t\"./km\": 18607,\n\t\"./km.js\": 18607,\n\t\"./kn\": 84305,\n\t\"./kn.js\": 84305,\n\t\"./ko\": 70234,\n\t\"./ko.js\": 70234,\n\t\"./ky\": 75061,\n\t\"./ky.js\": 75061,\n\t\"./lb\": 32786,\n\t\"./lb.js\": 32786,\n\t\"./lo\": 66183,\n\t\"./lo.js\": 66183,\n\t\"./lt\": 50029,\n\t\"./lt.js\": 50029,\n\t\"./lv\": 24169,\n\t\"./lv.js\": 24169,\n\t\"./me\": 68577,\n\t\"./me.js\": 68577,\n\t\"./mi\": 68177,\n\t\"./mi.js\": 68177,\n\t\"./mk\": 50337,\n\t\"./mk.js\": 50337,\n\t\"./ml\": 65260,\n\t\"./ml.js\": 65260,\n\t\"./mr\": 14695,\n\t\"./mr.js\": 14695,\n\t\"./ms\": 75334,\n\t\"./ms-my\": 37151,\n\t\"./ms-my.js\": 37151,\n\t\"./ms.js\": 75334,\n\t\"./my\": 97963,\n\t\"./my.js\": 97963,\n\t\"./nb\": 88028,\n\t\"./nb.js\": 88028,\n\t\"./ne\": 86638,\n\t\"./ne.js\": 86638,\n\t\"./nl\": 50302,\n\t\"./nl-be\": 66782,\n\t\"./nl-be.js\": 66782,\n\t\"./nl.js\": 50302,\n\t\"./nn\": 33501,\n\t\"./nn.js\": 33501,\n\t\"./pa-in\": 50869,\n\t\"./pa-in.js\": 50869,\n\t\"./pl\": 65302,\n\t\"./pl.js\": 65302,\n\t\"./pt\": 49687,\n\t\"./pt-br\": 74884,\n\t\"./pt-br.js\": 74884,\n\t\"./pt.js\": 49687,\n\t\"./ro\": 79107,\n\t\"./ro.js\": 79107,\n\t\"./ru\": 33627,\n\t\"./ru.js\": 33627,\n\t\"./sd\": 30355,\n\t\"./sd.js\": 30355,\n\t\"./se\": 83427,\n\t\"./se.js\": 83427,\n\t\"./si\": 11848,\n\t\"./si.js\": 11848,\n\t\"./sk\": 54590,\n\t\"./sk.js\": 54590,\n\t\"./sl\": 20184,\n\t\"./sl.js\": 20184,\n\t\"./sq\": 56361,\n\t\"./sq.js\": 56361,\n\t\"./sr\": 78965,\n\t\"./sr-cyrl\": 81287,\n\t\"./sr-cyrl.js\": 81287,\n\t\"./sr.js\": 78965,\n\t\"./ss\": 25456,\n\t\"./ss.js\": 25456,\n\t\"./sv\": 70451,\n\t\"./sv.js\": 70451,\n\t\"./sw\": 77558,\n\t\"./sw.js\": 77558,\n\t\"./ta\": 51356,\n\t\"./ta.js\": 51356,\n\t\"./te\": 73693,\n\t\"./te.js\": 73693,\n\t\"./tet\": 21243,\n\t\"./tet.js\": 21243,\n\t\"./th\": 55768,\n\t\"./th.js\": 55768,\n\t\"./tl-ph\": 35780,\n\t\"./tl-ph.js\": 35780,\n\t\"./tlh\": 29590,\n\t\"./tlh.js\": 29590,\n\t\"./tr\": 33807,\n\t\"./tr.js\": 33807,\n\t\"./tzl\": 93857,\n\t\"./tzl.js\": 93857,\n\t\"./tzm\": 60654,\n\t\"./tzm-latn\": 8806,\n\t\"./tzm-latn.js\": 8806,\n\t\"./tzm.js\": 60654,\n\t\"./uk\": 19232,\n\t\"./uk.js\": 19232,\n\t\"./ur\": 47052,\n\t\"./ur.js\": 47052,\n\t\"./uz\": 77967,\n\t\"./uz-latn\": 32233,\n\t\"./uz-latn.js\": 32233,\n\t\"./uz.js\": 77967,\n\t\"./vi\": 98615,\n\t\"./vi.js\": 98615,\n\t\"./x-pseudo\": 12320,\n\t\"./x-pseudo.js\": 12320,\n\t\"./yo\": 31313,\n\t\"./yo.js\": 31313,\n\t\"./zh-cn\": 64490,\n\t\"./zh-cn.js\": 64490,\n\t\"./zh-hk\": 55910,\n\t\"./zh-hk.js\": 55910,\n\t\"./zh-tw\": 44223,\n\t\"./zh-tw.js\": 44223\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"names":["ToastState","QueryList","FormArray","FormBuilder","FormGroup","Validators","NbAccordionItemComponent","CompleterCmp","Observable","switchMap","startWith","CustomValidator","isCouponCantBeUsed","isCouponNotExisting","isEmailNotExisting","isProductNotExisting","Order","isEqual","i0","option_r18","OrderAddComponent","constructor","orderService","orderStatusService","paymentMethodService","accountService","formBuilder","productService","utilsService","addressService","couponService","router","value","label","disabled","settingFormGroup","addOrderFormGroup","group","accountForm","email","notBlank","applyCoupon","coupon","required","totalPrice","totalQuantity","orderStatus","paymentMethod","addressOption","province","district","ward","roadName","maxLength","address","products","array","controls","ngOnInit","findAll","subscribe","data","orderStatuses","_embedded","paymentMethods","addProduct","accountCompleter","onAddressOptionChange","onAddressChange","onCouponChange","ngAfterViewInit","setTimeout","accordions","first","toggle","accountCompleter$","get","valueChanges","pipe","enteredEmail","findByEmailKeyword","selectCustomer","account","setValue","findByAccountId","id","existingAddresses","length","addressOptions","loadProvinces","findAllProvinces","console","log","provinces","loadDistricts","event","selectedProvince","findAllDistrictByProvince","code","districts","loadWards","selectedDistrict","findAllWardByDistrict","wards","patchValue","couponControl","statusChanges","status","findByCode","appliedCoupon","countTotalPriceAndTotalQuantity","productCompleter","productFormIndex","productCompleter$","at","enteredProductName","findByNameKeyword","productForm","product","name","variant","variants","price","maxQuantity","quantity","min","push","removeProduct","removeAt","selectProduct","productName","findVariantsFromProductId","productId","variantControl","setValidators","max","i","parseInt","parseFloat","couponType","typeName","discount","onSubmit","setErrors","invalid","markAllAsTouched","updateToastState","order","mapFormValue","insert","navigate","error","accountEmail","addressId","productVariant","getSizeStrFromVariant","productSize","sizeName","height","width","selectors","viewQuery","ctx","$event"],"sourceRoot":"webpack:///","x_google_ignoreList":[185]}